//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medicus.SVC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RendezVou", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class RendezVou : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinNomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinPrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NuméroRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrisParField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> RendezVousDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> RendezVousFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpécialitéMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TéléphoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Confirm {
            get {
                return this.ConfirmField;
            }
            set {
                if ((this.ConfirmField.Equals(value) != true)) {
                    this.ConfirmField = value;
                    this.RaisePropertyChanged("Confirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinNom {
            get {
                return this.MedecinNomField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinNomField, value) != true)) {
                    this.MedecinNomField = value;
                    this.RaisePropertyChanged("MedecinNom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinPrénom {
            get {
                return this.MedecinPrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinPrénomField, value) != true)) {
                    this.MedecinPrénomField = value;
                    this.RaisePropertyChanged("MedecinPrénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NuméroRendezVous {
            get {
                return this.NuméroRendezVousField;
            }
            set {
                if ((object.ReferenceEquals(this.NuméroRendezVousField, value) != true)) {
                    this.NuméroRendezVousField = value;
                    this.RaisePropertyChanged("NuméroRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrisPar {
            get {
                return this.PrisParField;
            }
            set {
                if ((object.ReferenceEquals(this.PrisParField, value) != true)) {
                    this.PrisParField = value;
                    this.RaisePropertyChanged("PrisPar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> RendezVousD {
            get {
                return this.RendezVousDField;
            }
            set {
                if ((this.RendezVousDField.Equals(value) != true)) {
                    this.RendezVousDField = value;
                    this.RaisePropertyChanged("RendezVousD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> RendezVousF {
            get {
                return this.RendezVousFField;
            }
            set {
                if ((this.RendezVousFField.Equals(value) != true)) {
                    this.RendezVousFField = value;
                    this.RaisePropertyChanged("RendezVousF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpécialitéMedecin {
            get {
                return this.SpécialitéMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.SpécialitéMedecinField, value) != true)) {
                    this.SpécialitéMedecinField = value;
                    this.RaisePropertyChanged("SpécialitéMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Téléphone {
            get {
                return this.TéléphoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TéléphoneField, value) != true)) {
                    this.TéléphoneField = value;
                    this.RaisePropertyChanged("Téléphone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheminPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDeNaissanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DossierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatCivField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FonctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupeSanguinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NuméroSSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SoldeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SuiviParCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiviParNomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiviParPrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TéléphoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assurance {
            get {
                return this.AssuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.AssuranceField, value) != true)) {
                    this.AssuranceField = value;
                    this.RaisePropertyChanged("Assurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheminPhoto {
            get {
                return this.CheminPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.CheminPhotoField, value) != true)) {
                    this.CheminPhotoField = value;
                    this.RaisePropertyChanged("CheminPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDeNaissance {
            get {
                return this.DateDeNaissanceField;
            }
            set {
                if ((this.DateDeNaissanceField.Equals(value) != true)) {
                    this.DateDeNaissanceField = value;
                    this.RaisePropertyChanged("DateDeNaissance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Dossier {
            get {
                return this.DossierField;
            }
            set {
                if ((this.DossierField.Equals(value) != true)) {
                    this.DossierField = value;
                    this.RaisePropertyChanged("Dossier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtatCiv {
            get {
                return this.EtatCivField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatCivField, value) != true)) {
                    this.EtatCivField = value;
                    this.RaisePropertyChanged("EtatCiv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fonction {
            get {
                return this.FonctionField;
            }
            set {
                if ((object.ReferenceEquals(this.FonctionField, value) != true)) {
                    this.FonctionField = value;
                    this.RaisePropertyChanged("Fonction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupeSanguin {
            get {
                return this.GroupeSanguinField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupeSanguinField, value) != true)) {
                    this.GroupeSanguinField = value;
                    this.RaisePropertyChanged("GroupeSanguin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPrenom {
            get {
                return this.NomPrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPrenomField, value) != true)) {
                    this.NomPrenomField = value;
                    this.RaisePropertyChanged("NomPrenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NuméroSS {
            get {
                return this.NuméroSSField;
            }
            set {
                if ((object.ReferenceEquals(this.NuméroSSField, value) != true)) {
                    this.NuméroSSField = value;
                    this.RaisePropertyChanged("NuméroSS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ref {
            get {
                return this.RefField;
            }
            set {
                if ((this.RefField.Equals(value) != true)) {
                    this.RefField = value;
                    this.RaisePropertyChanged("Ref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexe {
            get {
                return this.SexeField;
            }
            set {
                if ((object.ReferenceEquals(this.SexeField, value) != true)) {
                    this.SexeField = value;
                    this.RaisePropertyChanged("Sexe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Solde {
            get {
                return this.SoldeField;
            }
            set {
                if ((this.SoldeField.Equals(value) != true)) {
                    this.SoldeField = value;
                    this.RaisePropertyChanged("Solde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuiviParCode {
            get {
                return this.SuiviParCodeField;
            }
            set {
                if ((this.SuiviParCodeField.Equals(value) != true)) {
                    this.SuiviParCodeField = value;
                    this.RaisePropertyChanged("SuiviParCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiviParNom {
            get {
                return this.SuiviParNomField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiviParNomField, value) != true)) {
                    this.SuiviParNomField = value;
                    this.RaisePropertyChanged("SuiviParNom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiviParPrénom {
            get {
                return this.SuiviParPrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiviParPrénomField, value) != true)) {
                    this.SuiviParPrénomField = value;
                    this.RaisePropertyChanged("SuiviParPrénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Téléphone {
            get {
                return this.TéléphoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TéléphoneField, value) != true)) {
                    this.TéléphoneField = value;
                    this.RaisePropertyChanged("Téléphone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Actif {
            get {
                return this.ActifField;
            }
            set {
                if ((this.ActifField.Equals(value) != true)) {
                    this.ActifField = value;
                    this.RaisePropertyChanged("Actif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Chat {
            get {
                return this.ChatField;
            }
            set {
                if ((this.ChatField.Equals(value) != true)) {
                    this.ChatField = value;
                    this.RaisePropertyChanged("Chat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMessage", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class FileMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalleDattente", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class SalleDattente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> ArrivéeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateArrivéeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDeNaissanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRendezField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FinDeConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MedecinSalleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumFilleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NuméroRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> QuitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> RdvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TempsChezMedecinSalleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TempsQuitMedecinSalleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Arrivée {
            get {
                return this.ArrivéeField;
            }
            set {
                if ((this.ArrivéeField.Equals(value) != true)) {
                    this.ArrivéeField = value;
                    this.RaisePropertyChanged("Arrivée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commentaire {
            get {
                return this.CommentaireField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentaireField, value) != true)) {
                    this.CommentaireField = value;
                    this.RaisePropertyChanged("Commentaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateArrivée {
            get {
                return this.DateArrivéeField;
            }
            set {
                if ((this.DateArrivéeField.Equals(value) != true)) {
                    this.DateArrivéeField = value;
                    this.RaisePropertyChanged("DateArrivée");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDeNaissance {
            get {
                return this.DateDeNaissanceField;
            }
            set {
                if ((this.DateDeNaissanceField.Equals(value) != true)) {
                    this.DateDeNaissanceField = value;
                    this.RaisePropertyChanged("DateDeNaissance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRendez {
            get {
                return this.DateRendezField;
            }
            set {
                if ((this.DateRendezField.Equals(value) != true)) {
                    this.DateRendezField = value;
                    this.RaisePropertyChanged("DateRendez");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FinDeConsultation {
            get {
                return this.FinDeConsultationField;
            }
            set {
                if ((this.FinDeConsultationField.Equals(value) != true)) {
                    this.FinDeConsultationField = value;
                    this.RaisePropertyChanged("FinDeConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MedecinSalle {
            get {
                return this.MedecinSalleField;
            }
            set {
                if ((this.MedecinSalleField.Equals(value) != true)) {
                    this.MedecinSalleField = value;
                    this.RaisePropertyChanged("MedecinSalle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomMedecin {
            get {
                return this.NomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.NomMedecinField, value) != true)) {
                    this.NomMedecinField = value;
                    this.RaisePropertyChanged("NomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumFilleAttente {
            get {
                return this.NumFilleAttenteField;
            }
            set {
                if ((this.NumFilleAttenteField.Equals(value) != true)) {
                    this.NumFilleAttenteField = value;
                    this.RaisePropertyChanged("NumFilleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NuméroRendezVous {
            get {
                return this.NuméroRendezVousField;
            }
            set {
                if ((object.ReferenceEquals(this.NuméroRendezVousField, value) != true)) {
                    this.NuméroRendezVousField = value;
                    this.RaisePropertyChanged("NuméroRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomMedecin {
            get {
                return this.PrénomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomMedecinField, value) != true)) {
                    this.PrénomMedecinField = value;
                    this.RaisePropertyChanged("PrénomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Quit {
            get {
                return this.QuitField;
            }
            set {
                if ((this.QuitField.Equals(value) != true)) {
                    this.QuitField = value;
                    this.RaisePropertyChanged("Quit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Rdv {
            get {
                return this.RdvField;
            }
            set {
                if ((this.RdvField.Equals(value) != true)) {
                    this.RdvField = value;
                    this.RaisePropertyChanged("Rdv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TempsChezMedecinSalle {
            get {
                return this.TempsChezMedecinSalleField;
            }
            set {
                if ((this.TempsChezMedecinSalleField.Equals(value) != true)) {
                    this.TempsChezMedecinSalleField = value;
                    this.RaisePropertyChanged("TempsChezMedecinSalle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TempsQuitMedecinSalle {
            get {
                return this.TempsQuitMedecinSalleField;
            }
            set {
                if ((this.TempsQuitMedecinSalleField.Equals(value) != true)) {
                    this.TempsQuitMedecinSalleField = value;
                    this.RaisePropertyChanged("TempsQuitMedecinSalle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Param", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Param : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasDePage1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasDePage2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BasDePage3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasNonTraiterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasTraiterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheminLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatbuccalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinSalleNONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinSalleTjrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MontantVisiteLorsVersementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProthèseCommandéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProthèseNonCommandéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RdvNoPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RdvPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalleAttenteQuitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalleAttenteTjrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisteNonRégléField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisteRégléField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasDePage1 {
            get {
                return this.BasDePage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BasDePage1Field, value) != true)) {
                    this.BasDePage1Field = value;
                    this.RaisePropertyChanged("BasDePage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasDePage2 {
            get {
                return this.BasDePage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BasDePage2Field, value) != true)) {
                    this.BasDePage2Field = value;
                    this.RaisePropertyChanged("BasDePage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BasDePage3 {
            get {
                return this.BasDePage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BasDePage3Field, value) != true)) {
                    this.BasDePage3Field = value;
                    this.RaisePropertyChanged("BasDePage3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasNonTraiter {
            get {
                return this.CasNonTraiterField;
            }
            set {
                if ((object.ReferenceEquals(this.CasNonTraiterField, value) != true)) {
                    this.CasNonTraiterField = value;
                    this.RaisePropertyChanged("CasNonTraiter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasTraiter {
            get {
                return this.CasTraiterField;
            }
            set {
                if ((object.ReferenceEquals(this.CasTraiterField, value) != true)) {
                    this.CasTraiterField = value;
                    this.RaisePropertyChanged("CasTraiter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheminLogo {
            get {
                return this.CheminLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CheminLogoField, value) != true)) {
                    this.CheminLogoField = value;
                    this.RaisePropertyChanged("CheminLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete1 {
            get {
                return this.Entete1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Entete1Field, value) != true)) {
                    this.Entete1Field = value;
                    this.RaisePropertyChanged("Entete1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete2 {
            get {
                return this.Entete2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Entete2Field, value) != true)) {
                    this.Entete2Field = value;
                    this.RaisePropertyChanged("Entete2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete3 {
            get {
                return this.Entete3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Entete3Field, value) != true)) {
                    this.Entete3Field = value;
                    this.RaisePropertyChanged("Entete3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Etatbuccal {
            get {
                return this.EtatbuccalField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatbuccalField, value) != true)) {
                    this.EtatbuccalField = value;
                    this.RaisePropertyChanged("Etatbuccal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinSalleNON {
            get {
                return this.MedecinSalleNONField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinSalleNONField, value) != true)) {
                    this.MedecinSalleNONField = value;
                    this.RaisePropertyChanged("MedecinSalleNON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinSalleTjr {
            get {
                return this.MedecinSalleTjrField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinSalleTjrField, value) != true)) {
                    this.MedecinSalleTjrField = value;
                    this.RaisePropertyChanged("MedecinSalleTjr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> MontantVisiteLorsVersement {
            get {
                return this.MontantVisiteLorsVersementField;
            }
            set {
                if ((this.MontantVisiteLorsVersementField.Equals(value) != true)) {
                    this.MontantVisiteLorsVersementField = value;
                    this.RaisePropertyChanged("MontantVisiteLorsVersement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProthèseCommandé {
            get {
                return this.ProthèseCommandéField;
            }
            set {
                if ((object.ReferenceEquals(this.ProthèseCommandéField, value) != true)) {
                    this.ProthèseCommandéField = value;
                    this.RaisePropertyChanged("ProthèseCommandé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProthèseNonCommandé {
            get {
                return this.ProthèseNonCommandéField;
            }
            set {
                if ((object.ReferenceEquals(this.ProthèseNonCommandéField, value) != true)) {
                    this.ProthèseNonCommandéField = value;
                    this.RaisePropertyChanged("ProthèseNonCommandé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RdvNoPresent {
            get {
                return this.RdvNoPresentField;
            }
            set {
                if ((object.ReferenceEquals(this.RdvNoPresentField, value) != true)) {
                    this.RdvNoPresentField = value;
                    this.RaisePropertyChanged("RdvNoPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RdvPresent {
            get {
                return this.RdvPresentField;
            }
            set {
                if ((object.ReferenceEquals(this.RdvPresentField, value) != true)) {
                    this.RdvPresentField = value;
                    this.RaisePropertyChanged("RdvPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalleAttenteQuit {
            get {
                return this.SalleAttenteQuitField;
            }
            set {
                if ((object.ReferenceEquals(this.SalleAttenteQuitField, value) != true)) {
                    this.SalleAttenteQuitField = value;
                    this.RaisePropertyChanged("SalleAttenteQuit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalleAttenteTjr {
            get {
                return this.SalleAttenteTjrField;
            }
            set {
                if ((object.ReferenceEquals(this.SalleAttenteTjrField, value) != true)) {
                    this.SalleAttenteTjrField = value;
                    this.RaisePropertyChanged("SalleAttenteTjr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisteNonRéglé {
            get {
                return this.VisteNonRégléField;
            }
            set {
                if ((object.ReferenceEquals(this.VisteNonRégléField, value) != true)) {
                    this.VisteNonRégléField = value;
                    this.RaisePropertyChanged("VisteNonRéglé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisteRéglé {
            get {
                return this.VisteRégléField;
            }
            set {
                if ((object.ReferenceEquals(this.VisteRégléField, value) != true)) {
                    this.VisteRégléField = value;
                    this.RaisePropertyChanged("VisteRéglé");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dictionnaire", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Dictionnaire : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Explication {
            get {
                return this.ExplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExplicationField, value) != true)) {
                    this.ExplicationField = value;
                    this.RaisePropertyChanged("Explication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mot {
            get {
                return this.MotField;
            }
            set {
                if ((object.ReferenceEquals(this.MotField, value) != true)) {
                    this.MotField = value;
                    this.RaisePropertyChanged("Mot");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutreBilan", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class AutreBilan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Date1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> Date2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValeurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date1 {
            get {
                return this.Date1Field;
            }
            set {
                if ((this.Date1Field.Equals(value) != true)) {
                    this.Date1Field = value;
                    this.RaisePropertyChanged("Date1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Date2 {
            get {
                return this.Date2Field;
            }
            set {
                if ((this.Date2Field.Equals(value) != true)) {
                    this.Date2Field = value;
                    this.RaisePropertyChanged("Date2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Examen {
            get {
                return this.ExamenField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenField, value) != true)) {
                    this.ExamenField = value;
                    this.RaisePropertyChanged("Examen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valeur {
            get {
                return this.ValeurField;
            }
            set {
                if ((object.ReferenceEquals(this.ValeurField, value) != true)) {
                    this.ValeurField = value;
                    this.RaisePropertyChanged("Valeur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Diagnostic", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Diagnostic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AffectionsendocrinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AffectionspancréatiquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AlcoolismeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AlimentairericheengraisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AsthénieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AugmentationdelasoifetdelafaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreAntécédentsmédicauxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreSymptomatologieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutreTypealimentaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutresSituationProfessionneleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BesoinfréquentdurinerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ChômageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CoupuresetblessuresquicicatrisentlentementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DesdémangeaisonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DouleursHépatiquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DouleursThoraciquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DouleursaumolletsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DyspnéesdeffortsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnactivitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenPeauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenPiedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FrèreousoeurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FuronclesàrépétitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraisseRépartitonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HypercaloriqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HyperlipidiquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HypertensionartérielleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> IMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InfectionsFemmeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InfectionsHommeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InsensibilitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuffisancecardiaqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MacroangiopathieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MèreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NorologiqueExamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OedèmesdesmembresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PauvreenfibresalimentairesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PrisedepoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ProblèmecardiovasculaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ProblèmedentaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PulsationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PèreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RetraitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SituationFamilialeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SituationparticulièrefemmeAccouchementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SituationparticulièrefemmeDiabèteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoufflesvasculairesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SédentaritéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TabagismeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TailleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TensionartérielleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TensionartérielleorthostatiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TraitementcorticothérapiecontraceptifsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TroublesdelérectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UneétudedelacuitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisionfloueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string autreatecedentfamilleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string autrefacteurderisqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string chautrefemmeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string étatvascularisationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Affectionsendocrines {
            get {
                return this.AffectionsendocrinesField;
            }
            set {
                if ((this.AffectionsendocrinesField.Equals(value) != true)) {
                    this.AffectionsendocrinesField = value;
                    this.RaisePropertyChanged("Affectionsendocrines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Affectionspancréatiques {
            get {
                return this.AffectionspancréatiquesField;
            }
            set {
                if ((this.AffectionspancréatiquesField.Equals(value) != true)) {
                    this.AffectionspancréatiquesField = value;
                    this.RaisePropertyChanged("Affectionspancréatiques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Alcoolisme {
            get {
                return this.AlcoolismeField;
            }
            set {
                if ((this.AlcoolismeField.Equals(value) != true)) {
                    this.AlcoolismeField = value;
                    this.RaisePropertyChanged("Alcoolisme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Alimentairericheengraisse {
            get {
                return this.AlimentairericheengraisseField;
            }
            set {
                if ((this.AlimentairericheengraisseField.Equals(value) != true)) {
                    this.AlimentairericheengraisseField = value;
                    this.RaisePropertyChanged("Alimentairericheengraisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Asthénie {
            get {
                return this.AsthénieField;
            }
            set {
                if ((this.AsthénieField.Equals(value) != true)) {
                    this.AsthénieField = value;
                    this.RaisePropertyChanged("Asthénie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Augmentationdelasoifetdelafaim {
            get {
                return this.AugmentationdelasoifetdelafaimField;
            }
            set {
                if ((this.AugmentationdelasoifetdelafaimField.Equals(value) != true)) {
                    this.AugmentationdelasoifetdelafaimField = value;
                    this.RaisePropertyChanged("Augmentationdelasoifetdelafaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreAntécédentsmédicaux {
            get {
                return this.AutreAntécédentsmédicauxField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreAntécédentsmédicauxField, value) != true)) {
                    this.AutreAntécédentsmédicauxField = value;
                    this.RaisePropertyChanged("AutreAntécédentsmédicaux");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreSymptomatologie {
            get {
                return this.AutreSymptomatologieField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreSymptomatologieField, value) != true)) {
                    this.AutreSymptomatologieField = value;
                    this.RaisePropertyChanged("AutreSymptomatologie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutreTypealimentaire {
            get {
                return this.AutreTypealimentaireField;
            }
            set {
                if ((object.ReferenceEquals(this.AutreTypealimentaireField, value) != true)) {
                    this.AutreTypealimentaireField = value;
                    this.RaisePropertyChanged("AutreTypealimentaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutresSituationProfessionnele {
            get {
                return this.AutresSituationProfessionneleField;
            }
            set {
                if ((object.ReferenceEquals(this.AutresSituationProfessionneleField, value) != true)) {
                    this.AutresSituationProfessionneleField = value;
                    this.RaisePropertyChanged("AutresSituationProfessionnele");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Besoinfréquentduriner {
            get {
                return this.BesoinfréquentdurinerField;
            }
            set {
                if ((this.BesoinfréquentdurinerField.Equals(value) != true)) {
                    this.BesoinfréquentdurinerField = value;
                    this.RaisePropertyChanged("Besoinfréquentduriner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Chômage {
            get {
                return this.ChômageField;
            }
            set {
                if ((this.ChômageField.Equals(value) != true)) {
                    this.ChômageField = value;
                    this.RaisePropertyChanged("Chômage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cle {
            get {
                return this.CleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleField, value) != true)) {
                    this.CleField = value;
                    this.RaisePropertyChanged("Cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Coupuresetblessuresquicicatrisentlentement {
            get {
                return this.CoupuresetblessuresquicicatrisentlentementField;
            }
            set {
                if ((this.CoupuresetblessuresquicicatrisentlentementField.Equals(value) != true)) {
                    this.CoupuresetblessuresquicicatrisentlentementField = value;
                    this.RaisePropertyChanged("Coupuresetblessuresquicicatrisentlentement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Desdémangeaisons {
            get {
                return this.DesdémangeaisonsField;
            }
            set {
                if ((this.DesdémangeaisonsField.Equals(value) != true)) {
                    this.DesdémangeaisonsField = value;
                    this.RaisePropertyChanged("Desdémangeaisons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DouleursHépatiques {
            get {
                return this.DouleursHépatiquesField;
            }
            set {
                if ((this.DouleursHépatiquesField.Equals(value) != true)) {
                    this.DouleursHépatiquesField = value;
                    this.RaisePropertyChanged("DouleursHépatiques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DouleursThoraciques {
            get {
                return this.DouleursThoraciquesField;
            }
            set {
                if ((this.DouleursThoraciquesField.Equals(value) != true)) {
                    this.DouleursThoraciquesField = value;
                    this.RaisePropertyChanged("DouleursThoraciques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Douleursaumollets {
            get {
                return this.DouleursaumolletsField;
            }
            set {
                if ((this.DouleursaumolletsField.Equals(value) != true)) {
                    this.DouleursaumolletsField = value;
                    this.RaisePropertyChanged("Douleursaumollets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dyspnéesdefforts {
            get {
                return this.DyspnéesdeffortsField;
            }
            set {
                if ((this.DyspnéesdeffortsField.Equals(value) != true)) {
                    this.DyspnéesdeffortsField = value;
                    this.RaisePropertyChanged("Dyspnéesdefforts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Enactivité {
            get {
                return this.EnactivitéField;
            }
            set {
                if ((this.EnactivitéField.Equals(value) != true)) {
                    this.EnactivitéField = value;
                    this.RaisePropertyChanged("Enactivité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamenPeau {
            get {
                return this.ExamenPeauField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenPeauField, value) != true)) {
                    this.ExamenPeauField = value;
                    this.RaisePropertyChanged("ExamenPeau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamenPieds {
            get {
                return this.ExamenPiedsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenPiedsField, value) != true)) {
                    this.ExamenPiedsField = value;
                    this.RaisePropertyChanged("ExamenPieds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Frèreousoeur {
            get {
                return this.FrèreousoeurField;
            }
            set {
                if ((this.FrèreousoeurField.Equals(value) != true)) {
                    this.FrèreousoeurField = value;
                    this.RaisePropertyChanged("Frèreousoeur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Furonclesàrépétition {
            get {
                return this.FuronclesàrépétitionField;
            }
            set {
                if ((this.FuronclesàrépétitionField.Equals(value) != true)) {
                    this.FuronclesàrépétitionField = value;
                    this.RaisePropertyChanged("Furonclesàrépétition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GraisseRépartiton {
            get {
                return this.GraisseRépartitonField;
            }
            set {
                if ((object.ReferenceEquals(this.GraisseRépartitonField, value) != true)) {
                    this.GraisseRépartitonField = value;
                    this.RaisePropertyChanged("GraisseRépartiton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Hypercalorique {
            get {
                return this.HypercaloriqueField;
            }
            set {
                if ((this.HypercaloriqueField.Equals(value) != true)) {
                    this.HypercaloriqueField = value;
                    this.RaisePropertyChanged("Hypercalorique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Hyperlipidiques {
            get {
                return this.HyperlipidiquesField;
            }
            set {
                if ((this.HyperlipidiquesField.Equals(value) != true)) {
                    this.HyperlipidiquesField = value;
                    this.RaisePropertyChanged("Hyperlipidiques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Hypertensionartérielle {
            get {
                return this.HypertensionartérielleField;
            }
            set {
                if ((this.HypertensionartérielleField.Equals(value) != true)) {
                    this.HypertensionartérielleField = value;
                    this.RaisePropertyChanged("Hypertensionartérielle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> IMC {
            get {
                return this.IMCField;
            }
            set {
                if ((this.IMCField.Equals(value) != true)) {
                    this.IMCField = value;
                    this.RaisePropertyChanged("IMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdVisite {
            get {
                return this.IdVisiteField;
            }
            set {
                if ((this.IdVisiteField.Equals(value) != true)) {
                    this.IdVisiteField = value;
                    this.RaisePropertyChanged("IdVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InfectionsFemme {
            get {
                return this.InfectionsFemmeField;
            }
            set {
                if ((this.InfectionsFemmeField.Equals(value) != true)) {
                    this.InfectionsFemmeField = value;
                    this.RaisePropertyChanged("InfectionsFemme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InfectionsHomme {
            get {
                return this.InfectionsHommeField;
            }
            set {
                if ((this.InfectionsHommeField.Equals(value) != true)) {
                    this.InfectionsHommeField = value;
                    this.RaisePropertyChanged("InfectionsHomme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Insensibilité {
            get {
                return this.InsensibilitéField;
            }
            set {
                if ((this.InsensibilitéField.Equals(value) != true)) {
                    this.InsensibilitéField = value;
                    this.RaisePropertyChanged("Insensibilité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insuffisancecardiaque {
            get {
                return this.InsuffisancecardiaqueField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuffisancecardiaqueField, value) != true)) {
                    this.InsuffisancecardiaqueField = value;
                    this.RaisePropertyChanged("Insuffisancecardiaque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Macroangiopathie {
            get {
                return this.MacroangiopathieField;
            }
            set {
                if ((object.ReferenceEquals(this.MacroangiopathieField, value) != true)) {
                    this.MacroangiopathieField = value;
                    this.RaisePropertyChanged("Macroangiopathie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberUser {
            get {
                return this.MemberUserField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberUserField, value) != true)) {
                    this.MemberUserField = value;
                    this.RaisePropertyChanged("MemberUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Mère {
            get {
                return this.MèreField;
            }
            set {
                if ((this.MèreField.Equals(value) != true)) {
                    this.MèreField = value;
                    this.RaisePropertyChanged("Mère");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomMedecin {
            get {
                return this.NomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.NomMedecinField, value) != true)) {
                    this.NomMedecinField = value;
                    this.RaisePropertyChanged("NomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NorologiqueExamen {
            get {
                return this.NorologiqueExamenField;
            }
            set {
                if ((object.ReferenceEquals(this.NorologiqueExamenField, value) != true)) {
                    this.NorologiqueExamenField = value;
                    this.RaisePropertyChanged("NorologiqueExamen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oedèmesdesmembres {
            get {
                return this.OedèmesdesmembresField;
            }
            set {
                if ((object.ReferenceEquals(this.OedèmesdesmembresField, value) != true)) {
                    this.OedèmesdesmembresField = value;
                    this.RaisePropertyChanged("Oedèmesdesmembres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Pauvreenfibresalimentaires {
            get {
                return this.PauvreenfibresalimentairesField;
            }
            set {
                if ((this.PauvreenfibresalimentairesField.Equals(value) != true)) {
                    this.PauvreenfibresalimentairesField = value;
                    this.RaisePropertyChanged("Pauvreenfibresalimentaires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Poids {
            get {
                return this.PoidsField;
            }
            set {
                if ((this.PoidsField.Equals(value) != true)) {
                    this.PoidsField = value;
                    this.RaisePropertyChanged("Poids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Prisedepoids {
            get {
                return this.PrisedepoidsField;
            }
            set {
                if ((this.PrisedepoidsField.Equals(value) != true)) {
                    this.PrisedepoidsField = value;
                    this.RaisePropertyChanged("Prisedepoids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Problèmecardiovasculaire {
            get {
                return this.ProblèmecardiovasculaireField;
            }
            set {
                if ((this.ProblèmecardiovasculaireField.Equals(value) != true)) {
                    this.ProblèmecardiovasculaireField = value;
                    this.RaisePropertyChanged("Problèmecardiovasculaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Problèmedentaire {
            get {
                return this.ProblèmedentaireField;
            }
            set {
                if ((this.ProblèmedentaireField.Equals(value) != true)) {
                    this.ProblèmedentaireField = value;
                    this.RaisePropertyChanged("Problèmedentaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profil {
            get {
                return this.ProfilField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilField, value) != true)) {
                    this.ProfilField = value;
                    this.RaisePropertyChanged("Profil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomMedecin {
            get {
                return this.PrénomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomMedecinField, value) != true)) {
                    this.PrénomMedecinField = value;
                    this.RaisePropertyChanged("PrénomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Pulsation {
            get {
                return this.PulsationField;
            }
            set {
                if ((this.PulsationField.Equals(value) != true)) {
                    this.PulsationField = value;
                    this.RaisePropertyChanged("Pulsation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Père {
            get {
                return this.PèreField;
            }
            set {
                if ((this.PèreField.Equals(value) != true)) {
                    this.PèreField = value;
                    this.RaisePropertyChanged("Père");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Retraité {
            get {
                return this.RetraitéField;
            }
            set {
                if ((this.RetraitéField.Equals(value) != true)) {
                    this.RetraitéField = value;
                    this.RaisePropertyChanged("Retraité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SituationFamiliale {
            get {
                return this.SituationFamilialeField;
            }
            set {
                if ((object.ReferenceEquals(this.SituationFamilialeField, value) != true)) {
                    this.SituationFamilialeField = value;
                    this.RaisePropertyChanged("SituationFamiliale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SituationparticulièrefemmeAccouchement {
            get {
                return this.SituationparticulièrefemmeAccouchementField;
            }
            set {
                if ((this.SituationparticulièrefemmeAccouchementField.Equals(value) != true)) {
                    this.SituationparticulièrefemmeAccouchementField = value;
                    this.RaisePropertyChanged("SituationparticulièrefemmeAccouchement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SituationparticulièrefemmeDiabète {
            get {
                return this.SituationparticulièrefemmeDiabèteField;
            }
            set {
                if ((this.SituationparticulièrefemmeDiabèteField.Equals(value) != true)) {
                    this.SituationparticulièrefemmeDiabèteField = value;
                    this.RaisePropertyChanged("SituationparticulièrefemmeDiabète");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soufflesvasculaires {
            get {
                return this.SoufflesvasculairesField;
            }
            set {
                if ((object.ReferenceEquals(this.SoufflesvasculairesField, value) != true)) {
                    this.SoufflesvasculairesField = value;
                    this.RaisePropertyChanged("Soufflesvasculaires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Sédentarité {
            get {
                return this.SédentaritéField;
            }
            set {
                if ((this.SédentaritéField.Equals(value) != true)) {
                    this.SédentaritéField = value;
                    this.RaisePropertyChanged("Sédentarité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Tabagisme {
            get {
                return this.TabagismeField;
            }
            set {
                if ((this.TabagismeField.Equals(value) != true)) {
                    this.TabagismeField = value;
                    this.RaisePropertyChanged("Tabagisme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Taille {
            get {
                return this.TailleField;
            }
            set {
                if ((this.TailleField.Equals(value) != true)) {
                    this.TailleField = value;
                    this.RaisePropertyChanged("Taille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tensionartérielle {
            get {
                return this.TensionartérielleField;
            }
            set {
                if ((object.ReferenceEquals(this.TensionartérielleField, value) != true)) {
                    this.TensionartérielleField = value;
                    this.RaisePropertyChanged("Tensionartérielle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tensionartérielleorthostatique {
            get {
                return this.TensionartérielleorthostatiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.TensionartérielleorthostatiqueField, value) != true)) {
                    this.TensionartérielleorthostatiqueField = value;
                    this.RaisePropertyChanged("Tensionartérielleorthostatique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Traitementcorticothérapiecontraceptifs {
            get {
                return this.TraitementcorticothérapiecontraceptifsField;
            }
            set {
                if ((this.TraitementcorticothérapiecontraceptifsField.Equals(value) != true)) {
                    this.TraitementcorticothérapiecontraceptifsField = value;
                    this.RaisePropertyChanged("Traitementcorticothérapiecontraceptifs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Troublesdelérection {
            get {
                return this.TroublesdelérectionField;
            }
            set {
                if ((this.TroublesdelérectionField.Equals(value) != true)) {
                    this.TroublesdelérectionField = value;
                    this.RaisePropertyChanged("Troublesdelérection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uneétudedelacuité {
            get {
                return this.UneétudedelacuitéField;
            }
            set {
                if ((object.ReferenceEquals(this.UneétudedelacuitéField, value) != true)) {
                    this.UneétudedelacuitéField = value;
                    this.RaisePropertyChanged("Uneétudedelacuité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Visionfloue {
            get {
                return this.VisionfloueField;
            }
            set {
                if ((this.VisionfloueField.Equals(value) != true)) {
                    this.VisionfloueField = value;
                    this.RaisePropertyChanged("Visionfloue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string autreatecedentfamille {
            get {
                return this.autreatecedentfamilleField;
            }
            set {
                if ((object.ReferenceEquals(this.autreatecedentfamilleField, value) != true)) {
                    this.autreatecedentfamilleField = value;
                    this.RaisePropertyChanged("autreatecedentfamille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string autrefacteurderisque {
            get {
                return this.autrefacteurderisqueField;
            }
            set {
                if ((object.ReferenceEquals(this.autrefacteurderisqueField, value) != true)) {
                    this.autrefacteurderisqueField = value;
                    this.RaisePropertyChanged("autrefacteurderisque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string chautrefemme {
            get {
                return this.chautrefemmeField;
            }
            set {
                if ((object.ReferenceEquals(this.chautrefemmeField, value) != true)) {
                    this.chautrefemmeField = value;
                    this.RaisePropertyChanged("chautrefemme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string étatvascularisation {
            get {
                return this.étatvascularisationField;
            }
            set {
                if ((object.ReferenceEquals(this.étatvascularisationField, value) != true)) {
                    this.étatvascularisationField = value;
                    this.RaisePropertyChanged("étatvascularisation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnteteOrdonnace", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class EnteteOrdonnace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> créerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdMedecin {
            get {
                return this.IdMedecinField;
            }
            set {
                if ((this.IdMedecinField.Equals(value) != true)) {
                    this.IdMedecinField = value;
                    this.RaisePropertyChanged("IdMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> créer {
            get {
                return this.créerField;
            }
            set {
                if ((this.créerField.Equals(value) != true)) {
                    this.créerField = value;
                    this.RaisePropertyChanged("créer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdonnancePatient", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class OrdonnancePatient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeCnasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeOrdonnanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeProduitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DosageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDciField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitéDeMesureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dciField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeCnas {
            get {
                return this.CodeCnasField;
            }
            set {
                if ((this.CodeCnasField.Equals(value) != true)) {
                    this.CodeCnasField = value;
                    this.RaisePropertyChanged("CodeCnas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeOrdonnance {
            get {
                return this.CodeOrdonnanceField;
            }
            set {
                if ((this.CodeOrdonnanceField.Equals(value) != true)) {
                    this.CodeOrdonnanceField = value;
                    this.RaisePropertyChanged("CodeOrdonnance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeProduit {
            get {
                return this.CodeProduitField;
            }
            set {
                if ((this.CodeProduitField.Equals(value) != true)) {
                    this.CodeProduitField = value;
                    this.RaisePropertyChanged("CodeProduit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colisage {
            get {
                return this.ColisageField;
            }
            set {
                if ((object.ReferenceEquals(this.ColisageField, value) != true)) {
                    this.ColisageField = value;
                    this.RaisePropertyChanged("Colisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Design {
            get {
                return this.DesignField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignField, value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage {
            get {
                return this.DosageField;
            }
            set {
                if ((object.ReferenceEquals(this.DosageField, value) != true)) {
                    this.DosageField = value;
                    this.RaisePropertyChanged("Dosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDci {
            get {
                return this.IdDciField;
            }
            set {
                if ((this.IdDciField.Equals(value) != true)) {
                    this.IdDciField = value;
                    this.RaisePropertyChanged("IdDci");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantite {
            get {
                return this.QuantiteField;
            }
            set {
                if ((this.QuantiteField.Equals(value) != true)) {
                    this.QuantiteField = value;
                    this.RaisePropertyChanged("Quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitéDeMesure {
            get {
                return this.UnitéDeMesureField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitéDeMesureField, value) != true)) {
                    this.UnitéDeMesureField = value;
                    this.RaisePropertyChanged("UnitéDeMesure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dci {
            get {
                return this.dciField;
            }
            set {
                if ((object.ReferenceEquals(this.dciField, value) != true)) {
                    this.dciField = value;
                    this.RaisePropertyChanged("dci");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Acte", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Acte : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdCatalogueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalogue {
            get {
                return this.CatalogueField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogueField, value) != true)) {
                    this.CatalogueField = value;
                    this.RaisePropertyChanged("Catalogue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCatalogue {
            get {
                return this.IdCatalogueField;
            }
            set {
                if ((this.IdCatalogueField.Equals(value) != true)) {
                    this.IdCatalogueField = value;
                    this.RaisePropertyChanged("IdCatalogue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Prix {
            get {
                return this.PrixField;
            }
            set {
                if ((this.PrixField.Equals(value) != true)) {
                    this.PrixField = value;
                    this.RaisePropertyChanged("Prix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Catalogue", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Catalogue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Catalogue1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalogue1 {
            get {
                return this.Catalogue1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Catalogue1Field, value) != true)) {
                    this.Catalogue1Field = value;
                    this.RaisePropertyChanged("Catalogue1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepeiementMultiple", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class DepeiementMultiple : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomMedecin {
            get {
                return this.NomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.NomMedecinField, value) != true)) {
                    this.NomMedecinField = value;
                    this.RaisePropertyChanged("NomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomMedecin {
            get {
                return this.PrénomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomMedecinField, value) != true)) {
                    this.PrénomMedecinField = value;
                    this.RaisePropertyChanged("PrénomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleMultiple {
            get {
                return this.cleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleMultipleField, value) != true)) {
                    this.cleMultipleField = value;
                    this.RaisePropertyChanged("cleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cleVisite {
            get {
                return this.cleVisiteField;
            }
            set {
                if ((object.ReferenceEquals(this.cleVisiteField, value) != true)) {
                    this.cleVisiteField = value;
                    this.RaisePropertyChanged("cleVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Depeiment", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Depeiment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CleMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> amontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string banqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> datesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> enregField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> montantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nfactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paiemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CleMultiple {
            get {
                return this.CleMultipleField;
            }
            set {
                if ((object.ReferenceEquals(this.CleMultipleField, value) != true)) {
                    this.CleMultipleField = value;
                    this.RaisePropertyChanged("CleMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomMedecin {
            get {
                return this.NomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.NomMedecinField, value) != true)) {
                    this.NomMedecinField = value;
                    this.RaisePropertyChanged("NomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomMedecin {
            get {
                return this.PrénomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomMedecinField, value) != true)) {
                    this.PrénomMedecinField = value;
                    this.RaisePropertyChanged("PrénomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> amontant {
            get {
                return this.amontantField;
            }
            set {
                if ((this.amontantField.Equals(value) != true)) {
                    this.amontantField = value;
                    this.RaisePropertyChanged("amontant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string banque {
            get {
                return this.banqueField;
            }
            set {
                if ((object.ReferenceEquals(this.banqueField, value) != true)) {
                    this.banqueField = value;
                    this.RaisePropertyChanged("banque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cp {
            get {
                return this.cpField;
            }
            set {
                if ((this.cpField.Equals(value) != true)) {
                    this.cpField = value;
                    this.RaisePropertyChanged("cp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dates {
            get {
                return this.datesField;
            }
            set {
                if ((this.datesField.Equals(value) != true)) {
                    this.datesField = value;
                    this.RaisePropertyChanged("dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> enreg {
            get {
                return this.enregField;
            }
            set {
                if ((this.enregField.Equals(value) != true)) {
                    this.enregField = value;
                    this.RaisePropertyChanged("enreg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nfact {
            get {
                return this.nfactField;
            }
            set {
                if ((object.ReferenceEquals(this.nfactField, value) != true)) {
                    this.nfactField = value;
                    this.RaisePropertyChanged("nfact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string oper {
            get {
                return this.operField;
            }
            set {
                if ((object.ReferenceEquals(this.operField, value) != true)) {
                    this.operField = value;
                    this.RaisePropertyChanged("oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paiem {
            get {
                return this.paiemField;
            }
            set {
                if ((object.ReferenceEquals(this.paiemField, value) != true)) {
                    this.paiemField = value;
                    this.RaisePropertyChanged("paiem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DicomFichier", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class DicomFichier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcquisitionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcquisitionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChemainFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DicomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomFichierDicomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameInDicomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcquisitionDate {
            get {
                return this.AcquisitionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.AcquisitionDateField, value) != true)) {
                    this.AcquisitionDateField = value;
                    this.RaisePropertyChanged("AcquisitionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcquisitionTime {
            get {
                return this.AcquisitionTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.AcquisitionTimeField, value) != true)) {
                    this.AcquisitionTimeField = value;
                    this.RaisePropertyChanged("AcquisitionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChemainFichier {
            get {
                return this.ChemainFichierField;
            }
            set {
                if ((object.ReferenceEquals(this.ChemainFichierField, value) != true)) {
                    this.ChemainFichierField = value;
                    this.RaisePropertyChanged("ChemainFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dicom {
            get {
                return this.DicomField;
            }
            set {
                if ((this.DicomField.Equals(value) != true)) {
                    this.DicomField = value;
                    this.RaisePropertyChanged("Dicom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Image {
            get {
                return this.ImageField;
            }
            set {
                if ((this.ImageField.Equals(value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomFichierDicom {
            get {
                return this.NomFichierDicomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomFichierDicomField, value) != true)) {
                    this.NomFichierDicomField = value;
                    this.RaisePropertyChanged("NomFichierDicom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientNameInDicom {
            get {
                return this.PatientNameInDicomField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameInDicomField, value) != true)) {
                    this.PatientNameInDicomField = value;
                    this.RaisePropertyChanged("PatientNameInDicom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArretDetravail", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class ArretDetravail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AsignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDebutArretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateNaissancePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FaitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LieudeNaissancePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NbjourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPrenomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> autoriséesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string compteurarretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> nonautoriséesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asignature {
            get {
                return this.AsignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.AsignatureField, value) != true)) {
                    this.AsignatureField = value;
                    this.RaisePropertyChanged("Asignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((object.ReferenceEquals(this.CodePatientField, value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDebutArret {
            get {
                return this.DateDebutArretField;
            }
            set {
                if ((this.DateDebutArretField.Equals(value) != true)) {
                    this.DateDebutArretField = value;
                    this.RaisePropertyChanged("DateDebutArret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateNaissancePatient {
            get {
                return this.DateNaissancePatientField;
            }
            set {
                if ((this.DateNaissancePatientField.Equals(value) != true)) {
                    this.DateNaissancePatientField = value;
                    this.RaisePropertyChanged("DateNaissancePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Faitle {
            get {
                return this.FaitleField;
            }
            set {
                if ((this.FaitleField.Equals(value) != true)) {
                    this.FaitleField = value;
                    this.RaisePropertyChanged("Faitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LieudeNaissancePatient {
            get {
                return this.LieudeNaissancePatientField;
            }
            set {
                if ((object.ReferenceEquals(this.LieudeNaissancePatientField, value) != true)) {
                    this.LieudeNaissancePatientField = value;
                    this.RaisePropertyChanged("LieudeNaissancePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nbjour {
            get {
                return this.NbjourField;
            }
            set {
                if ((object.ReferenceEquals(this.NbjourField, value) != true)) {
                    this.NbjourField = value;
                    this.RaisePropertyChanged("Nbjour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomMedecin {
            get {
                return this.NomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.NomMedecinField, value) != true)) {
                    this.NomMedecinField = value;
                    this.RaisePropertyChanged("NomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPrenomPatient {
            get {
                return this.NomPrenomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPrenomPatientField, value) != true)) {
                    this.NomPrenomPatientField = value;
                    this.RaisePropertyChanged("NomPrenomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomMedecin {
            get {
                return this.PrénomMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomMedecinField, value) != true)) {
                    this.PrénomMedecinField = value;
                    this.RaisePropertyChanged("PrénomMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> autorisées {
            get {
                return this.autoriséesField;
            }
            set {
                if ((this.autoriséesField.Equals(value) != true)) {
                    this.autoriséesField = value;
                    this.RaisePropertyChanged("autorisées");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string compteurarret {
            get {
                return this.compteurarretField;
            }
            set {
                if ((object.ReferenceEquals(this.compteurarretField, value) != true)) {
                    this.compteurarretField = value;
                    this.RaisePropertyChanged("compteurarret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> nonautorisées {
            get {
                return this.nonautoriséesField;
            }
            set {
                if ((this.nonautoriséesField.Equals(value) != true)) {
                    this.nonautoriséesField = value;
                    this.RaisePropertyChanged("nonautorisées");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProduitOrdonnance", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class ProduitOrdonnance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeCnasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColisageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DosageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDciField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitéDeMesureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dciField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeCnas {
            get {
                return this.CodeCnasField;
            }
            set {
                if ((this.CodeCnasField.Equals(value) != true)) {
                    this.CodeCnasField = value;
                    this.RaisePropertyChanged("CodeCnas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Colisage {
            get {
                return this.ColisageField;
            }
            set {
                if ((object.ReferenceEquals(this.ColisageField, value) != true)) {
                    this.ColisageField = value;
                    this.RaisePropertyChanged("Colisage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Design {
            get {
                return this.DesignField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignField, value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage {
            get {
                return this.DosageField;
            }
            set {
                if ((object.ReferenceEquals(this.DosageField, value) != true)) {
                    this.DosageField = value;
                    this.RaisePropertyChanged("Dosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDci {
            get {
                return this.IdDciField;
            }
            set {
                if ((this.IdDciField.Equals(value) != true)) {
                    this.IdDciField = value;
                    this.RaisePropertyChanged("IdDci");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitéDeMesure {
            get {
                return this.UnitéDeMesureField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitéDeMesureField, value) != true)) {
                    this.UnitéDeMesureField = value;
                    this.RaisePropertyChanged("UnitéDeMesure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dci {
            get {
                return this.dciField;
            }
            set {
                if ((object.ReferenceEquals(this.dciField, value) != true)) {
                    this.dciField = value;
                    this.RaisePropertyChanged("dci");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dci", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Dci : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Dci1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dci1 {
            get {
                return this.Dci1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dci1Field, value) != true)) {
                    this.Dci1Field = value;
                    this.RaisePropertyChanged("Dci1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Depense", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Depense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentairesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompteDébitéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDebitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateSaisieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DébitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantCréditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumChequeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Num_FactureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RubriqueComptableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commentaires {
            get {
                return this.CommentairesField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentairesField, value) != true)) {
                    this.CommentairesField = value;
                    this.RaisePropertyChanged("Commentaires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompteDébité {
            get {
                return this.CompteDébitéField;
            }
            set {
                if ((object.ReferenceEquals(this.CompteDébitéField, value) != true)) {
                    this.CompteDébitéField = value;
                    this.RaisePropertyChanged("CompteDébité");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Crédit {
            get {
                return this.CréditField;
            }
            set {
                if ((this.CréditField.Equals(value) != true)) {
                    this.CréditField = value;
                    this.RaisePropertyChanged("Crédit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDebit {
            get {
                return this.DateDebitField;
            }
            set {
                if ((this.DateDebitField.Equals(value) != true)) {
                    this.DateDebitField = value;
                    this.RaisePropertyChanged("DateDebit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateSaisie {
            get {
                return this.DateSaisieField;
            }
            set {
                if ((this.DateSaisieField.Equals(value) != true)) {
                    this.DateSaisieField = value;
                    this.RaisePropertyChanged("DateSaisie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Débit {
            get {
                return this.DébitField;
            }
            set {
                if ((this.DébitField.Equals(value) != true)) {
                    this.DébitField = value;
                    this.RaisePropertyChanged("Débit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModePaiement {
            get {
                return this.ModePaiementField;
            }
            set {
                if ((object.ReferenceEquals(this.ModePaiementField, value) != true)) {
                    this.ModePaiementField = value;
                    this.RaisePropertyChanged("ModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MontantCrédit {
            get {
                return this.MontantCréditField;
            }
            set {
                if ((this.MontantCréditField.Equals(value) != true)) {
                    this.MontantCréditField = value;
                    this.RaisePropertyChanged("MontantCrédit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumCheque {
            get {
                return this.NumChequeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumChequeField, value) != true)) {
                    this.NumChequeField = value;
                    this.RaisePropertyChanged("NumCheque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num_Facture {
            get {
                return this.Num_FactureField;
            }
            set {
                if ((object.ReferenceEquals(this.Num_FactureField, value) != true)) {
                    this.Num_FactureField = value;
                    this.RaisePropertyChanged("Num_Facture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RubriqueComptable {
            get {
                return this.RubriqueComptableField;
            }
            set {
                if ((object.ReferenceEquals(this.RubriqueComptableField, value) != true)) {
                    this.RubriqueComptableField = value;
                    this.RaisePropertyChanged("RubriqueComptable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MotifDepense", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class MotifDepense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotifD {
            get {
                return this.MotifDField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifDField, value) != true)) {
                    this.MotifDField = value;
                    this.RaisePropertyChanged("MotifD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeCa", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class TypeCa : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Examen {
            get {
                return this.ExamenField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenField, value) != true)) {
                    this.ExamenField = value;
                    this.RaisePropertyChanged("Examen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Constante", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Constante : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CholestéroltotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Date1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> Date2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GlycémieAjeunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GlycémiePostprandialeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HDL_cholestérolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HbA1cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> IMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LDL_cholestérolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Micro_albuminurieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PADField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PASField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PoidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PoulsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TailleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UréesanguineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UréeurinaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> créatininesanguinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> créatinineurinaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> triglycéridesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cholestéroltotal {
            get {
                return this.CholestéroltotalField;
            }
            set {
                if ((this.CholestéroltotalField.Equals(value) != true)) {
                    this.CholestéroltotalField = value;
                    this.RaisePropertyChanged("Cholestéroltotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date1 {
            get {
                return this.Date1Field;
            }
            set {
                if ((this.Date1Field.Equals(value) != true)) {
                    this.Date1Field = value;
                    this.RaisePropertyChanged("Date1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Date2 {
            get {
                return this.Date2Field;
            }
            set {
                if ((this.Date2Field.Equals(value) != true)) {
                    this.Date2Field = value;
                    this.RaisePropertyChanged("Date2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GlycémieAjeun {
            get {
                return this.GlycémieAjeunField;
            }
            set {
                if ((this.GlycémieAjeunField.Equals(value) != true)) {
                    this.GlycémieAjeunField = value;
                    this.RaisePropertyChanged("GlycémieAjeun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> GlycémiePostprandiale {
            get {
                return this.GlycémiePostprandialeField;
            }
            set {
                if ((this.GlycémiePostprandialeField.Equals(value) != true)) {
                    this.GlycémiePostprandialeField = value;
                    this.RaisePropertyChanged("GlycémiePostprandiale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HDL_cholestérol {
            get {
                return this.HDL_cholestérolField;
            }
            set {
                if ((this.HDL_cholestérolField.Equals(value) != true)) {
                    this.HDL_cholestérolField = value;
                    this.RaisePropertyChanged("HDL_cholestérol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HbA1c {
            get {
                return this.HbA1cField;
            }
            set {
                if ((this.HbA1cField.Equals(value) != true)) {
                    this.HbA1cField = value;
                    this.RaisePropertyChanged("HbA1c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> IMC {
            get {
                return this.IMCField;
            }
            set {
                if ((this.IMCField.Equals(value) != true)) {
                    this.IMCField = value;
                    this.RaisePropertyChanged("IMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LDL_cholestérol {
            get {
                return this.LDL_cholestérolField;
            }
            set {
                if ((this.LDL_cholestérolField.Equals(value) != true)) {
                    this.LDL_cholestérolField = value;
                    this.RaisePropertyChanged("LDL_cholestérol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Micro_albuminurie {
            get {
                return this.Micro_albuminurieField;
            }
            set {
                if ((this.Micro_albuminurieField.Equals(value) != true)) {
                    this.Micro_albuminurieField = value;
                    this.RaisePropertyChanged("Micro_albuminurie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PAD {
            get {
                return this.PADField;
            }
            set {
                if ((this.PADField.Equals(value) != true)) {
                    this.PADField = value;
                    this.RaisePropertyChanged("PAD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PAS {
            get {
                return this.PASField;
            }
            set {
                if ((this.PASField.Equals(value) != true)) {
                    this.PASField = value;
                    this.RaisePropertyChanged("PAS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Poid {
            get {
                return this.PoidField;
            }
            set {
                if ((this.PoidField.Equals(value) != true)) {
                    this.PoidField = value;
                    this.RaisePropertyChanged("Poid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Pouls {
            get {
                return this.PoulsField;
            }
            set {
                if ((this.PoulsField.Equals(value) != true)) {
                    this.PoulsField = value;
                    this.RaisePropertyChanged("Pouls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Taille {
            get {
                return this.TailleField;
            }
            set {
                if ((this.TailleField.Equals(value) != true)) {
                    this.TailleField = value;
                    this.RaisePropertyChanged("Taille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Temp {
            get {
                return this.TempField;
            }
            set {
                if ((this.TempField.Equals(value) != true)) {
                    this.TempField = value;
                    this.RaisePropertyChanged("Temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Uréesanguine {
            get {
                return this.UréesanguineField;
            }
            set {
                if ((this.UréesanguineField.Equals(value) != true)) {
                    this.UréesanguineField = value;
                    this.RaisePropertyChanged("Uréesanguine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Uréeurinaire {
            get {
                return this.UréeurinaireField;
            }
            set {
                if ((this.UréeurinaireField.Equals(value) != true)) {
                    this.UréeurinaireField = value;
                    this.RaisePropertyChanged("Uréeurinaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> créatininesanguin {
            get {
                return this.créatininesanguinField;
            }
            set {
                if ((this.créatininesanguinField.Equals(value) != true)) {
                    this.créatininesanguinField = value;
                    this.RaisePropertyChanged("créatininesanguin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> créatinineurinaire {
            get {
                return this.créatinineurinaireField;
            }
            set {
                if ((this.créatinineurinaireField.Equals(value) != true)) {
                    this.créatinineurinaireField = value;
                    this.RaisePropertyChanged("créatinineurinaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> triglycérides {
            get {
                return this.triglycéridesField;
            }
            set {
                if ((this.triglycéridesField.Equals(value) != true)) {
                    this.triglycéridesField = value;
                    this.RaisePropertyChanged("triglycérides");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasTraitement", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class CasTraitement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DevisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EtatActuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdCasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinNomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinPrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeFacturationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModeFacturationintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PrixForfaitaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VersementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cas {
            get {
                return this.CasField;
            }
            set {
                if ((object.ReferenceEquals(this.CasField, value) != true)) {
                    this.CasField = value;
                    this.RaisePropertyChanged("Cas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Devis {
            get {
                return this.DevisField;
            }
            set {
                if ((this.DevisField.Equals(value) != true)) {
                    this.DevisField = value;
                    this.RaisePropertyChanged("Devis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtatActuel {
            get {
                return this.EtatActuelField;
            }
            set {
                if ((object.ReferenceEquals(this.EtatActuelField, value) != true)) {
                    this.EtatActuelField = value;
                    this.RaisePropertyChanged("EtatActuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Histoire {
            get {
                return this.HistoireField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoireField, value) != true)) {
                    this.HistoireField = value;
                    this.RaisePropertyChanged("Histoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCas {
            get {
                return this.IdCasField;
            }
            set {
                if ((this.IdCasField.Equals(value) != true)) {
                    this.IdCasField = value;
                    this.RaisePropertyChanged("IdCas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinNom {
            get {
                return this.MedecinNomField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinNomField, value) != true)) {
                    this.MedecinNomField = value;
                    this.RaisePropertyChanged("MedecinNom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinPrénom {
            get {
                return this.MedecinPrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinPrénomField, value) != true)) {
                    this.MedecinPrénomField = value;
                    this.RaisePropertyChanged("MedecinPrénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeFacturation {
            get {
                return this.ModeFacturationField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeFacturationField, value) != true)) {
                    this.ModeFacturationField = value;
                    this.RaisePropertyChanged("ModeFacturation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModeFacturationint {
            get {
                return this.ModeFacturationintField;
            }
            set {
                if ((this.ModeFacturationintField.Equals(value) != true)) {
                    this.ModeFacturationintField = value;
                    this.RaisePropertyChanged("ModeFacturationint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PrixForfaitaire {
            get {
                return this.PrixForfaitaireField;
            }
            set {
                if ((this.PrixForfaitaireField.Equals(value) != true)) {
                    this.PrixForfaitaireField = value;
                    this.RaisePropertyChanged("PrixForfaitaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Reste {
            get {
                return this.ResteField;
            }
            set {
                if ((this.ResteField.Equals(value) != true)) {
                    this.ResteField = value;
                    this.RaisePropertyChanged("Reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Versement {
            get {
                return this.VersementField;
            }
            set {
                if ((this.VersementField.Equals(value) != true)) {
                    this.VersementField = value;
                    this.RaisePropertyChanged("Versement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Visite", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Visite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasTraiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> DatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DiagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HonorairesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdCasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDiagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdMotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterrogatoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModeFacturationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MontantActeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NuméroRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ResteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SoldéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VersementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisiteParNomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisiteParPrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasTraite {
            get {
                return this.CasTraiteField;
            }
            set {
                if ((object.ReferenceEquals(this.CasTraiteField, value) != true)) {
                    this.CasTraiteField = value;
                    this.RaisePropertyChanged("CasTraite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMedecin {
            get {
                return this.CodeMedecinField;
            }
            set {
                if ((this.CodeMedecinField.Equals(value) != true)) {
                    this.CodeMedecinField = value;
                    this.RaisePropertyChanged("CodeMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodePatient {
            get {
                return this.CodePatientField;
            }
            set {
                if ((this.CodePatientField.Equals(value) != true)) {
                    this.CodePatientField = value;
                    this.RaisePropertyChanged("CodePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Conclusions {
            get {
                return this.ConclusionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionsField, value) != true)) {
                    this.ConclusionsField = value;
                    this.RaisePropertyChanged("Conclusions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Datetime {
            get {
                return this.DatetimeField;
            }
            set {
                if ((this.DatetimeField.Equals(value) != true)) {
                    this.DatetimeField = value;
                    this.RaisePropertyChanged("Datetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Diag {
            get {
                return this.DiagField;
            }
            set {
                if ((this.DiagField.Equals(value) != true)) {
                    this.DiagField = value;
                    this.RaisePropertyChanged("Diag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Examen {
            get {
                return this.ExamenField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamenField, value) != true)) {
                    this.ExamenField = value;
                    this.RaisePropertyChanged("Examen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Honoraires {
            get {
                return this.HonorairesField;
            }
            set {
                if ((this.HonorairesField.Equals(value) != true)) {
                    this.HonorairesField = value;
                    this.RaisePropertyChanged("Honoraires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdCas {
            get {
                return this.IdCasField;
            }
            set {
                if ((this.IdCasField.Equals(value) != true)) {
                    this.IdCasField = value;
                    this.RaisePropertyChanged("IdCas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDiag {
            get {
                return this.IdDiagField;
            }
            set {
                if ((this.IdDiagField.Equals(value) != true)) {
                    this.IdDiagField = value;
                    this.RaisePropertyChanged("IdDiag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdMotif {
            get {
                return this.IdMotifField;
            }
            set {
                if ((this.IdMotifField.Equals(value) != true)) {
                    this.IdMotifField = value;
                    this.RaisePropertyChanged("IdMotif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interrogatoire {
            get {
                return this.InterrogatoireField;
            }
            set {
                if ((object.ReferenceEquals(this.InterrogatoireField, value) != true)) {
                    this.InterrogatoireField = value;
                    this.RaisePropertyChanged("Interrogatoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModeFacturation {
            get {
                return this.ModeFacturationField;
            }
            set {
                if ((this.ModeFacturationField.Equals(value) != true)) {
                    this.ModeFacturationField = value;
                    this.RaisePropertyChanged("ModeFacturation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MontantActe {
            get {
                return this.MontantActeField;
            }
            set {
                if ((this.MontantActeField.Equals(value) != true)) {
                    this.MontantActeField = value;
                    this.RaisePropertyChanged("MontantActe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPatient {
            get {
                return this.NomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPatientField, value) != true)) {
                    this.NomPatientField = value;
                    this.RaisePropertyChanged("NomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NuméroRendezVous {
            get {
                return this.NuméroRendezVousField;
            }
            set {
                if ((object.ReferenceEquals(this.NuméroRendezVousField, value) != true)) {
                    this.NuméroRendezVousField = value;
                    this.RaisePropertyChanged("NuméroRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrénomPatient {
            get {
                return this.PrénomPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomPatientField, value) != true)) {
                    this.PrénomPatientField = value;
                    this.RaisePropertyChanged("PrénomPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Reste {
            get {
                return this.ResteField;
            }
            set {
                if ((this.ResteField.Equals(value) != true)) {
                    this.ResteField = value;
                    this.RaisePropertyChanged("Reste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Soldé {
            get {
                return this.SoldéField;
            }
            set {
                if ((this.SoldéField.Equals(value) != true)) {
                    this.SoldéField = value;
                    this.RaisePropertyChanged("Soldé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Versement {
            get {
                return this.VersementField;
            }
            set {
                if ((this.VersementField.Equals(value) != true)) {
                    this.VersementField = value;
                    this.RaisePropertyChanged("Versement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisiteParNom {
            get {
                return this.VisiteParNomField;
            }
            set {
                if ((object.ReferenceEquals(this.VisiteParNomField, value) != true)) {
                    this.VisiteParNomField = value;
                    this.RaisePropertyChanged("VisiteParNom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisiteParPrénom {
            get {
                return this.VisiteParPrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.VisiteParPrénomField, value) != true)) {
                    this.VisiteParPrénomField = value;
                    this.RaisePropertyChanged("VisiteParPrénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cle {
            get {
                return this.cleField;
            }
            set {
                if ((object.ReferenceEquals(this.cleField, value) != true)) {
                    this.cleField = value;
                    this.RaisePropertyChanged("cle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medecin", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Medecin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DimancheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> DimancheDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> DimancheFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete01arField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete01frField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete02arField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete02frField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete03arField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete03frField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete04arField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Entete04frField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnteteCabinet01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnteteCabinet02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnteteCabinet03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IDusernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> JeudiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> JeudiDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> JeudiFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LundiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> LundiDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> LundiFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MardiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> MardiDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> MardiFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MercrediField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> MercrediDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> MercrediFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SamediField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> SamediDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> SamediFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpécialitéMedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TempsVisiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TéléphoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VendrediField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> VendrediDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> VendrediFField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Dimanche {
            get {
                return this.DimancheField;
            }
            set {
                if ((this.DimancheField.Equals(value) != true)) {
                    this.DimancheField = value;
                    this.RaisePropertyChanged("Dimanche");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> DimancheD {
            get {
                return this.DimancheDField;
            }
            set {
                if ((this.DimancheDField.Equals(value) != true)) {
                    this.DimancheDField = value;
                    this.RaisePropertyChanged("DimancheD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> DimancheF {
            get {
                return this.DimancheFField;
            }
            set {
                if ((this.DimancheFField.Equals(value) != true)) {
                    this.DimancheFField = value;
                    this.RaisePropertyChanged("DimancheF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete01ar {
            get {
                return this.Entete01arField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete01arField, value) != true)) {
                    this.Entete01arField = value;
                    this.RaisePropertyChanged("Entete01ar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete01fr {
            get {
                return this.Entete01frField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete01frField, value) != true)) {
                    this.Entete01frField = value;
                    this.RaisePropertyChanged("Entete01fr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete02ar {
            get {
                return this.Entete02arField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete02arField, value) != true)) {
                    this.Entete02arField = value;
                    this.RaisePropertyChanged("Entete02ar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete02fr {
            get {
                return this.Entete02frField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete02frField, value) != true)) {
                    this.Entete02frField = value;
                    this.RaisePropertyChanged("Entete02fr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete03ar {
            get {
                return this.Entete03arField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete03arField, value) != true)) {
                    this.Entete03arField = value;
                    this.RaisePropertyChanged("Entete03ar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete03fr {
            get {
                return this.Entete03frField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete03frField, value) != true)) {
                    this.Entete03frField = value;
                    this.RaisePropertyChanged("Entete03fr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete04ar {
            get {
                return this.Entete04arField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete04arField, value) != true)) {
                    this.Entete04arField = value;
                    this.RaisePropertyChanged("Entete04ar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entete04fr {
            get {
                return this.Entete04frField;
            }
            set {
                if ((object.ReferenceEquals(this.Entete04frField, value) != true)) {
                    this.Entete04frField = value;
                    this.RaisePropertyChanged("Entete04fr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnteteCabinet01 {
            get {
                return this.EnteteCabinet01Field;
            }
            set {
                if ((object.ReferenceEquals(this.EnteteCabinet01Field, value) != true)) {
                    this.EnteteCabinet01Field = value;
                    this.RaisePropertyChanged("EnteteCabinet01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnteteCabinet02 {
            get {
                return this.EnteteCabinet02Field;
            }
            set {
                if ((object.ReferenceEquals(this.EnteteCabinet02Field, value) != true)) {
                    this.EnteteCabinet02Field = value;
                    this.RaisePropertyChanged("EnteteCabinet02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnteteCabinet03 {
            get {
                return this.EnteteCabinet03Field;
            }
            set {
                if ((object.ReferenceEquals(this.EnteteCabinet03Field, value) != true)) {
                    this.EnteteCabinet03Field = value;
                    this.RaisePropertyChanged("EnteteCabinet03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IDusername {
            get {
                return this.IDusernameField;
            }
            set {
                if ((this.IDusernameField.Equals(value) != true)) {
                    this.IDusernameField = value;
                    this.RaisePropertyChanged("IDusername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Jeudi {
            get {
                return this.JeudiField;
            }
            set {
                if ((this.JeudiField.Equals(value) != true)) {
                    this.JeudiField = value;
                    this.RaisePropertyChanged("Jeudi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> JeudiD {
            get {
                return this.JeudiDField;
            }
            set {
                if ((this.JeudiDField.Equals(value) != true)) {
                    this.JeudiDField = value;
                    this.RaisePropertyChanged("JeudiD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> JeudiF {
            get {
                return this.JeudiFField;
            }
            set {
                if ((this.JeudiFField.Equals(value) != true)) {
                    this.JeudiFField = value;
                    this.RaisePropertyChanged("JeudiF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Lundi {
            get {
                return this.LundiField;
            }
            set {
                if ((this.LundiField.Equals(value) != true)) {
                    this.LundiField = value;
                    this.RaisePropertyChanged("Lundi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> LundiD {
            get {
                return this.LundiDField;
            }
            set {
                if ((this.LundiDField.Equals(value) != true)) {
                    this.LundiDField = value;
                    this.RaisePropertyChanged("LundiD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> LundiF {
            get {
                return this.LundiFField;
            }
            set {
                if ((this.LundiFField.Equals(value) != true)) {
                    this.LundiFField = value;
                    this.RaisePropertyChanged("LundiF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Mardi {
            get {
                return this.MardiField;
            }
            set {
                if ((this.MardiField.Equals(value) != true)) {
                    this.MardiField = value;
                    this.RaisePropertyChanged("Mardi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MardiD {
            get {
                return this.MardiDField;
            }
            set {
                if ((this.MardiDField.Equals(value) != true)) {
                    this.MardiDField = value;
                    this.RaisePropertyChanged("MardiD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MardiF {
            get {
                return this.MardiFField;
            }
            set {
                if ((this.MardiFField.Equals(value) != true)) {
                    this.MardiFField = value;
                    this.RaisePropertyChanged("MardiF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Mercredi {
            get {
                return this.MercrediField;
            }
            set {
                if ((this.MercrediField.Equals(value) != true)) {
                    this.MercrediField = value;
                    this.RaisePropertyChanged("Mercredi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MercrediD {
            get {
                return this.MercrediDField;
            }
            set {
                if ((this.MercrediDField.Equals(value) != true)) {
                    this.MercrediDField = value;
                    this.RaisePropertyChanged("MercrediD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MercrediF {
            get {
                return this.MercrediFField;
            }
            set {
                if ((this.MercrediFField.Equals(value) != true)) {
                    this.MercrediFField = value;
                    this.RaisePropertyChanged("MercrediF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Samedi {
            get {
                return this.SamediField;
            }
            set {
                if ((this.SamediField.Equals(value) != true)) {
                    this.SamediField = value;
                    this.RaisePropertyChanged("Samedi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> SamediD {
            get {
                return this.SamediDField;
            }
            set {
                if ((this.SamediDField.Equals(value) != true)) {
                    this.SamediDField = value;
                    this.RaisePropertyChanged("SamediD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> SamediF {
            get {
                return this.SamediFField;
            }
            set {
                if ((this.SamediFField.Equals(value) != true)) {
                    this.SamediFField = value;
                    this.RaisePropertyChanged("SamediF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpécialitéMedecin {
            get {
                return this.SpécialitéMedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.SpécialitéMedecinField, value) != true)) {
                    this.SpécialitéMedecinField = value;
                    this.RaisePropertyChanged("SpécialitéMedecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TempsVisite {
            get {
                return this.TempsVisiteField;
            }
            set {
                if ((this.TempsVisiteField.Equals(value) != true)) {
                    this.TempsVisiteField = value;
                    this.RaisePropertyChanged("TempsVisite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Téléphone {
            get {
                return this.TéléphoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TéléphoneField, value) != true)) {
                    this.TéléphoneField = value;
                    this.RaisePropertyChanged("Téléphone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Vendredi {
            get {
                return this.VendrediField;
            }
            set {
                if ((this.VendrediField.Equals(value) != true)) {
                    this.VendrediField = value;
                    this.RaisePropertyChanged("Vendredi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> VendrediD {
            get {
                return this.VendrediDField;
            }
            set {
                if ((this.VendrediDField.Equals(value) != true)) {
                    this.VendrediDField = value;
                    this.RaisePropertyChanged("VendrediD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> VendrediF {
            get {
                return this.VendrediFField;
            }
            set {
                if ((this.VendrediFField.Equals(value) != true)) {
                    this.VendrediFField = value;
                    this.RaisePropertyChanged("VendrediF");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Spécialité", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Spécialité : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Spécialité1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spécialité1 {
            get {
                return this.Spécialité1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Spécialité1Field, value) != true)) {
                    this.Spécialité1Field = value;
                    this.RaisePropertyChanged("Spécialité1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MotifVisite", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class MotifVisite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Membership", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class Membership : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AccèsToutLesDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiverServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationAdministrateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationLaboratoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CréationSalleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CréerLeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DernierAccésField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DiscussionPrivéField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnvoiReceptMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnvoiRécéptFichierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionAdministrateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionLaboratoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImpressionSalleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImressionCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationAdministrateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationLaboratoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModificationSalleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleAdministrateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleLaboratoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModulePatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ModuleSalleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotDePasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionAdministrateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionDossierPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionLaboratoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppressionRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SuppréssionCaisseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupressionAchatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SupressionSalleAttenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] imageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AccèsToutLesDossierPatient {
            get {
                return this.AccèsToutLesDossierPatientField;
            }
            set {
                if ((this.AccèsToutLesDossierPatientField.Equals(value) != true)) {
                    this.AccèsToutLesDossierPatientField = value;
                    this.RaisePropertyChanged("AccèsToutLesDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Actif {
            get {
                return this.ActifField;
            }
            set {
                if ((this.ActifField.Equals(value) != true)) {
                    this.ActifField = value;
                    this.RaisePropertyChanged("Actif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ActiverServer {
            get {
                return this.ActiverServerField;
            }
            set {
                if ((this.ActiverServerField.Equals(value) != true)) {
                    this.ActiverServerField = value;
                    this.RaisePropertyChanged("ActiverServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationAchat {
            get {
                return this.CréationAchatField;
            }
            set {
                if ((this.CréationAchatField.Equals(value) != true)) {
                    this.CréationAchatField = value;
                    this.RaisePropertyChanged("CréationAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationAdministrateur {
            get {
                return this.CréationAdministrateurField;
            }
            set {
                if ((this.CréationAdministrateurField.Equals(value) != true)) {
                    this.CréationAdministrateurField = value;
                    this.RaisePropertyChanged("CréationAdministrateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationCaisse {
            get {
                return this.CréationCaisseField;
            }
            set {
                if ((this.CréationCaisseField.Equals(value) != true)) {
                    this.CréationCaisseField = value;
                    this.RaisePropertyChanged("CréationCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationDossierPatient {
            get {
                return this.CréationDossierPatientField;
            }
            set {
                if ((this.CréationDossierPatientField.Equals(value) != true)) {
                    this.CréationDossierPatientField = value;
                    this.RaisePropertyChanged("CréationDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationLaboratoire {
            get {
                return this.CréationLaboratoireField;
            }
            set {
                if ((this.CréationLaboratoireField.Equals(value) != true)) {
                    this.CréationLaboratoireField = value;
                    this.RaisePropertyChanged("CréationLaboratoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationPatient {
            get {
                return this.CréationPatientField;
            }
            set {
                if ((this.CréationPatientField.Equals(value) != true)) {
                    this.CréationPatientField = value;
                    this.RaisePropertyChanged("CréationPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationRendezVous {
            get {
                return this.CréationRendezVousField;
            }
            set {
                if ((this.CréationRendezVousField.Equals(value) != true)) {
                    this.CréationRendezVousField = value;
                    this.RaisePropertyChanged("CréationRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CréationSalleAttente {
            get {
                return this.CréationSalleAttenteField;
            }
            set {
                if ((this.CréationSalleAttenteField.Equals(value) != true)) {
                    this.CréationSalleAttenteField = value;
                    this.RaisePropertyChanged("CréationSalleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CréerLe {
            get {
                return this.CréerLeField;
            }
            set {
                if ((this.CréerLeField.Equals(value) != true)) {
                    this.CréerLeField = value;
                    this.RaisePropertyChanged("CréerLe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DernierAccés {
            get {
                return this.DernierAccésField;
            }
            set {
                if ((this.DernierAccésField.Equals(value) != true)) {
                    this.DernierAccésField = value;
                    this.RaisePropertyChanged("DernierAccés");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DiscussionPrivé {
            get {
                return this.DiscussionPrivéField;
            }
            set {
                if ((this.DiscussionPrivéField.Equals(value) != true)) {
                    this.DiscussionPrivéField = value;
                    this.RaisePropertyChanged("DiscussionPrivé");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnvoiReceptMessage {
            get {
                return this.EnvoiReceptMessageField;
            }
            set {
                if ((this.EnvoiReceptMessageField.Equals(value) != true)) {
                    this.EnvoiReceptMessageField = value;
                    this.RaisePropertyChanged("EnvoiReceptMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnvoiRécéptFichier {
            get {
                return this.EnvoiRécéptFichierField;
            }
            set {
                if ((this.EnvoiRécéptFichierField.Equals(value) != true)) {
                    this.EnvoiRécéptFichierField = value;
                    this.RaisePropertyChanged("EnvoiRécéptFichier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionAchat {
            get {
                return this.ImpressionAchatField;
            }
            set {
                if ((this.ImpressionAchatField.Equals(value) != true)) {
                    this.ImpressionAchatField = value;
                    this.RaisePropertyChanged("ImpressionAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionAdministrateur {
            get {
                return this.ImpressionAdministrateurField;
            }
            set {
                if ((this.ImpressionAdministrateurField.Equals(value) != true)) {
                    this.ImpressionAdministrateurField = value;
                    this.RaisePropertyChanged("ImpressionAdministrateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionDossierPatient {
            get {
                return this.ImpressionDossierPatientField;
            }
            set {
                if ((this.ImpressionDossierPatientField.Equals(value) != true)) {
                    this.ImpressionDossierPatientField = value;
                    this.RaisePropertyChanged("ImpressionDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionLaboratoire {
            get {
                return this.ImpressionLaboratoireField;
            }
            set {
                if ((this.ImpressionLaboratoireField.Equals(value) != true)) {
                    this.ImpressionLaboratoireField = value;
                    this.RaisePropertyChanged("ImpressionLaboratoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionPatient {
            get {
                return this.ImpressionPatientField;
            }
            set {
                if ((this.ImpressionPatientField.Equals(value) != true)) {
                    this.ImpressionPatientField = value;
                    this.RaisePropertyChanged("ImpressionPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionRendezVous {
            get {
                return this.ImpressionRendezVousField;
            }
            set {
                if ((this.ImpressionRendezVousField.Equals(value) != true)) {
                    this.ImpressionRendezVousField = value;
                    this.RaisePropertyChanged("ImpressionRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImpressionSalleAttente {
            get {
                return this.ImpressionSalleAttenteField;
            }
            set {
                if ((this.ImpressionSalleAttenteField.Equals(value) != true)) {
                    this.ImpressionSalleAttenteField = value;
                    this.RaisePropertyChanged("ImpressionSalleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImressionCaisse {
            get {
                return this.ImressionCaisseField;
            }
            set {
                if ((this.ImressionCaisseField.Equals(value) != true)) {
                    this.ImressionCaisseField = value;
                    this.RaisePropertyChanged("ImressionCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationAchat {
            get {
                return this.ModificationAchatField;
            }
            set {
                if ((this.ModificationAchatField.Equals(value) != true)) {
                    this.ModificationAchatField = value;
                    this.RaisePropertyChanged("ModificationAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationAdministrateur {
            get {
                return this.ModificationAdministrateurField;
            }
            set {
                if ((this.ModificationAdministrateurField.Equals(value) != true)) {
                    this.ModificationAdministrateurField = value;
                    this.RaisePropertyChanged("ModificationAdministrateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationCaisse {
            get {
                return this.ModificationCaisseField;
            }
            set {
                if ((this.ModificationCaisseField.Equals(value) != true)) {
                    this.ModificationCaisseField = value;
                    this.RaisePropertyChanged("ModificationCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationDossierPatient {
            get {
                return this.ModificationDossierPatientField;
            }
            set {
                if ((this.ModificationDossierPatientField.Equals(value) != true)) {
                    this.ModificationDossierPatientField = value;
                    this.RaisePropertyChanged("ModificationDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationLaboratoire {
            get {
                return this.ModificationLaboratoireField;
            }
            set {
                if ((this.ModificationLaboratoireField.Equals(value) != true)) {
                    this.ModificationLaboratoireField = value;
                    this.RaisePropertyChanged("ModificationLaboratoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationPatient {
            get {
                return this.ModificationPatientField;
            }
            set {
                if ((this.ModificationPatientField.Equals(value) != true)) {
                    this.ModificationPatientField = value;
                    this.RaisePropertyChanged("ModificationPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationRendezVous {
            get {
                return this.ModificationRendezVousField;
            }
            set {
                if ((this.ModificationRendezVousField.Equals(value) != true)) {
                    this.ModificationRendezVousField = value;
                    this.RaisePropertyChanged("ModificationRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModificationSalleAttente {
            get {
                return this.ModificationSalleAttenteField;
            }
            set {
                if ((this.ModificationSalleAttenteField.Equals(value) != true)) {
                    this.ModificationSalleAttenteField = value;
                    this.RaisePropertyChanged("ModificationSalleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleAchat {
            get {
                return this.ModuleAchatField;
            }
            set {
                if ((this.ModuleAchatField.Equals(value) != true)) {
                    this.ModuleAchatField = value;
                    this.RaisePropertyChanged("ModuleAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleAdministrateur {
            get {
                return this.ModuleAdministrateurField;
            }
            set {
                if ((this.ModuleAdministrateurField.Equals(value) != true)) {
                    this.ModuleAdministrateurField = value;
                    this.RaisePropertyChanged("ModuleAdministrateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleCaisse {
            get {
                return this.ModuleCaisseField;
            }
            set {
                if ((this.ModuleCaisseField.Equals(value) != true)) {
                    this.ModuleCaisseField = value;
                    this.RaisePropertyChanged("ModuleCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleChat {
            get {
                return this.ModuleChatField;
            }
            set {
                if ((this.ModuleChatField.Equals(value) != true)) {
                    this.ModuleChatField = value;
                    this.RaisePropertyChanged("ModuleChat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleDossierPatient {
            get {
                return this.ModuleDossierPatientField;
            }
            set {
                if ((this.ModuleDossierPatientField.Equals(value) != true)) {
                    this.ModuleDossierPatientField = value;
                    this.RaisePropertyChanged("ModuleDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleLaboratoire {
            get {
                return this.ModuleLaboratoireField;
            }
            set {
                if ((this.ModuleLaboratoireField.Equals(value) != true)) {
                    this.ModuleLaboratoireField = value;
                    this.RaisePropertyChanged("ModuleLaboratoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModulePatient {
            get {
                return this.ModulePatientField;
            }
            set {
                if ((this.ModulePatientField.Equals(value) != true)) {
                    this.ModulePatientField = value;
                    this.RaisePropertyChanged("ModulePatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleRendezVous {
            get {
                return this.ModuleRendezVousField;
            }
            set {
                if ((this.ModuleRendezVousField.Equals(value) != true)) {
                    this.ModuleRendezVousField = value;
                    this.RaisePropertyChanged("ModuleRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ModuleSalleAttente {
            get {
                return this.ModuleSalleAttenteField;
            }
            set {
                if ((this.ModuleSalleAttenteField.Equals(value) != true)) {
                    this.ModuleSalleAttenteField = value;
                    this.RaisePropertyChanged("ModuleSalleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotDePasse {
            get {
                return this.MotDePasseField;
            }
            set {
                if ((object.ReferenceEquals(this.MotDePasseField, value) != true)) {
                    this.MotDePasseField = value;
                    this.RaisePropertyChanged("MotDePasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionAdministrateur {
            get {
                return this.SuppressionAdministrateurField;
            }
            set {
                if ((this.SuppressionAdministrateurField.Equals(value) != true)) {
                    this.SuppressionAdministrateurField = value;
                    this.RaisePropertyChanged("SuppressionAdministrateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionDossierPatient {
            get {
                return this.SuppressionDossierPatientField;
            }
            set {
                if ((this.SuppressionDossierPatientField.Equals(value) != true)) {
                    this.SuppressionDossierPatientField = value;
                    this.RaisePropertyChanged("SuppressionDossierPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionLaboratoire {
            get {
                return this.SuppressionLaboratoireField;
            }
            set {
                if ((this.SuppressionLaboratoireField.Equals(value) != true)) {
                    this.SuppressionLaboratoireField = value;
                    this.RaisePropertyChanged("SuppressionLaboratoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionPatient {
            get {
                return this.SuppressionPatientField;
            }
            set {
                if ((this.SuppressionPatientField.Equals(value) != true)) {
                    this.SuppressionPatientField = value;
                    this.RaisePropertyChanged("SuppressionPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppressionRendezVous {
            get {
                return this.SuppressionRendezVousField;
            }
            set {
                if ((this.SuppressionRendezVousField.Equals(value) != true)) {
                    this.SuppressionRendezVousField = value;
                    this.RaisePropertyChanged("SuppressionRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SuppréssionCaisse {
            get {
                return this.SuppréssionCaisseField;
            }
            set {
                if ((this.SuppréssionCaisseField.Equals(value) != true)) {
                    this.SuppréssionCaisseField = value;
                    this.RaisePropertyChanged("SuppréssionCaisse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupressionAchat {
            get {
                return this.SupressionAchatField;
            }
            set {
                if ((this.SupressionAchatField.Equals(value) != true)) {
                    this.SupressionAchatField = value;
                    this.RaisePropertyChanged("SupressionAchat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SupressionSalleAttente {
            get {
                return this.SupressionSalleAttenteField;
            }
            set {
                if ((this.SupressionSalleAttenteField.Equals(value) != true)) {
                    this.SupressionSalleAttenteField = value;
                    this.RaisePropertyChanged("SupressionSalleAttente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExclusionDay", Namespace="http://schemas.datacontract.org/2004/07/WpfHost")]
    [System.SerializableAttribute()]
    public partial class ExclusionDay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrénomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Jours {
            get {
                return this.JoursField;
            }
            set {
                if ((this.JoursField.Equals(value) != true)) {
                    this.JoursField = value;
                    this.RaisePropertyChanged("Jours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prénom {
            get {
                return this.PrénomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrénomField, value) != true)) {
                    this.PrénomField = value;
                    this.RaisePropertyChanged("Prénom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVC.IServiceClinique", CallbackContract=typeof(Medicus.SVC.IServiceCliniqueCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceClinique {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVousParMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousParMedecinResponse")]
        System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousParMedecin(int idmedecin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVousParMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousParMedecinResponse")]
        System.IAsyncResult BeginGetAllRendezVousParMedecin(int idmedecin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousParMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVousParPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousParPatientResponse")]
        System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousParPatient(int idpatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVousParPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousParPatientResponse")]
        System.IAsyncResult BeginGetAllRendezVousParPatient(int idpatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousParPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousResponse")]
        System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVous(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousResponse")]
        System.IAsyncResult BeginGetAllRendezVous(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVous(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllRendezVousAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousAllResponse")]
        System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllRendezVousAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllRendezVousAllResponse")]
        System.IAsyncResult BeginGetAllRendezVousAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertRendez", ReplyAction="http://tempuri.org/IServiceClinique/InsertRendezResponse")]
        void InsertRendez(Medicus.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertRendez", ReplyAction="http://tempuri.org/IServiceClinique/InsertRendezResponse")]
        System.IAsyncResult BeginInsertRendez(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertRendez(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRendezVousResponse")]
        void UpdateRendezVous(Medicus.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/UpdateRendezVousResponse")]
        System.IAsyncResult BeginUpdateRendezVous(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRendezVous(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRendezVousResponse")]
        void DeleteRendezVous(Medicus.SVC.RendezVou obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteRendezVous", ReplyAction="http://tempuri.org/IServiceClinique/DeleteRendezVousResponse")]
        System.IAsyncResult BeginDeleteRendezVous(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRendezVous(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientResponse")]
        System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientResponse")]
        System.IAsyncResult BeginGetAllPatient(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPatientPAR", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientPARResponse")]
        System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatientPAR(string PAT);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPatientPAR", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientPARResponse")]
        System.IAsyncResult BeginGetAllPatientPAR(string PAT, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatientPAR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPatienteEXISTE", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatienteEXISTEResponse")]
        bool GetAllPatienteEXISTE(string Nom, string Prenom);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPatienteEXISTE", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatienteEXISTEResponse")]
        System.IAsyncResult BeginGetAllPatienteEXISTE(string Nom, string Prenom, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAllPatienteEXISTE(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPatientNomPrenom", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientNomPrenomResponse")]
        Medicus.SVC.Patient GetAllPatientNomPrenom(string PAT);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPatientNomPrenom", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientNomPrenomResponse")]
        System.IAsyncResult BeginGetAllPatientNomPrenom(string PAT, System.AsyncCallback callback, object asyncState);
        
        Medicus.SVC.Patient EndGetAllPatientNomPrenom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllPatientBYID", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientBYIDResponse")]
        System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatientBYID(int idpatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllPatientBYID", ReplyAction="http://tempuri.org/IServiceClinique/GetAllPatientBYIDResponse")]
        System.IAsyncResult BeginGetAllPatientBYID(int idpatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatientBYID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertPatient", ReplyAction="http://tempuri.org/IServiceClinique/InsertPatientResponse")]
        void InsertPatient(Medicus.SVC.Patient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertPatient", ReplyAction="http://tempuri.org/IServiceClinique/InsertPatientResponse")]
        System.IAsyncResult BeginInsertPatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdatePatient", ReplyAction="http://tempuri.org/IServiceClinique/UpdatePatientResponse")]
        void UpdatePatient(Medicus.SVC.Patient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdatePatient", ReplyAction="http://tempuri.org/IServiceClinique/UpdatePatientResponse")]
        System.IAsyncResult BeginUpdatePatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletePatient", ReplyAction="http://tempuri.org/IServiceClinique/DeletePatientResponse")]
        void DeletePatient(Medicus.SVC.Patient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletePatient", ReplyAction="http://tempuri.org/IServiceClinique/DeletePatientResponse")]
        System.IAsyncResult BeginDeletePatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Connect", ReplyAction="http://tempuri.org/IServiceClinique/ConnectResponse")]
        bool Connect(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Connect", ReplyAction="http://tempuri.org/IServiceClinique/ConnectResponse")]
        System.IAsyncResult BeginConnect(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        bool EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientResponse")]
        System.Collections.Generic.List<Medicus.SVC.Client> GetAllClient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientResponse")]
        System.IAsyncResult BeginGetAllClient(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Client> EndGetAllClient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllClientDict", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientDictResponse")]
        System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> GetAllClientDict();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllClientDict", ReplyAction="http://tempuri.org/IServiceClinique/GetAllClientDictResponse")]
        System.IAsyncResult BeginGetAllClientDict(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> EndGetAllClientDict(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReConnect")]
        void ReConnect(Medicus.SVC.Client LocalClient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReConnect")]
        System.IAsyncResult BeginReConnect(Medicus.SVC.Client LocalClient, System.AsyncCallback callback, object asyncState);
        
        void EndReConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/Say", ReplyAction="http://tempuri.org/IServiceClinique/SayResponse")]
        void Say(Medicus.SVC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Say", ReplyAction="http://tempuri.org/IServiceClinique/SayResponse")]
        System.IAsyncResult BeginSay(Medicus.SVC.Message msg, System.AsyncCallback callback, object asyncState);
        
        void EndSay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Whisper")]
        void Whisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Whisper")]
        System.IAsyncResult BeginWhisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/IsWriting")]
        void IsWriting(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/IsWriting")]
        System.IAsyncResult BeginIsWriting(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWriting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/SendFile", ReplyAction="http://tempuri.org/IServiceClinique/SendFileResponse")]
        bool SendFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/SendFile", ReplyAction="http://tempuri.org/IServiceClinique/SendFileResponse")]
        System.IAsyncResult BeginSendFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        bool EndSendFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IServiceClinique/Disconnect")]
        void Disconnect(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Disconnect")]
        System.IAsyncResult BeginDisconnect(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/VerificationCle1", ReplyAction="http://tempuri.org/IServiceClinique/VerificationCle1Response")]
        bool VerificationCle1();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/VerificationCle1", ReplyAction="http://tempuri.org/IServiceClinique/VerificationCle1Response")]
        System.IAsyncResult BeginVerificationCle1(System.AsyncCallback callback, object asyncState);
        
        bool EndVerificationCle1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/TestConnect", ReplyAction="http://tempuri.org/IServiceClinique/TestConnectResponse")]
        void TestConnect(string clientTest);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/TestConnect", ReplyAction="http://tempuri.org/IServiceClinique/TestConnectResponse")]
        System.IAsyncResult BeginTestConnect(string clientTest, System.AsyncCallback callback, object asyncState);
        
        void EndTestConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDiagnosticRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDiagnosticRefreshResponse")]
        void AjouterDiagnosticRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDiagnosticRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDiagnosticRefreshResponse")]
        System.IAsyncResult BeginAjouterDiagnosticRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDiagnosticRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterArrettravailRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterArrettravailRefreshResponse")]
        void AjouterArrettravailRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterArrettravailRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterArrettravailRefreshResponse")]
        System.IAsyncResult BeginAjouterArrettravailRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterArrettravailRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDictionnaireRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDictionnaireRefreshResponse")]
        void AjouterDictionnaireRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDictionnaireRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDictionnaireRefreshResponse")]
        System.IAsyncResult BeginAjouterDictionnaireRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDictionnaireRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterProduitOrdonnaceRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProduitOrdonnaceRefreshResponse")]
        void AjouterProduitOrdonnaceRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterProduitOrdonnaceRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterProduitOrdonnaceRefreshResponse")]
        System.IAsyncResult BeginAjouterProduitOrdonnaceRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterProduitOrdonnaceRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDepenseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDepenseRefreshResponse")]
        void AjouterDepenseRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDepenseRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDepenseRefreshResponse")]
        System.IAsyncResult BeginAjouterDepenseRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDepenseRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterActeCatalogueRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterActeCatalogueRefreshResponse")]
        void AjouterActeCatalogueRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterActeCatalogueRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterActeCatalogueRefreshResponse")]
        System.IAsyncResult BeginAjouterActeCatalogueRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterActeCatalogueRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterSoldeVisiteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeVisiteRefreshResponse")]
        void AjouterSoldeVisiteRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterSoldeVisiteRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSoldeVisiteRefreshResponse")]
        System.IAsyncResult BeginAjouterSoldeVisiteRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterSoldeVisiteRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterPatientRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterPatientRefreshResponse")]
        void AjouterPatientRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterPatientRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterPatientRefreshResponse")]
        System.IAsyncResult BeginAjouterPatientRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterPatientRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterEnteteOrdonnaceOrdonnancePatientRefres" +
            "h", ReplyAction="http://tempuri.org/IServiceClinique/AjouterEnteteOrdonnaceOrdonnancePatientRefres" +
            "hResponse")]
        void AjouterEnteteOrdonnaceOrdonnancePatientRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterEnteteOrdonnaceOrdonnancePatientRefres" +
            "h", ReplyAction="http://tempuri.org/IServiceClinique/AjouterEnteteOrdonnaceOrdonnancePatientRefres" +
            "hResponse")]
        System.IAsyncResult BeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterEnteteOrdonnaceOrdonnancePatientRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDciiRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDciiRefreshResponse")]
        void AjouterDciiRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDciiRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDciiRefreshResponse")]
        System.IAsyncResult BeginAjouterDciiRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDciiRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterCasTraitementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCasTraitementRefreshResponse")]
        void AjouterCasTraitementRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterCasTraitementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterCasTraitementRefreshResponse")]
        System.IAsyncResult BeginAjouterCasTraitementRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterCasTraitementRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefreshResponse")]
        void AjouterTransactionPaiementRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterTransactionPaiementRefreshResponse")]
        System.IAsyncResult BeginAjouterTransactionPaiementRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterTransactionPaiementRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterSalleAtentefRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSalleAtentefRefreshResponse")]
        void AjouterSalleAtentefRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterSalleAtentefRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterSalleAtentefRefreshResponse")]
        System.IAsyncResult BeginAjouterSalleAtentefRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterSalleAtentefRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterRendezVOUSfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRendezVOUSfRefreshResponse")]
        void AjouterRendezVOUSfRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterRendezVOUSfRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterRendezVOUSfRefreshResponse")]
        System.IAsyncResult BeginAjouterRendezVOUSfRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterRendezVOUSfRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/SalleAttenteDemandeChezLeMedecin", ReplyAction="http://tempuri.org/IServiceClinique/SalleAttenteDemandeChezLeMedecinResponse")]
        void SalleAttenteDemandeChezLeMedecin(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/SalleAttenteDemandeChezLeMedecin", ReplyAction="http://tempuri.org/IServiceClinique/SalleAttenteDemandeChezLeMedecinResponse")]
        System.IAsyncResult BeginSalleAttenteDemandeChezLeMedecin(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE, System.AsyncCallback callback, object asyncState);
        
        void EndSalleAttenteDemandeChezLeMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/AjouterDicomImageRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDicomImageRefreshResponse")]
        void AjouterDicomImageRefresh();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/AjouterDicomImageRefresh", ReplyAction="http://tempuri.org/IServiceClinique/AjouterDicomImageRefreshResponse")]
        System.IAsyncResult BeginAjouterDicomImageRefresh(System.AsyncCallback callback, object asyncState);
        
        void EndAjouterDicomImageRefresh(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UploadDocument", ReplyAction="http://tempuri.org/IServiceClinique/UploadDocumentResponse")]
        void UploadDocument(string fPath, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UploadDocument", ReplyAction="http://tempuri.org/IServiceClinique/UploadDocumentResponse")]
        System.IAsyncResult BeginUploadDocument(string fPath, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DownloadDocument", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentResponse")]
        byte[] DownloadDocument(string fPath);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DownloadDocument", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentResponse")]
        System.IAsyncResult BeginDownloadDocument(string fPath, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDownloadDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DownloadDocumentIsHere", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentIsHereResponse")]
        bool DownloadDocumentIsHere(string fPath);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DownloadDocumentIsHere", ReplyAction="http://tempuri.org/IServiceClinique/DownloadDocumentIsHereResponse")]
        System.IAsyncResult BeginDownloadDocumentIsHere(string fPath, System.AsyncCallback callback, object asyncState);
        
        bool EndDownloadDocumentIsHere(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllParamétre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllParamétreResponse")]
        Medicus.SVC.Param GetAllParamétre();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllParamétre", ReplyAction="http://tempuri.org/IServiceClinique/GetAllParamétreResponse")]
        System.IAsyncResult BeginGetAllParamétre(System.AsyncCallback callback, object asyncState);
        
        Medicus.SVC.Param EndGetAllParamétre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateParamétre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateParamétreResponse")]
        void UpdateParamétre(Medicus.SVC.Param obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateParamétre", ReplyAction="http://tempuri.org/IServiceClinique/UpdateParamétreResponse")]
        System.IAsyncResult BeginUpdateParamétre(Medicus.SVC.Param obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateParamétre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDictionnaireResponse")]
        System.Collections.Generic.List<Medicus.SVC.Dictionnaire> GetAllDictionnaire();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDictionnaireResponse")]
        System.IAsyncResult BeginGetAllDictionnaire(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Dictionnaire> EndGetAllDictionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/InsertDictionnaireResponse")]
        void InsertDictionnaire(Medicus.SVC.Dictionnaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/InsertDictionnaireResponse")]
        System.IAsyncResult BeginInsertDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDictionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDictionnaireResponse")]
        void UpdateDictionnaire(Medicus.SVC.Dictionnaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDictionnaireResponse")]
        System.IAsyncResult BeginUpdateDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDictionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDictionnaireResponse")]
        void DeleteDictionnaire(Medicus.SVC.Dictionnaire obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDictionnaire", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDictionnaireResponse")]
        System.IAsyncResult BeginDeleteDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDictionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAutreBilanResponse")]
        System.Collections.Generic.List<Medicus.SVC.AutreBilan> GetAllAutreBilan(string cle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/GetAllAutreBilanResponse")]
        System.IAsyncResult BeginGetAllAutreBilan(string cle, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.AutreBilan> EndGetAllAutreBilan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/InsertAutreBilanResponse")]
        void InsertAutreBilan(Medicus.SVC.AutreBilan obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/InsertAutreBilanResponse")]
        System.IAsyncResult BeginInsertAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertAutreBilan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAutreBilanResponse")]
        void UpdateAutreBilan(Medicus.SVC.AutreBilan obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/UpdateAutreBilanResponse")]
        System.IAsyncResult BeginUpdateAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAutreBilan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAutreBilanResponse")]
        void DeleteAutreBilan(Medicus.SVC.AutreBilan obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteAutreBilan", ReplyAction="http://tempuri.org/IServiceClinique/DeleteAutreBilanResponse")]
        System.IAsyncResult BeginDeleteAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAutreBilan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDiagnosticResponse")]
        System.Collections.Generic.List<Medicus.SVC.Diagnostic> GetAllDiagnostic();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDiagnosticResponse")]
        System.IAsyncResult BeginGetAllDiagnostic(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Diagnostic> EndGetAllDiagnostic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/InsertDiagnosticResponse")]
        void InsertDiagnostic(Medicus.SVC.Diagnostic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/InsertDiagnosticResponse")]
        System.IAsyncResult BeginInsertDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDiagnostic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDiagnosticResponse")]
        void UpdateDiagnostic(Medicus.SVC.Diagnostic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDiagnosticResponse")]
        System.IAsyncResult BeginUpdateDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDiagnostic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDiagnosticResponse")]
        void DeleteDiagnostic(Medicus.SVC.Diagnostic obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDiagnostic", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDiagnosticResponse")]
        System.IAsyncResult BeginDeleteDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDiagnostic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/GetAllEnteteOrdonnaceResponse")]
        System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> GetAllEnteteOrdonnace();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/GetAllEnteteOrdonnaceResponse")]
        System.IAsyncResult BeginGetAllEnteteOrdonnace(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> EndGetAllEnteteOrdonnace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/InsertEnteteOrdonnaceResponse")]
        void InsertEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/InsertEnteteOrdonnaceResponse")]
        System.IAsyncResult BeginInsertEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertEnteteOrdonnace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/UpdateEnteteOrdonnaceResponse")]
        void UpdateEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/UpdateEnteteOrdonnaceResponse")]
        System.IAsyncResult BeginUpdateEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEnteteOrdonnace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/DeleteEnteteOrdonnaceResponse")]
        void DeleteEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteEnteteOrdonnace", ReplyAction="http://tempuri.org/IServiceClinique/DeleteEnteteOrdonnaceResponse")]
        System.IAsyncResult BeginDeleteEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteEnteteOrdonnace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllOrdonnancePatientResponse")]
        System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> GetAllOrdonnancePatient();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllOrdonnancePatientResponse")]
        System.IAsyncResult BeginGetAllOrdonnancePatient(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> EndGetAllOrdonnancePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/InsertOrdonnancePatientResponse")]
        void InsertOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/InsertOrdonnancePatientResponse")]
        System.IAsyncResult BeginInsertOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertOrdonnancePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/UpdateOrdonnancePatientResponse")]
        void UpdateOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/UpdateOrdonnancePatientResponse")]
        System.IAsyncResult BeginUpdateOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateOrdonnancePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/DeleteOrdonnancePatientResponse")]
        void DeleteOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteOrdonnancePatient", ReplyAction="http://tempuri.org/IServiceClinique/DeleteOrdonnancePatientResponse")]
        System.IAsyncResult BeginDeleteOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOrdonnancePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllActe", ReplyAction="http://tempuri.org/IServiceClinique/GetAllActeResponse")]
        System.Collections.Generic.List<Medicus.SVC.Acte> GetAllActe();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllActe", ReplyAction="http://tempuri.org/IServiceClinique/GetAllActeResponse")]
        System.IAsyncResult BeginGetAllActe(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Acte> EndGetAllActe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertActe", ReplyAction="http://tempuri.org/IServiceClinique/InsertActeResponse")]
        void InsertActe(Medicus.SVC.Acte obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertActe", ReplyAction="http://tempuri.org/IServiceClinique/InsertActeResponse")]
        System.IAsyncResult BeginInsertActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertActe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateActe", ReplyAction="http://tempuri.org/IServiceClinique/UpdateActeResponse")]
        void UpdateActe(Medicus.SVC.Acte obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateActe", ReplyAction="http://tempuri.org/IServiceClinique/UpdateActeResponse")]
        System.IAsyncResult BeginUpdateActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateActe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteActe", ReplyAction="http://tempuri.org/IServiceClinique/DeleteActeResponse")]
        void DeleteActe(Medicus.SVC.Acte obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteActe", ReplyAction="http://tempuri.org/IServiceClinique/DeleteActeResponse")]
        System.IAsyncResult BeginDeleteActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteActe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCatalogueResponse")]
        System.Collections.Generic.List<Medicus.SVC.Catalogue> GetAllCatalogue();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/GetAllCatalogueResponse")]
        System.IAsyncResult BeginGetAllCatalogue(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Catalogue> EndGetAllCatalogue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/InsertCatalogueResponse")]
        void InsertCatalogue(Medicus.SVC.Catalogue obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/InsertCatalogueResponse")]
        System.IAsyncResult BeginInsertCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertCatalogue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCatalogueResponse")]
        void UpdateCatalogue(Medicus.SVC.Catalogue obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/UpdateCatalogueResponse")]
        System.IAsyncResult BeginUpdateCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateCatalogue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCatalogueResponse")]
        void DeleteCatalogue(Medicus.SVC.Catalogue obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteCatalogue", ReplyAction="http://tempuri.org/IServiceClinique/DeleteCatalogueResponse")]
        System.IAsyncResult BeginDeleteCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteCatalogue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleResponse")]
        System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> GetAllDepeiementMultiple();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeiementMultipleResponse")]
        System.IAsyncResult BeginGetAllDepeiementMultiple(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> EndGetAllDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleResponse")]
        void InsertDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeiementMultipleResponse")]
        System.IAsyncResult BeginInsertDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleResponse")]
        void UpdateDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeiementMultipleResponse")]
        System.IAsyncResult BeginUpdateDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleResponse")]
        void DeleteDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepeiementMultiple", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeiementMultipleResponse")]
        System.IAsyncResult BeginDeleteDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepeiementMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentResponse")]
        System.Collections.Generic.List<Medicus.SVC.Depeiment> GetAllDepeiment();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepeimentResponse")]
        System.IAsyncResult BeginGetAllDepeiment(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Depeiment> EndGetAllDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeimentResponse")]
        void InsertDepeiment(Medicus.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepeimentResponse")]
        System.IAsyncResult BeginInsertDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeimentResponse")]
        void UpdateDepeiment(Medicus.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepeimentResponse")]
        System.IAsyncResult BeginUpdateDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeimentResponse")]
        void DeleteDepeiment(Medicus.SVC.Depeiment obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepeiment", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepeimentResponse")]
        System.IAsyncResult BeginDeleteDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDicomFichierResponse")]
        System.Collections.Generic.List<Medicus.SVC.DicomFichier> GetAllDicomFichier();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDicomFichierResponse")]
        System.IAsyncResult BeginGetAllDicomFichier(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.DicomFichier> EndGetAllDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/InsertDicomFichier")]
        void InsertDicomFichier(Medicus.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDicomFichier")]
        System.IAsyncResult BeginInsertDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDicomFichierResponse")]
        void UpdateDicomFichier(Medicus.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDicomFichierResponse")]
        System.IAsyncResult BeginUpdateDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDicomFichierResponse")]
        void DeleteDicomFichier(Medicus.SVC.DicomFichier obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDicomFichier", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDicomFichierResponse")]
        System.IAsyncResult BeginDeleteDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDicomFichier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/GetAllArretDetravailResponse")]
        System.Collections.Generic.List<Medicus.SVC.ArretDetravail> GetAllArretDetravail();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/GetAllArretDetravailResponse")]
        System.IAsyncResult BeginGetAllArretDetravail(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.ArretDetravail> EndGetAllArretDetravail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/InsertArretDetravailResponse")]
        void InsertArretDetravail(Medicus.SVC.ArretDetravail obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/InsertArretDetravailResponse")]
        System.IAsyncResult BeginInsertArretDetravail(Medicus.SVC.ArretDetravail obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertArretDetravail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/DeleteArretDetravailResponse")]
        void DeleteArretDetravail(Medicus.SVC.ArretDetravail obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteArretDetravail", ReplyAction="http://tempuri.org/IServiceClinique/DeleteArretDetravailResponse")]
        System.IAsyncResult BeginDeleteArretDetravail(Medicus.SVC.ArretDetravail obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteArretDetravail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitOrdonnanceResponse")]
        System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> GetAllProduitOrdonnance();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/GetAllProduitOrdonnanceResponse")]
        System.IAsyncResult BeginGetAllProduitOrdonnance(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> EndGetAllProduitOrdonnance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/InsertProduitOrdonnanceResponse")]
        void InsertProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/InsertProduitOrdonnanceResponse")]
        System.IAsyncResult BeginInsertProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertProduitOrdonnance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProduitOrdonnanceResponse")]
        void UpdateProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/UpdateProduitOrdonnanceResponse")]
        System.IAsyncResult BeginUpdateProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateProduitOrdonnance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProduitOrdonnanceResponse")]
        void DeleteProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteProduitOrdonnance", ReplyAction="http://tempuri.org/IServiceClinique/DeleteProduitOrdonnanceResponse")]
        System.IAsyncResult BeginDeleteProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteProduitOrdonnance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDci", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDciResponse")]
        System.Collections.Generic.List<Medicus.SVC.Dci> GetAllDci();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDci", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDciResponse")]
        System.IAsyncResult BeginGetAllDci(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Dci> EndGetAllDci(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDci", ReplyAction="http://tempuri.org/IServiceClinique/InsertDciResponse")]
        void InsertDci(Medicus.SVC.Dci obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDci", ReplyAction="http://tempuri.org/IServiceClinique/InsertDciResponse")]
        System.IAsyncResult BeginInsertDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDci(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDci", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDciResponse")]
        void UpdateDci(Medicus.SVC.Dci obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDci", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDciResponse")]
        System.IAsyncResult BeginUpdateDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDci(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeletDci", ReplyAction="http://tempuri.org/IServiceClinique/DeletDciResponse")]
        void DeletDci(Medicus.SVC.Dci obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeletDci", ReplyAction="http://tempuri.org/IServiceClinique/DeletDciResponse")]
        System.IAsyncResult BeginDeletDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeletDci(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseResponse")]
        System.Collections.Generic.List<Medicus.SVC.Depense> GetAllDepense();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllDepenseResponse")]
        System.IAsyncResult BeginGetAllDepense(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Depense> EndGetAllDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertDepense", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepenseResponse")]
        void InsertDepense(Medicus.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertDepense", ReplyAction="http://tempuri.org/IServiceClinique/InsertDepenseResponse")]
        System.IAsyncResult BeginInsertDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepenseResponse")]
        void UpdateDepense(Medicus.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateDepenseResponse")]
        System.IAsyncResult BeginUpdateDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepenseResponse")]
        void DeleteDepense(Medicus.SVC.Depense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteDepenseResponse")]
        System.IAsyncResult BeginDeleteDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifDepenseResponse")]
        System.Collections.Generic.List<Medicus.SVC.MotifDepense> GetAllMotifDepense();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifDepenseResponse")]
        System.IAsyncResult BeginGetAllMotifDepense(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.MotifDepense> EndGetAllMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/InsertMotifDepense")]
        void InsertMotifDepense(Medicus.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMotifDepense")]
        System.IAsyncResult BeginInsertMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifDepenseResponse")]
        void UpdateMotifDepense(Medicus.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifDepenseResponse")]
        System.IAsyncResult BeginUpdateMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifDepenseResponse")]
        void DeleteMotifDepense(Medicus.SVC.MotifDepense obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMotifDepense", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifDepenseResponse")]
        System.IAsyncResult BeginDeleteMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSalleDattenteResponse")]
        System.Collections.Generic.List<Medicus.SVC.SalleDattente> GetAllSalleDattente(System.DateTime Date1, System.DateTime Date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSalleDattenteResponse")]
        System.IAsyncResult BeginGetAllSalleDattente(System.DateTime Date1, System.DateTime Date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.SalleDattente> EndGetAllSalleDattente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllSalleDattenteALL", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSalleDattenteALLResponse")]
        System.Collections.Generic.List<Medicus.SVC.SalleDattente> GetAllSalleDattenteALL();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllSalleDattenteALL", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSalleDattenteALLResponse")]
        System.IAsyncResult BeginGetAllSalleDattenteALL(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.SalleDattente> EndGetAllSalleDattenteALL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertSalleDatente", ReplyAction="http://tempuri.org/IServiceClinique/InsertSalleDatenteResponse")]
        void InsertSalleDatente(Medicus.SVC.SalleDattente obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertSalleDatente", ReplyAction="http://tempuri.org/IServiceClinique/InsertSalleDatenteResponse")]
        System.IAsyncResult BeginInsertSalleDatente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertSalleDatente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSalleDattenteResponse")]
        void UpdateSalleDattente(Medicus.SVC.SalleDattente obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSalleDattenteResponse")]
        System.IAsyncResult BeginUpdateSalleDattente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSalleDattente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSalleDattenteResponse")]
        void DeleteSalleDattente(Medicus.SVC.SalleDattente obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteSalleDattente", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSalleDattenteResponse")]
        System.IAsyncResult BeginDeleteSalleDattente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSalleDattente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTypeCasResponse")]
        System.Collections.Generic.List<Medicus.SVC.TypeCa> GetAllTypeCas();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTypeCasResponse")]
        System.IAsyncResult BeginGetAllTypeCas(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.TypeCa> EndGetAllTypeCas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/InsertTypeCas")]
        void InsertTypeCas(Medicus.SVC.TypeCa obj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertTypeCas")]
        System.IAsyncResult BeginInsertTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertTypeCas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTypeCasResponse")]
        void UpdateTypeCas(Medicus.SVC.TypeCa obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTypeCasResponse")]
        System.IAsyncResult BeginUpdateTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTypeCas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTypeCasResponse")]
        void DeleteTypeCas(Medicus.SVC.TypeCa obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteTypeCas", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTypeCasResponse")]
        System.IAsyncResult BeginDeleteTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTypeCas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllConstantes", ReplyAction="http://tempuri.org/IServiceClinique/GetAllConstantesResponse")]
        System.Collections.Generic.List<Medicus.SVC.Constante> GetAllConstantes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllConstantes", ReplyAction="http://tempuri.org/IServiceClinique/GetAllConstantesResponse")]
        System.IAsyncResult BeginGetAllConstantes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Constante> EndGetAllConstantes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllConstantesByPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllConstantesByPatientResponse")]
        System.Collections.Generic.List<Medicus.SVC.Constante> GetAllConstantesByPatient(int codepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllConstantesByPatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllConstantesByPatientResponse")]
        System.IAsyncResult BeginGetAllConstantesByPatient(int codepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Constante> EndGetAllConstantesByPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertConstante", ReplyAction="http://tempuri.org/IServiceClinique/InsertConstanteResponse")]
        void InsertConstante(Medicus.SVC.Constante obj, int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertConstante", ReplyAction="http://tempuri.org/IServiceClinique/InsertConstanteResponse")]
        System.IAsyncResult BeginInsertConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState);
        
        void EndInsertConstante(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateConstante", ReplyAction="http://tempuri.org/IServiceClinique/UpdateConstanteResponse")]
        void UpdateConstante(Medicus.SVC.Constante obj, int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateConstante", ReplyAction="http://tempuri.org/IServiceClinique/UpdateConstanteResponse")]
        System.IAsyncResult BeginUpdateConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateConstante(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteConstante", ReplyAction="http://tempuri.org/IServiceClinique/DeleteConstanteResponse")]
        void DeleteConstante(Medicus.SVC.Constante obj, int code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteConstante", ReplyAction="http://tempuri.org/IServiceClinique/DeleteConstanteResponse")]
        System.IAsyncResult BeginDeleteConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteConstante(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllTraitement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTraitementResponse")]
        System.Collections.Generic.List<Medicus.SVC.CasTraitement> GetAllTraitement();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllTraitement", ReplyAction="http://tempuri.org/IServiceClinique/GetAllTraitementResponse")]
        System.IAsyncResult BeginGetAllTraitement(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.CasTraitement> EndGetAllTraitement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/InsertTypeTraitementResponse")]
        void InsertTypeTraitement(Medicus.SVC.CasTraitement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/InsertTypeTraitementResponse")]
        System.IAsyncResult BeginInsertTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertTypeTraitement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTypeTraitementResponse")]
        void UpdateTypeTraitement(Medicus.SVC.CasTraitement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/UpdateTypeTraitementResponse")]
        System.IAsyncResult BeginUpdateTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTypeTraitement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTypeTraitementResponse")]
        void DeleteTypeTraitement(Medicus.SVC.CasTraitement obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteTypeTraitement", ReplyAction="http://tempuri.org/IServiceClinique/DeleteTypeTraitementResponse")]
        System.IAsyncResult BeginDeleteTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTypeTraitement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteResponse")]
        System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisite(System.DateTime date1, System.DateTime date2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteResponse")]
        System.IAsyncResult BeginGetAllVisite(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVisiteAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteAllResponse")]
        System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVisiteAll", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteAllResponse")]
        System.IAsyncResult BeginGetAllVisiteAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVisiteByVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteResponse")]
        System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByVisite(int idpatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVisiteByVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteResponse")]
        System.IAsyncResult BeginGetAllVisiteByVisite(int idpatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVisiteByClepatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByClepatientResponse")]
        System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByClepatient(string clepatient);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVisiteByClepatient", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByClepatientResponse")]
        System.IAsyncResult BeginGetAllVisiteByClepatient(string clepatient, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByClepatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteMedecinResponse")]
        System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByVisiteMedecin(int idmedecin);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllVisiteByVisiteMedecinResponse")]
        System.IAsyncResult BeginGetAllVisiteByVisiteMedecin(int idmedecin, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByVisiteMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertVisite", ReplyAction="http://tempuri.org/IServiceClinique/InsertVisiteResponse")]
        void InsertVisite(Medicus.SVC.Visite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertVisite", ReplyAction="http://tempuri.org/IServiceClinique/InsertVisiteResponse")]
        System.IAsyncResult BeginInsertVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateVisite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVisiteResponse")]
        void UpdateVisite(Medicus.SVC.Visite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateVisite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateVisiteResponse")]
        System.IAsyncResult BeginUpdateVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteVisite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVisiteResponse")]
        void DeleteVisite(Medicus.SVC.Visite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteVisite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteVisiteResponse")]
        System.IAsyncResult BeginDeleteVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMedecinResponse")]
        System.Collections.Generic.List<Medicus.SVC.Medecin> GetAllMedecin();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMedecin", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMedecinResponse")]
        System.IAsyncResult BeginGetAllMedecin(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Medecin> EndGetAllMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMedecin", ReplyAction="http://tempuri.org/IServiceClinique/InsertMedecinResponse")]
        void InsertMedecin(Medicus.SVC.Medecin obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMedecin", ReplyAction="http://tempuri.org/IServiceClinique/InsertMedecinResponse")]
        System.IAsyncResult BeginInsertMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMedecin", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMedecinResponse")]
        void UpdateMedecin(Medicus.SVC.Medecin obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMedecin", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMedecinResponse")]
        System.IAsyncResult BeginUpdateMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMedecin", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMedecinResponse")]
        void DeleteMedecin(Medicus.SVC.Medecin obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMedecin", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMedecinResponse")]
        System.IAsyncResult BeginDeleteMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSpécialitéResponse")]
        System.Collections.Generic.List<Medicus.SVC.Spécialité> GetAllSpécialité();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/GetAllSpécialitéResponse")]
        System.IAsyncResult BeginGetAllSpécialité(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Spécialité> EndGetAllSpécialité(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/InsertSpécialitéResponse")]
        void InsertSpécialité(Medicus.SVC.Spécialité obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/InsertSpécialitéResponse")]
        System.IAsyncResult BeginInsertSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertSpécialité(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSpécialitéResponse")]
        void UpdateSpécialité(Medicus.SVC.Spécialité obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/UpdateSpécialitéResponse")]
        System.IAsyncResult BeginUpdateSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSpécialité(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSpécialitéResponse")]
        void DeleteSpécialité(Medicus.SVC.Spécialité obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteSpécialité", ReplyAction="http://tempuri.org/IServiceClinique/DeleteSpécialitéResponse")]
        System.IAsyncResult BeginDeleteSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSpécialité(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifVisiteResponse")]
        System.Collections.Generic.List<Medicus.SVC.MotifVisite> GetAllMotifVisite();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMotifVisiteResponse")]
        System.IAsyncResult BeginGetAllMotifVisite(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.MotifVisite> EndGetAllMotifVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/InsertMotifVisiteResponse")]
        void InsertMotifVisite(Medicus.SVC.MotifVisite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/InsertMotifVisiteResponse")]
        System.IAsyncResult BeginInsertMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMotifVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifVisiteResponse")]
        void UpdateMotifVisite(Medicus.SVC.MotifVisite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMotifVisiteResponse")]
        System.IAsyncResult BeginUpdateMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMotifVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifVisiteResponse")]
        void DeleteMotifVisite(Medicus.SVC.MotifVisite obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMotifVisite", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMotifVisiteResponse")]
        System.IAsyncResult BeginDeleteMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMotifVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllMembership", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMembershipResponse")]
        System.Collections.Generic.List<Medicus.SVC.Membership> GetAllMembership();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllMembership", ReplyAction="http://tempuri.org/IServiceClinique/GetAllMembershipResponse")]
        System.IAsyncResult BeginGetAllMembership(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.Membership> EndGetAllMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertMembership", ReplyAction="http://tempuri.org/IServiceClinique/InsertMembershipResponse")]
        void InsertMembership(Medicus.SVC.Membership obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertMembership", ReplyAction="http://tempuri.org/IServiceClinique/InsertMembershipResponse")]
        System.IAsyncResult BeginInsertMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState);
        
        void EndInsertMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateMembership", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMembershipResponse")]
        void UpdateMembership(Medicus.SVC.Membership obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateMembership", ReplyAction="http://tempuri.org/IServiceClinique/UpdateMembershipResponse")]
        System.IAsyncResult BeginUpdateMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteMembership", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMembershipResponse")]
        void DeleteMembership(Medicus.SVC.Membership obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteMembership", ReplyAction="http://tempuri.org/IServiceClinique/DeleteMembershipResponse")]
        System.IAsyncResult BeginDeleteMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/GetAllExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExclusionDayResponse")]
        System.Collections.Generic.List<Medicus.SVC.ExclusionDay> GetAllExclusionDay(string Name, string FirstName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/GetAllExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/GetAllExclusionDayResponse")]
        System.IAsyncResult BeginGetAllExclusionDay(string Name, string FirstName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medicus.SVC.ExclusionDay> EndGetAllExclusionDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/InsertExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/InsertExclusionDayResponse")]
        bool InsertExclusionDay(Medicus.SVC.ExclusionDay obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/InsertExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/InsertExclusionDayResponse")]
        System.IAsyncResult BeginInsertExclusionDay(Medicus.SVC.ExclusionDay obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertExclusionDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/UpdateExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExclusionDayResponse")]
        bool UpdateExclusionDay(int obj, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UpdateExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/UpdateExclusionDayResponse")]
        System.IAsyncResult BeginUpdateExclusionDay(int obj, System.DateTime date, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateExclusionDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClinique/DeleteExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExclusionDayResponse")]
        bool DeleteExclusionDay(Medicus.SVC.ExclusionDay obj);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/DeleteExclusionDay", ReplyAction="http://tempuri.org/IServiceClinique/DeleteExclusionDayResponse")]
        System.IAsyncResult BeginDeleteExclusionDay(Medicus.SVC.ExclusionDay obj, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteExclusionDay(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCliniqueCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshArretDetravails")]
        void RefreshArretDetravails(System.Collections.Generic.List<Medicus.SVC.ArretDetravail> clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshArretDetravails")]
        System.IAsyncResult BeginRefreshArretDetravails(System.Collections.Generic.List<Medicus.SVC.ArretDetravail> clients, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshArretDetravails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshClients")]
        void RefreshClients(System.Collections.Generic.List<Medicus.SVC.Client> clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshClients")]
        System.IAsyncResult BeginRefreshClients(System.Collections.Generic.List<Medicus.SVC.Client> clients, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMembership")]
        void RefreshMembership(System.Collections.Generic.List<Medicus.SVC.Membership> membership);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMembership")]
        System.IAsyncResult BeginRefreshMembership(System.Collections.Generic.List<Medicus.SVC.Membership> membership, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMedecin")]
        void RefreshMedecin(System.Collections.Generic.List<Medicus.SVC.Medecin> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMedecin")]
        System.IAsyncResult BeginRefreshMedecin(System.Collections.Generic.List<Medicus.SVC.Medecin> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMedecin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshPatient")]
        void RefreshPatient(Medicus.SVC.Patient medecin, int patient);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshPatient")]
        System.IAsyncResult BeginRefreshPatient(Medicus.SVC.Patient medecin, int patient, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshPatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshSpécialité")]
        void RefreshSpécialité(System.Collections.Generic.List<Medicus.SVC.Spécialité> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshSpécialité")]
        System.IAsyncResult BeginRefreshSpécialité(System.Collections.Generic.List<Medicus.SVC.Spécialité> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshSpécialité(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshRendezVous")]
        void RefreshRendezVous(Medicus.SVC.RendezVou medecin, int opertype);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshRendezVous")]
        System.IAsyncResult BeginRefreshRendezVous(Medicus.SVC.RendezVou medecin, int opertype, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshRendezVous(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepense")]
        void RefreshDepense(Medicus.SVC.Depense medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepense")]
        System.IAsyncResult BeginRefreshDepense(Medicus.SVC.Depense medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifDepense")]
        void RefreshMotifDepense(System.Collections.Generic.List<Medicus.SVC.MotifDepense> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifDepense")]
        System.IAsyncResult BeginRefreshMotifDepense(System.Collections.Generic.List<Medicus.SVC.MotifDepense> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMotifDepense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifVisite")]
        void RefreshMotifVisite(System.Collections.Generic.List<Medicus.SVC.MotifVisite> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshMotifVisite")]
        System.IAsyncResult BeginRefreshMotifVisite(System.Collections.Generic.List<Medicus.SVC.MotifVisite> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshMotifVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshTypeCas")]
        void RefreshTypeCas(System.Collections.Generic.List<Medicus.SVC.TypeCa> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshTypeCas")]
        System.IAsyncResult BeginRefreshTypeCas(System.Collections.Generic.List<Medicus.SVC.TypeCa> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshTypeCas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshCasTraitement")]
        void RefreshCasTraitement(System.Collections.Generic.List<Medicus.SVC.CasTraitement> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshCasTraitement")]
        System.IAsyncResult BeginRefreshCasTraitement(System.Collections.Generic.List<Medicus.SVC.CasTraitement> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshCasTraitement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshVisite")]
        void RefreshVisite(Medicus.SVC.Visite medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshVisite")]
        System.IAsyncResult BeginRefreshVisite(Medicus.SVC.Visite medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshVisite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshConstante")]
        void RefreshConstante(System.Collections.Generic.List<Medicus.SVC.Constante> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshConstante")]
        System.IAsyncResult BeginRefreshConstante(System.Collections.Generic.List<Medicus.SVC.Constante> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshConstante(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDicom")]
        void RefreshDicom(System.Collections.Generic.List<Medicus.SVC.DicomFichier> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDicom")]
        System.IAsyncResult BeginRefreshDicom(System.Collections.Generic.List<Medicus.SVC.DicomFichier> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDicom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshParametre")]
        void RefreshParametre(Medicus.SVC.Param medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshParametre")]
        System.IAsyncResult BeginRefreshParametre(Medicus.SVC.Param medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshParametre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshSalleDattente")]
        void RefreshSalleDattente(Medicus.SVC.SalleDattente medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshSalleDattente")]
        System.IAsyncResult BeginRefreshSalleDattente(Medicus.SVC.SalleDattente medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshSalleDattente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDictionnaire")]
        void RefreshDictionnaire(System.Collections.Generic.List<Medicus.SVC.Dictionnaire> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDictionnaire")]
        System.IAsyncResult BeginRefreshDictionnaire(System.Collections.Generic.List<Medicus.SVC.Dictionnaire> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDictionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshEcranAcceuil")]
        void RefreshEcranAcceuil(Medicus.SVC.Patient medecin, Medicus.SVC.SalleDattente selectPatientSalle);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshEcranAcceuil")]
        System.IAsyncResult BeginRefreshEcranAcceuil(Medicus.SVC.Patient medecin, Medicus.SVC.SalleDattente selectPatientSalle, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshEcranAcceuil(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiment")]
        void RefreshDepeiment(Medicus.SVC.Depeiment medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeiment")]
        System.IAsyncResult BeginRefreshDepeiment(Medicus.SVC.Depeiment medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepeiment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeimentMultiple")]
        void RefreshDepeimentMultiple(System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDepeimentMultiple")]
        System.IAsyncResult BeginRefreshDepeimentMultiple(System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDepeimentMultiple(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDci")]
        void RefreshDci(System.Collections.Generic.List<Medicus.SVC.Dci> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDci")]
        System.IAsyncResult BeginRefreshDci(System.Collections.Generic.List<Medicus.SVC.Dci> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDci(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshCatalogue")]
        void RefreshCatalogue(System.Collections.Generic.List<Medicus.SVC.Catalogue> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshCatalogue")]
        System.IAsyncResult BeginRefreshCatalogue(System.Collections.Generic.List<Medicus.SVC.Catalogue> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshCatalogue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshActe")]
        void RefreshActe(System.Collections.Generic.List<Medicus.SVC.Acte> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshActe")]
        System.IAsyncResult BeginRefreshActe(System.Collections.Generic.List<Medicus.SVC.Acte> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshActe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshProduitOrdonnance")]
        void RefreshProduitOrdonnance(Medicus.SVC.ProduitOrdonnance medecin, int oper);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshProduitOrdonnance")]
        System.IAsyncResult BeginRefreshProduitOrdonnance(Medicus.SVC.ProduitOrdonnance medecin, int oper, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshProduitOrdonnance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshOrdonnancePatient")]
        void RefreshOrdonnancePatient(System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshOrdonnancePatient")]
        System.IAsyncResult BeginRefreshOrdonnancePatient(System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshOrdonnancePatient(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshEnteteOrdonnace")]
        void RefreshEnteteOrdonnace(System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshEnteteOrdonnace")]
        System.IAsyncResult BeginRefreshEnteteOrdonnace(System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshEnteteOrdonnace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/RefreshDiagnostic")]
        void RefreshDiagnostic(System.Collections.Generic.List<Medicus.SVC.Diagnostic> medecin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/RefreshDiagnostic")]
        System.IAsyncResult BeginRefreshDiagnostic(System.Collections.Generic.List<Medicus.SVC.Diagnostic> medecin, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshDiagnostic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/Receive")]
        void Receive(Medicus.SVC.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/Receive")]
        System.IAsyncResult BeginReceive(Medicus.SVC.Message msg, System.AsyncCallback callback, object asyncState);
        
        void EndReceive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReceiveWhisper")]
        void ReceiveWhisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReceiveWhisper")]
        System.IAsyncResult BeginReceiveWhisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiveWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/IsWritingCallback")]
        void IsWritingCallback(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/IsWritingCallback")]
        System.IAsyncResult BeginIsWritingCallback(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWritingCallback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/ReceiverFile")]
        void ReceiverFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/ReceiverFile")]
        System.IAsyncResult BeginReceiverFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiverFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/UserJoin")]
        void UserJoin(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UserJoin")]
        System.IAsyncResult BeginUserJoin(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndUserJoin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceClinique/UserLeave")]
        void UserLeave(Medicus.SVC.Client client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServiceClinique/UserLeave")]
        System.IAsyncResult BeginUserLeave(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndUserLeave(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCliniqueChannel : Medicus.SVC.IServiceClinique, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVousParMedecinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVousParMedecinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVousParPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVousParPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRendezVousAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRendezVousAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.RendezVou>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Patient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPatientPARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPatientPARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Patient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPatienteEXISTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPatienteEXISTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPatientNomPrenomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPatientNomPrenomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medicus.SVC.Patient Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medicus.SVC.Patient)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPatientBYIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPatientBYIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Patient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Client> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Client>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllClientDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllClientDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<Medicus.SVC.Client, object>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerificationCle1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerificationCle1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDocumentIsHereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDocumentIsHereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllParamétreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllParamétreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medicus.SVC.Param Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medicus.SVC.Param)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDictionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDictionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Dictionnaire> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Dictionnaire>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAutreBilanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAutreBilanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.AutreBilan> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.AutreBilan>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDiagnosticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDiagnosticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Diagnostic> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Diagnostic>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEnteteOrdonnaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEnteteOrdonnaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllOrdonnancePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllOrdonnancePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllActeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllActeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Acte> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Acte>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCatalogueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCatalogueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Catalogue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Catalogue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeiementMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeiementMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepeimentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepeimentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Depeiment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Depeiment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDicomFichierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDicomFichierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.DicomFichier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.DicomFichier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllArretDetravailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllArretDetravailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ArretDetravail> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.ArretDetravail>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllProduitOrdonnanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProduitOrdonnanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDciCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDciCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Dci> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Dci>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Depense> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Depense>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMotifDepenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMotifDepenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.MotifDepense> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.MotifDepense>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSalleDattenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSalleDattenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.SalleDattente>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSalleDattenteALLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSalleDattenteALLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.SalleDattente>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTypeCasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTypeCasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.TypeCa> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.TypeCa>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllConstantesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllConstantesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Constante> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Constante>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllConstantesByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllConstantesByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Constante> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Constante>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTraitementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTraitementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.CasTraitement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.CasTraitement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Visite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisiteAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisiteAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Visite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisiteByVisiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisiteByVisiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Visite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisiteByClepatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisiteByClepatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Visite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisiteByVisiteMedecinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisiteByVisiteMedecinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Visite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMedecinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMedecinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Medecin> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Medecin>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSpécialitéCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSpécialitéCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Spécialité> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Spécialité>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMotifVisiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMotifVisiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.MotifVisite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.MotifVisite>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Membership> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.Membership>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllExclusionDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllExclusionDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ExclusionDay> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medicus.SVC.ExclusionDay>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertExclusionDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertExclusionDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateExclusionDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateExclusionDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteExclusionDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteExclusionDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCliniqueClient : System.ServiceModel.DuplexClientBase<Medicus.SVC.IServiceClinique>, Medicus.SVC.IServiceClinique {
        
        private BeginOperationDelegate onBeginGetAllRendezVousParMedecinDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVousParMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVousParMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRendezVousParPatientDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVousParPatientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVousParPatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRendezVousDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVousDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVousCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRendezVousAllDelegate;
        
        private EndOperationDelegate onEndGetAllRendezVousAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRendezVousAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertRendezDelegate;
        
        private EndOperationDelegate onEndInsertRendezDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRendezCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRendezVousDelegate;
        
        private EndOperationDelegate onEndUpdateRendezVousDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRendezVousCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRendezVousDelegate;
        
        private EndOperationDelegate onEndDeleteRendezVousDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRendezVousCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPatientDelegate;
        
        private EndOperationDelegate onEndGetAllPatientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPatientPARDelegate;
        
        private EndOperationDelegate onEndGetAllPatientPARDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPatientPARCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPatienteEXISTEDelegate;
        
        private EndOperationDelegate onEndGetAllPatienteEXISTEDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPatienteEXISTECompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPatientNomPrenomDelegate;
        
        private EndOperationDelegate onEndGetAllPatientNomPrenomDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPatientNomPrenomCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPatientBYIDDelegate;
        
        private EndOperationDelegate onEndGetAllPatientBYIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPatientBYIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertPatientDelegate;
        
        private EndOperationDelegate onEndInsertPatientDelegate;
        
        private System.Threading.SendOrPostCallback onInsertPatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePatientDelegate;
        
        private EndOperationDelegate onEndUpdatePatientDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePatientDelegate;
        
        private EndOperationDelegate onEndDeletePatientDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientDelegate;
        
        private EndOperationDelegate onEndGetAllClientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllClientDictDelegate;
        
        private EndOperationDelegate onEndGetAllClientDictDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllClientDictCompletedDelegate;
        
        private BeginOperationDelegate onBeginReConnectDelegate;
        
        private EndOperationDelegate onEndReConnectDelegate;
        
        private System.Threading.SendOrPostCallback onReConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginSayDelegate;
        
        private EndOperationDelegate onEndSayDelegate;
        
        private System.Threading.SendOrPostCallback onSayCompletedDelegate;
        
        private BeginOperationDelegate onBeginWhisperDelegate;
        
        private EndOperationDelegate onEndWhisperDelegate;
        
        private System.Threading.SendOrPostCallback onWhisperCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsWritingDelegate;
        
        private EndOperationDelegate onEndIsWritingDelegate;
        
        private System.Threading.SendOrPostCallback onIsWritingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendFileDelegate;
        
        private EndOperationDelegate onEndSendFileDelegate;
        
        private System.Threading.SendOrPostCallback onSendFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerificationCle1Delegate;
        
        private EndOperationDelegate onEndVerificationCle1Delegate;
        
        private System.Threading.SendOrPostCallback onVerificationCle1CompletedDelegate;
        
        private BeginOperationDelegate onBeginTestConnectDelegate;
        
        private EndOperationDelegate onEndTestConnectDelegate;
        
        private System.Threading.SendOrPostCallback onTestConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDiagnosticRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDiagnosticRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDiagnosticRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterArrettravailRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterArrettravailRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterArrettravailRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDictionnaireRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDictionnaireRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDictionnaireRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterProduitOrdonnaceRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterProduitOrdonnaceRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterProduitOrdonnaceRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDepenseRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDepenseRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDepenseRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterActeCatalogueRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterActeCatalogueRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterActeCatalogueRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterSoldeVisiteRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterSoldeVisiteRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterSoldeVisiteRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterPatientRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterPatientRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterPatientRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDciiRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDciiRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDciiRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterCasTraitementRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterCasTraitementRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterCasTraitementRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterTransactionPaiementRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterTransactionPaiementRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterTransactionPaiementRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterSalleAtentefRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterSalleAtentefRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterSalleAtentefRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterRendezVOUSfRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterRendezVOUSfRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterRendezVOUSfRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginSalleAttenteDemandeChezLeMedecinDelegate;
        
        private EndOperationDelegate onEndSalleAttenteDemandeChezLeMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onSalleAttenteDemandeChezLeMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginAjouterDicomImageRefreshDelegate;
        
        private EndOperationDelegate onEndAjouterDicomImageRefreshDelegate;
        
        private System.Threading.SendOrPostCallback onAjouterDicomImageRefreshCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadDocumentDelegate;
        
        private EndOperationDelegate onEndUploadDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onUploadDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDocumentDelegate;
        
        private EndOperationDelegate onEndDownloadDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDocumentIsHereDelegate;
        
        private EndOperationDelegate onEndDownloadDocumentIsHereDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDocumentIsHereCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllParamétreDelegate;
        
        private EndOperationDelegate onEndGetAllParamétreDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllParamétreCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateParamétreDelegate;
        
        private EndOperationDelegate onEndUpdateParamétreDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateParamétreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDictionnaireDelegate;
        
        private EndOperationDelegate onEndGetAllDictionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDictionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDictionnaireDelegate;
        
        private EndOperationDelegate onEndInsertDictionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDictionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDictionnaireDelegate;
        
        private EndOperationDelegate onEndUpdateDictionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDictionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDictionnaireDelegate;
        
        private EndOperationDelegate onEndDeleteDictionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDictionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAutreBilanDelegate;
        
        private EndOperationDelegate onEndGetAllAutreBilanDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAutreBilanCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertAutreBilanDelegate;
        
        private EndOperationDelegate onEndInsertAutreBilanDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAutreBilanCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAutreBilanDelegate;
        
        private EndOperationDelegate onEndUpdateAutreBilanDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAutreBilanCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAutreBilanDelegate;
        
        private EndOperationDelegate onEndDeleteAutreBilanDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAutreBilanCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDiagnosticDelegate;
        
        private EndOperationDelegate onEndGetAllDiagnosticDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDiagnosticCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDiagnosticDelegate;
        
        private EndOperationDelegate onEndInsertDiagnosticDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDiagnosticCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDiagnosticDelegate;
        
        private EndOperationDelegate onEndUpdateDiagnosticDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDiagnosticCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDiagnosticDelegate;
        
        private EndOperationDelegate onEndDeleteDiagnosticDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDiagnosticCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllEnteteOrdonnaceDelegate;
        
        private EndOperationDelegate onEndGetAllEnteteOrdonnaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEnteteOrdonnaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertEnteteOrdonnaceDelegate;
        
        private EndOperationDelegate onEndInsertEnteteOrdonnaceDelegate;
        
        private System.Threading.SendOrPostCallback onInsertEnteteOrdonnaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEnteteOrdonnaceDelegate;
        
        private EndOperationDelegate onEndUpdateEnteteOrdonnaceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEnteteOrdonnaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEnteteOrdonnaceDelegate;
        
        private EndOperationDelegate onEndDeleteEnteteOrdonnaceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEnteteOrdonnaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllOrdonnancePatientDelegate;
        
        private EndOperationDelegate onEndGetAllOrdonnancePatientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllOrdonnancePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertOrdonnancePatientDelegate;
        
        private EndOperationDelegate onEndInsertOrdonnancePatientDelegate;
        
        private System.Threading.SendOrPostCallback onInsertOrdonnancePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrdonnancePatientDelegate;
        
        private EndOperationDelegate onEndUpdateOrdonnancePatientDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrdonnancePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrdonnancePatientDelegate;
        
        private EndOperationDelegate onEndDeleteOrdonnancePatientDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrdonnancePatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllActeDelegate;
        
        private EndOperationDelegate onEndGetAllActeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllActeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertActeDelegate;
        
        private EndOperationDelegate onEndInsertActeDelegate;
        
        private System.Threading.SendOrPostCallback onInsertActeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateActeDelegate;
        
        private EndOperationDelegate onEndUpdateActeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateActeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteActeDelegate;
        
        private EndOperationDelegate onEndDeleteActeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteActeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCatalogueDelegate;
        
        private EndOperationDelegate onEndGetAllCatalogueDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCatalogueCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCatalogueDelegate;
        
        private EndOperationDelegate onEndInsertCatalogueDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCatalogueCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCatalogueDelegate;
        
        private EndOperationDelegate onEndUpdateCatalogueDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCatalogueCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCatalogueDelegate;
        
        private EndOperationDelegate onEndDeleteCatalogueDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCatalogueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndGetAllDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndInsertDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndUpdateDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepeiementMultipleDelegate;
        
        private EndOperationDelegate onEndDeleteDepeiementMultipleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepeiementMultipleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepeimentDelegate;
        
        private EndOperationDelegate onEndGetAllDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepeimentDelegate;
        
        private EndOperationDelegate onEndInsertDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepeimentDelegate;
        
        private EndOperationDelegate onEndUpdateDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepeimentDelegate;
        
        private EndOperationDelegate onEndDeleteDepeimentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepeimentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDicomFichierDelegate;
        
        private EndOperationDelegate onEndGetAllDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDicomFichierDelegate;
        
        private EndOperationDelegate onEndInsertDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDicomFichierDelegate;
        
        private EndOperationDelegate onEndUpdateDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDicomFichierDelegate;
        
        private EndOperationDelegate onEndDeleteDicomFichierDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDicomFichierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllArretDetravailDelegate;
        
        private EndOperationDelegate onEndGetAllArretDetravailDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllArretDetravailCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertArretDetravailDelegate;
        
        private EndOperationDelegate onEndInsertArretDetravailDelegate;
        
        private System.Threading.SendOrPostCallback onInsertArretDetravailCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteArretDetravailDelegate;
        
        private EndOperationDelegate onEndDeleteArretDetravailDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteArretDetravailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProduitOrdonnanceDelegate;
        
        private EndOperationDelegate onEndGetAllProduitOrdonnanceDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProduitOrdonnanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertProduitOrdonnanceDelegate;
        
        private EndOperationDelegate onEndInsertProduitOrdonnanceDelegate;
        
        private System.Threading.SendOrPostCallback onInsertProduitOrdonnanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProduitOrdonnanceDelegate;
        
        private EndOperationDelegate onEndUpdateProduitOrdonnanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProduitOrdonnanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProduitOrdonnanceDelegate;
        
        private EndOperationDelegate onEndDeleteProduitOrdonnanceDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProduitOrdonnanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDciDelegate;
        
        private EndOperationDelegate onEndGetAllDciDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDciCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDciDelegate;
        
        private EndOperationDelegate onEndInsertDciDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDciCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDciDelegate;
        
        private EndOperationDelegate onEndUpdateDciDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDciCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletDciDelegate;
        
        private EndOperationDelegate onEndDeletDciDelegate;
        
        private System.Threading.SendOrPostCallback onDeletDciCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepenseDelegate;
        
        private EndOperationDelegate onEndGetAllDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDepenseDelegate;
        
        private EndOperationDelegate onEndInsertDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepenseDelegate;
        
        private EndOperationDelegate onEndUpdateDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDepenseDelegate;
        
        private EndOperationDelegate onEndDeleteDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMotifDepenseDelegate;
        
        private EndOperationDelegate onEndGetAllMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMotifDepenseDelegate;
        
        private EndOperationDelegate onEndInsertMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMotifDepenseDelegate;
        
        private EndOperationDelegate onEndUpdateMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMotifDepenseDelegate;
        
        private EndOperationDelegate onEndDeleteMotifDepenseDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMotifDepenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSalleDattenteDelegate;
        
        private EndOperationDelegate onEndGetAllSalleDattenteDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSalleDattenteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSalleDattenteALLDelegate;
        
        private EndOperationDelegate onEndGetAllSalleDattenteALLDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSalleDattenteALLCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertSalleDatenteDelegate;
        
        private EndOperationDelegate onEndInsertSalleDatenteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertSalleDatenteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSalleDattenteDelegate;
        
        private EndOperationDelegate onEndUpdateSalleDattenteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSalleDattenteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSalleDattenteDelegate;
        
        private EndOperationDelegate onEndDeleteSalleDattenteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSalleDattenteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTypeCasDelegate;
        
        private EndOperationDelegate onEndGetAllTypeCasDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTypeCasCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertTypeCasDelegate;
        
        private EndOperationDelegate onEndInsertTypeCasDelegate;
        
        private System.Threading.SendOrPostCallback onInsertTypeCasCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTypeCasDelegate;
        
        private EndOperationDelegate onEndUpdateTypeCasDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTypeCasCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTypeCasDelegate;
        
        private EndOperationDelegate onEndDeleteTypeCasDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTypeCasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllConstantesDelegate;
        
        private EndOperationDelegate onEndGetAllConstantesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllConstantesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllConstantesByPatientDelegate;
        
        private EndOperationDelegate onEndGetAllConstantesByPatientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllConstantesByPatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertConstanteDelegate;
        
        private EndOperationDelegate onEndInsertConstanteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertConstanteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConstanteDelegate;
        
        private EndOperationDelegate onEndUpdateConstanteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConstanteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteConstanteDelegate;
        
        private EndOperationDelegate onEndDeleteConstanteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteConstanteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTraitementDelegate;
        
        private EndOperationDelegate onEndGetAllTraitementDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTraitementCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertTypeTraitementDelegate;
        
        private EndOperationDelegate onEndInsertTypeTraitementDelegate;
        
        private System.Threading.SendOrPostCallback onInsertTypeTraitementCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTypeTraitementDelegate;
        
        private EndOperationDelegate onEndUpdateTypeTraitementDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTypeTraitementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTypeTraitementDelegate;
        
        private EndOperationDelegate onEndDeleteTypeTraitementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTypeTraitementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisiteDelegate;
        
        private EndOperationDelegate onEndGetAllVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisiteAllDelegate;
        
        private EndOperationDelegate onEndGetAllVisiteAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisiteAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisiteByVisiteDelegate;
        
        private EndOperationDelegate onEndGetAllVisiteByVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisiteByVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisiteByClepatientDelegate;
        
        private EndOperationDelegate onEndGetAllVisiteByClepatientDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisiteByClepatientCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisiteByVisiteMedecinDelegate;
        
        private EndOperationDelegate onEndGetAllVisiteByVisiteMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisiteByVisiteMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVisiteDelegate;
        
        private EndOperationDelegate onEndInsertVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVisiteDelegate;
        
        private EndOperationDelegate onEndUpdateVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVisiteDelegate;
        
        private EndOperationDelegate onEndDeleteVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMedecinDelegate;
        
        private EndOperationDelegate onEndGetAllMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMedecinDelegate;
        
        private EndOperationDelegate onEndInsertMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMedecinDelegate;
        
        private EndOperationDelegate onEndUpdateMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMedecinDelegate;
        
        private EndOperationDelegate onEndDeleteMedecinDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMedecinCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSpécialitéDelegate;
        
        private EndOperationDelegate onEndGetAllSpécialitéDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSpécialitéCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertSpécialitéDelegate;
        
        private EndOperationDelegate onEndInsertSpécialitéDelegate;
        
        private System.Threading.SendOrPostCallback onInsertSpécialitéCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSpécialitéDelegate;
        
        private EndOperationDelegate onEndUpdateSpécialitéDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSpécialitéCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSpécialitéDelegate;
        
        private EndOperationDelegate onEndDeleteSpécialitéDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSpécialitéCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMotifVisiteDelegate;
        
        private EndOperationDelegate onEndGetAllMotifVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMotifVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMotifVisiteDelegate;
        
        private EndOperationDelegate onEndInsertMotifVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMotifVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMotifVisiteDelegate;
        
        private EndOperationDelegate onEndUpdateMotifVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMotifVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMotifVisiteDelegate;
        
        private EndOperationDelegate onEndDeleteMotifVisiteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMotifVisiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllMembershipDelegate;
        
        private EndOperationDelegate onEndGetAllMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMembershipDelegate;
        
        private EndOperationDelegate onEndInsertMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onInsertMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMembershipDelegate;
        
        private EndOperationDelegate onEndUpdateMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMembershipDelegate;
        
        private EndOperationDelegate onEndDeleteMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllExclusionDayDelegate;
        
        private EndOperationDelegate onEndGetAllExclusionDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllExclusionDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertExclusionDayDelegate;
        
        private EndOperationDelegate onEndInsertExclusionDayDelegate;
        
        private System.Threading.SendOrPostCallback onInsertExclusionDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateExclusionDayDelegate;
        
        private EndOperationDelegate onEndUpdateExclusionDayDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateExclusionDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteExclusionDayDelegate;
        
        private EndOperationDelegate onEndDeleteExclusionDayDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteExclusionDayCompletedDelegate;
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCliniqueClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllRendezVousParMedecinCompletedEventArgs> GetAllRendezVousParMedecinCompleted;
        
        public event System.EventHandler<GetAllRendezVousParPatientCompletedEventArgs> GetAllRendezVousParPatientCompleted;
        
        public event System.EventHandler<GetAllRendezVousCompletedEventArgs> GetAllRendezVousCompleted;
        
        public event System.EventHandler<GetAllRendezVousAllCompletedEventArgs> GetAllRendezVousAllCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertRendezCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRendezVousCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteRendezVousCompleted;
        
        public event System.EventHandler<GetAllPatientCompletedEventArgs> GetAllPatientCompleted;
        
        public event System.EventHandler<GetAllPatientPARCompletedEventArgs> GetAllPatientPARCompleted;
        
        public event System.EventHandler<GetAllPatienteEXISTECompletedEventArgs> GetAllPatienteEXISTECompleted;
        
        public event System.EventHandler<GetAllPatientNomPrenomCompletedEventArgs> GetAllPatientNomPrenomCompleted;
        
        public event System.EventHandler<GetAllPatientBYIDCompletedEventArgs> GetAllPatientBYIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertPatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePatientCompleted;
        
        public event System.EventHandler<ConnectCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<GetAllClientCompletedEventArgs> GetAllClientCompleted;
        
        public event System.EventHandler<GetAllClientDictCompletedEventArgs> GetAllClientDictCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WhisperCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> IsWritingCompleted;
        
        public event System.EventHandler<SendFileCompletedEventArgs> SendFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public event System.EventHandler<VerificationCle1CompletedEventArgs> VerificationCle1Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TestConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDiagnosticRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterArrettravailRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDictionnaireRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterProduitOrdonnaceRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDepenseRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterActeCatalogueRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterSoldeVisiteRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterPatientRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterEnteteOrdonnaceOrdonnancePatientRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDciiRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterCasTraitementRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterTransactionPaiementRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterSalleAtentefRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterRendezVOUSfRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SalleAttenteDemandeChezLeMedecinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AjouterDicomImageRefreshCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadDocumentCompleted;
        
        public event System.EventHandler<DownloadDocumentCompletedEventArgs> DownloadDocumentCompleted;
        
        public event System.EventHandler<DownloadDocumentIsHereCompletedEventArgs> DownloadDocumentIsHereCompleted;
        
        public event System.EventHandler<GetAllParamétreCompletedEventArgs> GetAllParamétreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateParamétreCompleted;
        
        public event System.EventHandler<GetAllDictionnaireCompletedEventArgs> GetAllDictionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDictionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDictionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDictionnaireCompleted;
        
        public event System.EventHandler<GetAllAutreBilanCompletedEventArgs> GetAllAutreBilanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertAutreBilanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAutreBilanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAutreBilanCompleted;
        
        public event System.EventHandler<GetAllDiagnosticCompletedEventArgs> GetAllDiagnosticCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDiagnosticCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDiagnosticCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDiagnosticCompleted;
        
        public event System.EventHandler<GetAllEnteteOrdonnaceCompletedEventArgs> GetAllEnteteOrdonnaceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertEnteteOrdonnaceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEnteteOrdonnaceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEnteteOrdonnaceCompleted;
        
        public event System.EventHandler<GetAllOrdonnancePatientCompletedEventArgs> GetAllOrdonnancePatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertOrdonnancePatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOrdonnancePatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOrdonnancePatientCompleted;
        
        public event System.EventHandler<GetAllActeCompletedEventArgs> GetAllActeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertActeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateActeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteActeCompleted;
        
        public event System.EventHandler<GetAllCatalogueCompletedEventArgs> GetAllCatalogueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertCatalogueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCatalogueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCatalogueCompleted;
        
        public event System.EventHandler<GetAllDepeiementMultipleCompletedEventArgs> GetAllDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepeiementMultipleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepeiementMultipleCompleted;
        
        public event System.EventHandler<GetAllDepeimentCompletedEventArgs> GetAllDepeimentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepeimentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepeimentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepeimentCompleted;
        
        public event System.EventHandler<GetAllDicomFichierCompletedEventArgs> GetAllDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDicomFichierCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDicomFichierCompleted;
        
        public event System.EventHandler<GetAllArretDetravailCompletedEventArgs> GetAllArretDetravailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertArretDetravailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteArretDetravailCompleted;
        
        public event System.EventHandler<GetAllProduitOrdonnanceCompletedEventArgs> GetAllProduitOrdonnanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertProduitOrdonnanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateProduitOrdonnanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteProduitOrdonnanceCompleted;
        
        public event System.EventHandler<GetAllDciCompletedEventArgs> GetAllDciCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDciCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDciCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletDciCompleted;
        
        public event System.EventHandler<GetAllDepenseCompletedEventArgs> GetAllDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDepenseCompleted;
        
        public event System.EventHandler<GetAllMotifDepenseCompletedEventArgs> GetAllMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMotifDepenseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMotifDepenseCompleted;
        
        public event System.EventHandler<GetAllSalleDattenteCompletedEventArgs> GetAllSalleDattenteCompleted;
        
        public event System.EventHandler<GetAllSalleDattenteALLCompletedEventArgs> GetAllSalleDattenteALLCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertSalleDatenteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSalleDattenteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSalleDattenteCompleted;
        
        public event System.EventHandler<GetAllTypeCasCompletedEventArgs> GetAllTypeCasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertTypeCasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTypeCasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTypeCasCompleted;
        
        public event System.EventHandler<GetAllConstantesCompletedEventArgs> GetAllConstantesCompleted;
        
        public event System.EventHandler<GetAllConstantesByPatientCompletedEventArgs> GetAllConstantesByPatientCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertConstanteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateConstanteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteConstanteCompleted;
        
        public event System.EventHandler<GetAllTraitementCompletedEventArgs> GetAllTraitementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertTypeTraitementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTypeTraitementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTypeTraitementCompleted;
        
        public event System.EventHandler<GetAllVisiteCompletedEventArgs> GetAllVisiteCompleted;
        
        public event System.EventHandler<GetAllVisiteAllCompletedEventArgs> GetAllVisiteAllCompleted;
        
        public event System.EventHandler<GetAllVisiteByVisiteCompletedEventArgs> GetAllVisiteByVisiteCompleted;
        
        public event System.EventHandler<GetAllVisiteByClepatientCompletedEventArgs> GetAllVisiteByClepatientCompleted;
        
        public event System.EventHandler<GetAllVisiteByVisiteMedecinCompletedEventArgs> GetAllVisiteByVisiteMedecinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertVisiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVisiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteVisiteCompleted;
        
        public event System.EventHandler<GetAllMedecinCompletedEventArgs> GetAllMedecinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMedecinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMedecinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMedecinCompleted;
        
        public event System.EventHandler<GetAllSpécialitéCompletedEventArgs> GetAllSpécialitéCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertSpécialitéCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSpécialitéCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSpécialitéCompleted;
        
        public event System.EventHandler<GetAllMotifVisiteCompletedEventArgs> GetAllMotifVisiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMotifVisiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMotifVisiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMotifVisiteCompleted;
        
        public event System.EventHandler<GetAllMembershipCompletedEventArgs> GetAllMembershipCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertMembershipCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMembershipCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMembershipCompleted;
        
        public event System.EventHandler<GetAllExclusionDayCompletedEventArgs> GetAllExclusionDayCompleted;
        
        public event System.EventHandler<InsertExclusionDayCompletedEventArgs> InsertExclusionDayCompleted;
        
        public event System.EventHandler<UpdateExclusionDayCompletedEventArgs> UpdateExclusionDayCompleted;
        
        public event System.EventHandler<DeleteExclusionDayCompletedEventArgs> DeleteExclusionDayCompleted;
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousParMedecin(int idmedecin) {
            return base.Channel.GetAllRendezVousParMedecin(idmedecin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVousParMedecin(int idmedecin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVousParMedecin(idmedecin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousParMedecin(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVousParMedecin(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVousParMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idmedecin = ((int)(inValues[0]));
            return this.BeginGetAllRendezVousParMedecin(idmedecin, callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVousParMedecin(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.RendezVou> retVal = this.EndGetAllRendezVousParMedecin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVousParMedecinCompleted(object state) {
            if ((this.GetAllRendezVousParMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVousParMedecinCompleted(this, new GetAllRendezVousParMedecinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVousParMedecinAsync(int idmedecin) {
            this.GetAllRendezVousParMedecinAsync(idmedecin, null);
        }
        
        public void GetAllRendezVousParMedecinAsync(int idmedecin, object userState) {
            if ((this.onBeginGetAllRendezVousParMedecinDelegate == null)) {
                this.onBeginGetAllRendezVousParMedecinDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVousParMedecin);
            }
            if ((this.onEndGetAllRendezVousParMedecinDelegate == null)) {
                this.onEndGetAllRendezVousParMedecinDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVousParMedecin);
            }
            if ((this.onGetAllRendezVousParMedecinCompletedDelegate == null)) {
                this.onGetAllRendezVousParMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVousParMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVousParMedecinDelegate, new object[] {
                        idmedecin}, this.onEndGetAllRendezVousParMedecinDelegate, this.onGetAllRendezVousParMedecinCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousParPatient(int idpatient) {
            return base.Channel.GetAllRendezVousParPatient(idpatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVousParPatient(int idpatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVousParPatient(idpatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousParPatient(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVousParPatient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVousParPatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idpatient = ((int)(inValues[0]));
            return this.BeginGetAllRendezVousParPatient(idpatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVousParPatient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.RendezVou> retVal = this.EndGetAllRendezVousParPatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVousParPatientCompleted(object state) {
            if ((this.GetAllRendezVousParPatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVousParPatientCompleted(this, new GetAllRendezVousParPatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVousParPatientAsync(int idpatient) {
            this.GetAllRendezVousParPatientAsync(idpatient, null);
        }
        
        public void GetAllRendezVousParPatientAsync(int idpatient, object userState) {
            if ((this.onBeginGetAllRendezVousParPatientDelegate == null)) {
                this.onBeginGetAllRendezVousParPatientDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVousParPatient);
            }
            if ((this.onEndGetAllRendezVousParPatientDelegate == null)) {
                this.onEndGetAllRendezVousParPatientDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVousParPatient);
            }
            if ((this.onGetAllRendezVousParPatientCompletedDelegate == null)) {
                this.onGetAllRendezVousParPatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVousParPatientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVousParPatientDelegate, new object[] {
                        idpatient}, this.onEndGetAllRendezVousParPatientDelegate, this.onGetAllRendezVousParPatientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVous(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllRendezVous(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVous(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVous(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVous(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVous(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVous(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllRendezVous(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVous(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.RendezVou> retVal = this.EndGetAllRendezVous(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVousCompleted(object state) {
            if ((this.GetAllRendezVousCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVousCompleted(this, new GetAllRendezVousCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVousAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllRendezVousAsync(date1, date2, null);
        }
        
        public void GetAllRendezVousAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllRendezVousDelegate == null)) {
                this.onBeginGetAllRendezVousDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVous);
            }
            if ((this.onEndGetAllRendezVousDelegate == null)) {
                this.onEndGetAllRendezVousDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVous);
            }
            if ((this.onGetAllRendezVousCompletedDelegate == null)) {
                this.onGetAllRendezVousCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVousCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVousDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllRendezVousDelegate, this.onGetAllRendezVousCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> GetAllRendezVousAll() {
            return base.Channel.GetAllRendezVousAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllRendezVousAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRendezVousAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.RendezVou> EndGetAllRendezVousAll(System.IAsyncResult result) {
            return base.Channel.EndGetAllRendezVousAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRendezVousAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllRendezVousAll(callback, asyncState);
        }
        
        private object[] OnEndGetAllRendezVousAll(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.RendezVou> retVal = this.EndGetAllRendezVousAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRendezVousAllCompleted(object state) {
            if ((this.GetAllRendezVousAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRendezVousAllCompleted(this, new GetAllRendezVousAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRendezVousAllAsync() {
            this.GetAllRendezVousAllAsync(null);
        }
        
        public void GetAllRendezVousAllAsync(object userState) {
            if ((this.onBeginGetAllRendezVousAllDelegate == null)) {
                this.onBeginGetAllRendezVousAllDelegate = new BeginOperationDelegate(this.OnBeginGetAllRendezVousAll);
            }
            if ((this.onEndGetAllRendezVousAllDelegate == null)) {
                this.onEndGetAllRendezVousAllDelegate = new EndOperationDelegate(this.OnEndGetAllRendezVousAll);
            }
            if ((this.onGetAllRendezVousAllCompletedDelegate == null)) {
                this.onGetAllRendezVousAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRendezVousAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRendezVousAllDelegate, null, this.onEndGetAllRendezVousAllDelegate, this.onGetAllRendezVousAllCompletedDelegate, userState);
        }
        
        public void InsertRendez(Medicus.SVC.RendezVou obj) {
            base.Channel.InsertRendez(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertRendez(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRendez(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertRendez(System.IAsyncResult result) {
            base.Channel.EndInsertRendez(result);
        }
        
        private System.IAsyncResult OnBeginInsertRendez(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.RendezVou obj = ((Medicus.SVC.RendezVou)(inValues[0]));
            return this.BeginInsertRendez(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertRendez(System.IAsyncResult result) {
            this.EndInsertRendez(result);
            return null;
        }
        
        private void OnInsertRendezCompleted(object state) {
            if ((this.InsertRendezCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRendezCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRendezAsync(Medicus.SVC.RendezVou obj) {
            this.InsertRendezAsync(obj, null);
        }
        
        public void InsertRendezAsync(Medicus.SVC.RendezVou obj, object userState) {
            if ((this.onBeginInsertRendezDelegate == null)) {
                this.onBeginInsertRendezDelegate = new BeginOperationDelegate(this.OnBeginInsertRendez);
            }
            if ((this.onEndInsertRendezDelegate == null)) {
                this.onEndInsertRendezDelegate = new EndOperationDelegate(this.OnEndInsertRendez);
            }
            if ((this.onInsertRendezCompletedDelegate == null)) {
                this.onInsertRendezCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRendezCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRendezDelegate, new object[] {
                        obj}, this.onEndInsertRendezDelegate, this.onInsertRendezCompletedDelegate, userState);
        }
        
        public void UpdateRendezVous(Medicus.SVC.RendezVou obj) {
            base.Channel.UpdateRendezVous(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateRendezVous(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRendezVous(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateRendezVous(System.IAsyncResult result) {
            base.Channel.EndUpdateRendezVous(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRendezVous(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.RendezVou obj = ((Medicus.SVC.RendezVou)(inValues[0]));
            return this.BeginUpdateRendezVous(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateRendezVous(System.IAsyncResult result) {
            this.EndUpdateRendezVous(result);
            return null;
        }
        
        private void OnUpdateRendezVousCompleted(object state) {
            if ((this.UpdateRendezVousCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRendezVousCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRendezVousAsync(Medicus.SVC.RendezVou obj) {
            this.UpdateRendezVousAsync(obj, null);
        }
        
        public void UpdateRendezVousAsync(Medicus.SVC.RendezVou obj, object userState) {
            if ((this.onBeginUpdateRendezVousDelegate == null)) {
                this.onBeginUpdateRendezVousDelegate = new BeginOperationDelegate(this.OnBeginUpdateRendezVous);
            }
            if ((this.onEndUpdateRendezVousDelegate == null)) {
                this.onEndUpdateRendezVousDelegate = new EndOperationDelegate(this.OnEndUpdateRendezVous);
            }
            if ((this.onUpdateRendezVousCompletedDelegate == null)) {
                this.onUpdateRendezVousCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRendezVousCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRendezVousDelegate, new object[] {
                        obj}, this.onEndUpdateRendezVousDelegate, this.onUpdateRendezVousCompletedDelegate, userState);
        }
        
        public void DeleteRendezVous(Medicus.SVC.RendezVou obj) {
            base.Channel.DeleteRendezVous(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRendezVous(Medicus.SVC.RendezVou obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRendezVous(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteRendezVous(System.IAsyncResult result) {
            base.Channel.EndDeleteRendezVous(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRendezVous(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.RendezVou obj = ((Medicus.SVC.RendezVou)(inValues[0]));
            return this.BeginDeleteRendezVous(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteRendezVous(System.IAsyncResult result) {
            this.EndDeleteRendezVous(result);
            return null;
        }
        
        private void OnDeleteRendezVousCompleted(object state) {
            if ((this.DeleteRendezVousCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRendezVousCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRendezVousAsync(Medicus.SVC.RendezVou obj) {
            this.DeleteRendezVousAsync(obj, null);
        }
        
        public void DeleteRendezVousAsync(Medicus.SVC.RendezVou obj, object userState) {
            if ((this.onBeginDeleteRendezVousDelegate == null)) {
                this.onBeginDeleteRendezVousDelegate = new BeginOperationDelegate(this.OnBeginDeleteRendezVous);
            }
            if ((this.onEndDeleteRendezVousDelegate == null)) {
                this.onEndDeleteRendezVousDelegate = new EndOperationDelegate(this.OnEndDeleteRendezVous);
            }
            if ((this.onDeleteRendezVousCompletedDelegate == null)) {
                this.onDeleteRendezVousCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRendezVousCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRendezVousDelegate, new object[] {
                        obj}, this.onEndDeleteRendezVousDelegate, this.onDeleteRendezVousCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatient() {
            return base.Channel.GetAllPatient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPatient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPatient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatient(System.IAsyncResult result) {
            return base.Channel.EndGetAllPatient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllPatient(callback, asyncState);
        }
        
        private object[] OnEndGetAllPatient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Patient> retVal = this.EndGetAllPatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPatientCompleted(object state) {
            if ((this.GetAllPatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPatientCompleted(this, new GetAllPatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPatientAsync() {
            this.GetAllPatientAsync(null);
        }
        
        public void GetAllPatientAsync(object userState) {
            if ((this.onBeginGetAllPatientDelegate == null)) {
                this.onBeginGetAllPatientDelegate = new BeginOperationDelegate(this.OnBeginGetAllPatient);
            }
            if ((this.onEndGetAllPatientDelegate == null)) {
                this.onEndGetAllPatientDelegate = new EndOperationDelegate(this.OnEndGetAllPatient);
            }
            if ((this.onGetAllPatientCompletedDelegate == null)) {
                this.onGetAllPatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPatientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPatientDelegate, null, this.onEndGetAllPatientDelegate, this.onGetAllPatientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatientPAR(string PAT) {
            return base.Channel.GetAllPatientPAR(PAT);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPatientPAR(string PAT, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPatientPAR(PAT, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatientPAR(System.IAsyncResult result) {
            return base.Channel.EndGetAllPatientPAR(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPatientPAR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PAT = ((string)(inValues[0]));
            return this.BeginGetAllPatientPAR(PAT, callback, asyncState);
        }
        
        private object[] OnEndGetAllPatientPAR(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Patient> retVal = this.EndGetAllPatientPAR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPatientPARCompleted(object state) {
            if ((this.GetAllPatientPARCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPatientPARCompleted(this, new GetAllPatientPARCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPatientPARAsync(string PAT) {
            this.GetAllPatientPARAsync(PAT, null);
        }
        
        public void GetAllPatientPARAsync(string PAT, object userState) {
            if ((this.onBeginGetAllPatientPARDelegate == null)) {
                this.onBeginGetAllPatientPARDelegate = new BeginOperationDelegate(this.OnBeginGetAllPatientPAR);
            }
            if ((this.onEndGetAllPatientPARDelegate == null)) {
                this.onEndGetAllPatientPARDelegate = new EndOperationDelegate(this.OnEndGetAllPatientPAR);
            }
            if ((this.onGetAllPatientPARCompletedDelegate == null)) {
                this.onGetAllPatientPARCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPatientPARCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPatientPARDelegate, new object[] {
                        PAT}, this.onEndGetAllPatientPARDelegate, this.onGetAllPatientPARCompletedDelegate, userState);
        }
        
        public bool GetAllPatienteEXISTE(string Nom, string Prenom) {
            return base.Channel.GetAllPatienteEXISTE(Nom, Prenom);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPatienteEXISTE(string Nom, string Prenom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPatienteEXISTE(Nom, Prenom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetAllPatienteEXISTE(System.IAsyncResult result) {
            return base.Channel.EndGetAllPatienteEXISTE(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPatienteEXISTE(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nom = ((string)(inValues[0]));
            string Prenom = ((string)(inValues[1]));
            return this.BeginGetAllPatienteEXISTE(Nom, Prenom, callback, asyncState);
        }
        
        private object[] OnEndGetAllPatienteEXISTE(System.IAsyncResult result) {
            bool retVal = this.EndGetAllPatienteEXISTE(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPatienteEXISTECompleted(object state) {
            if ((this.GetAllPatienteEXISTECompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPatienteEXISTECompleted(this, new GetAllPatienteEXISTECompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPatienteEXISTEAsync(string Nom, string Prenom) {
            this.GetAllPatienteEXISTEAsync(Nom, Prenom, null);
        }
        
        public void GetAllPatienteEXISTEAsync(string Nom, string Prenom, object userState) {
            if ((this.onBeginGetAllPatienteEXISTEDelegate == null)) {
                this.onBeginGetAllPatienteEXISTEDelegate = new BeginOperationDelegate(this.OnBeginGetAllPatienteEXISTE);
            }
            if ((this.onEndGetAllPatienteEXISTEDelegate == null)) {
                this.onEndGetAllPatienteEXISTEDelegate = new EndOperationDelegate(this.OnEndGetAllPatienteEXISTE);
            }
            if ((this.onGetAllPatienteEXISTECompletedDelegate == null)) {
                this.onGetAllPatienteEXISTECompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPatienteEXISTECompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPatienteEXISTEDelegate, new object[] {
                        Nom,
                        Prenom}, this.onEndGetAllPatienteEXISTEDelegate, this.onGetAllPatienteEXISTECompletedDelegate, userState);
        }
        
        public Medicus.SVC.Patient GetAllPatientNomPrenom(string PAT) {
            return base.Channel.GetAllPatientNomPrenom(PAT);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPatientNomPrenom(string PAT, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPatientNomPrenom(PAT, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Medicus.SVC.Patient EndGetAllPatientNomPrenom(System.IAsyncResult result) {
            return base.Channel.EndGetAllPatientNomPrenom(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPatientNomPrenom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PAT = ((string)(inValues[0]));
            return this.BeginGetAllPatientNomPrenom(PAT, callback, asyncState);
        }
        
        private object[] OnEndGetAllPatientNomPrenom(System.IAsyncResult result) {
            Medicus.SVC.Patient retVal = this.EndGetAllPatientNomPrenom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPatientNomPrenomCompleted(object state) {
            if ((this.GetAllPatientNomPrenomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPatientNomPrenomCompleted(this, new GetAllPatientNomPrenomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPatientNomPrenomAsync(string PAT) {
            this.GetAllPatientNomPrenomAsync(PAT, null);
        }
        
        public void GetAllPatientNomPrenomAsync(string PAT, object userState) {
            if ((this.onBeginGetAllPatientNomPrenomDelegate == null)) {
                this.onBeginGetAllPatientNomPrenomDelegate = new BeginOperationDelegate(this.OnBeginGetAllPatientNomPrenom);
            }
            if ((this.onEndGetAllPatientNomPrenomDelegate == null)) {
                this.onEndGetAllPatientNomPrenomDelegate = new EndOperationDelegate(this.OnEndGetAllPatientNomPrenom);
            }
            if ((this.onGetAllPatientNomPrenomCompletedDelegate == null)) {
                this.onGetAllPatientNomPrenomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPatientNomPrenomCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPatientNomPrenomDelegate, new object[] {
                        PAT}, this.onEndGetAllPatientNomPrenomDelegate, this.onGetAllPatientNomPrenomCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Patient> GetAllPatientBYID(int idpatient) {
            return base.Channel.GetAllPatientBYID(idpatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllPatientBYID(int idpatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPatientBYID(idpatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Patient> EndGetAllPatientBYID(System.IAsyncResult result) {
            return base.Channel.EndGetAllPatientBYID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPatientBYID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idpatient = ((int)(inValues[0]));
            return this.BeginGetAllPatientBYID(idpatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllPatientBYID(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Patient> retVal = this.EndGetAllPatientBYID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPatientBYIDCompleted(object state) {
            if ((this.GetAllPatientBYIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPatientBYIDCompleted(this, new GetAllPatientBYIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPatientBYIDAsync(int idpatient) {
            this.GetAllPatientBYIDAsync(idpatient, null);
        }
        
        public void GetAllPatientBYIDAsync(int idpatient, object userState) {
            if ((this.onBeginGetAllPatientBYIDDelegate == null)) {
                this.onBeginGetAllPatientBYIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllPatientBYID);
            }
            if ((this.onEndGetAllPatientBYIDDelegate == null)) {
                this.onEndGetAllPatientBYIDDelegate = new EndOperationDelegate(this.OnEndGetAllPatientBYID);
            }
            if ((this.onGetAllPatientBYIDCompletedDelegate == null)) {
                this.onGetAllPatientBYIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPatientBYIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPatientBYIDDelegate, new object[] {
                        idpatient}, this.onEndGetAllPatientBYIDDelegate, this.onGetAllPatientBYIDCompletedDelegate, userState);
        }
        
        public void InsertPatient(Medicus.SVC.Patient obj) {
            base.Channel.InsertPatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertPatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertPatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertPatient(System.IAsyncResult result) {
            base.Channel.EndInsertPatient(result);
        }
        
        private System.IAsyncResult OnBeginInsertPatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Patient obj = ((Medicus.SVC.Patient)(inValues[0]));
            return this.BeginInsertPatient(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertPatient(System.IAsyncResult result) {
            this.EndInsertPatient(result);
            return null;
        }
        
        private void OnInsertPatientCompleted(object state) {
            if ((this.InsertPatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertPatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertPatientAsync(Medicus.SVC.Patient obj) {
            this.InsertPatientAsync(obj, null);
        }
        
        public void InsertPatientAsync(Medicus.SVC.Patient obj, object userState) {
            if ((this.onBeginInsertPatientDelegate == null)) {
                this.onBeginInsertPatientDelegate = new BeginOperationDelegate(this.OnBeginInsertPatient);
            }
            if ((this.onEndInsertPatientDelegate == null)) {
                this.onEndInsertPatientDelegate = new EndOperationDelegate(this.OnEndInsertPatient);
            }
            if ((this.onInsertPatientCompletedDelegate == null)) {
                this.onInsertPatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertPatientCompleted);
            }
            base.InvokeAsync(this.onBeginInsertPatientDelegate, new object[] {
                        obj}, this.onEndInsertPatientDelegate, this.onInsertPatientCompletedDelegate, userState);
        }
        
        public void UpdatePatient(Medicus.SVC.Patient obj) {
            base.Channel.UpdatePatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePatient(System.IAsyncResult result) {
            base.Channel.EndUpdatePatient(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Patient obj = ((Medicus.SVC.Patient)(inValues[0]));
            return this.BeginUpdatePatient(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdatePatient(System.IAsyncResult result) {
            this.EndUpdatePatient(result);
            return null;
        }
        
        private void OnUpdatePatientCompleted(object state) {
            if ((this.UpdatePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePatientAsync(Medicus.SVC.Patient obj) {
            this.UpdatePatientAsync(obj, null);
        }
        
        public void UpdatePatientAsync(Medicus.SVC.Patient obj, object userState) {
            if ((this.onBeginUpdatePatientDelegate == null)) {
                this.onBeginUpdatePatientDelegate = new BeginOperationDelegate(this.OnBeginUpdatePatient);
            }
            if ((this.onEndUpdatePatientDelegate == null)) {
                this.onEndUpdatePatientDelegate = new EndOperationDelegate(this.OnEndUpdatePatient);
            }
            if ((this.onUpdatePatientCompletedDelegate == null)) {
                this.onUpdatePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePatientCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePatientDelegate, new object[] {
                        obj}, this.onEndUpdatePatientDelegate, this.onUpdatePatientCompletedDelegate, userState);
        }
        
        public void DeletePatient(Medicus.SVC.Patient obj) {
            base.Channel.DeletePatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePatient(Medicus.SVC.Patient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePatient(System.IAsyncResult result) {
            base.Channel.EndDeletePatient(result);
        }
        
        private System.IAsyncResult OnBeginDeletePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Patient obj = ((Medicus.SVC.Patient)(inValues[0]));
            return this.BeginDeletePatient(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletePatient(System.IAsyncResult result) {
            this.EndDeletePatient(result);
            return null;
        }
        
        private void OnDeletePatientCompleted(object state) {
            if ((this.DeletePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePatientAsync(Medicus.SVC.Patient obj) {
            this.DeletePatientAsync(obj, null);
        }
        
        public void DeletePatientAsync(Medicus.SVC.Patient obj, object userState) {
            if ((this.onBeginDeletePatientDelegate == null)) {
                this.onBeginDeletePatientDelegate = new BeginOperationDelegate(this.OnBeginDeletePatient);
            }
            if ((this.onEndDeletePatientDelegate == null)) {
                this.onEndDeletePatientDelegate = new EndOperationDelegate(this.OnEndDeletePatient);
            }
            if ((this.onDeletePatientCompletedDelegate == null)) {
                this.onDeletePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePatientCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePatientDelegate, new object[] {
                        obj}, this.onEndDeletePatientDelegate, this.onDeletePatientCompletedDelegate, userState);
        }
        
        public bool Connect(Medicus.SVC.Client client) {
            return base.Channel.Connect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndConnect(System.IAsyncResult result) {
            return base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Client client = ((Medicus.SVC.Client)(inValues[0]));
            return this.BeginConnect(client, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            bool retVal = this.EndConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(Medicus.SVC.Client client) {
            this.ConnectAsync(client, null);
        }
        
        public void ConnectAsync(Medicus.SVC.Client client, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        client}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Client> GetAllClient() {
            return base.Channel.GetAllClient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Client> EndGetAllClient(System.IAsyncResult result) {
            return base.Channel.EndGetAllClient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClient(callback, asyncState);
        }
        
        private object[] OnEndGetAllClient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Client> retVal = this.EndGetAllClient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientCompleted(object state) {
            if ((this.GetAllClientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientCompleted(this, new GetAllClientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientAsync() {
            this.GetAllClientAsync(null);
        }
        
        public void GetAllClientAsync(object userState) {
            if ((this.onBeginGetAllClientDelegate == null)) {
                this.onBeginGetAllClientDelegate = new BeginOperationDelegate(this.OnBeginGetAllClient);
            }
            if ((this.onEndGetAllClientDelegate == null)) {
                this.onEndGetAllClientDelegate = new EndOperationDelegate(this.OnEndGetAllClient);
            }
            if ((this.onGetAllClientCompletedDelegate == null)) {
                this.onGetAllClientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientDelegate, null, this.onEndGetAllClientDelegate, this.onGetAllClientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> GetAllClientDict() {
            return base.Channel.GetAllClientDict();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllClientDict(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllClientDict(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> EndGetAllClientDict(System.IAsyncResult result) {
            return base.Channel.EndGetAllClientDict(result);
        }
        
        private System.IAsyncResult OnBeginGetAllClientDict(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllClientDict(callback, asyncState);
        }
        
        private object[] OnEndGetAllClientDict(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<Medicus.SVC.Client, object> retVal = this.EndGetAllClientDict(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllClientDictCompleted(object state) {
            if ((this.GetAllClientDictCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllClientDictCompleted(this, new GetAllClientDictCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllClientDictAsync() {
            this.GetAllClientDictAsync(null);
        }
        
        public void GetAllClientDictAsync(object userState) {
            if ((this.onBeginGetAllClientDictDelegate == null)) {
                this.onBeginGetAllClientDictDelegate = new BeginOperationDelegate(this.OnBeginGetAllClientDict);
            }
            if ((this.onEndGetAllClientDictDelegate == null)) {
                this.onEndGetAllClientDictDelegate = new EndOperationDelegate(this.OnEndGetAllClientDict);
            }
            if ((this.onGetAllClientDictCompletedDelegate == null)) {
                this.onGetAllClientDictCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClientDictCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllClientDictDelegate, null, this.onEndGetAllClientDictDelegate, this.onGetAllClientDictCompletedDelegate, userState);
        }
        
        public void ReConnect(Medicus.SVC.Client LocalClient) {
            base.Channel.ReConnect(LocalClient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReConnect(Medicus.SVC.Client LocalClient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReConnect(LocalClient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReConnect(System.IAsyncResult result) {
            base.Channel.EndReConnect(result);
        }
        
        private System.IAsyncResult OnBeginReConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Client LocalClient = ((Medicus.SVC.Client)(inValues[0]));
            return this.BeginReConnect(LocalClient, callback, asyncState);
        }
        
        private object[] OnEndReConnect(System.IAsyncResult result) {
            this.EndReConnect(result);
            return null;
        }
        
        private void OnReConnectCompleted(object state) {
            if ((this.ReConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReConnectAsync(Medicus.SVC.Client LocalClient) {
            this.ReConnectAsync(LocalClient, null);
        }
        
        public void ReConnectAsync(Medicus.SVC.Client LocalClient, object userState) {
            if ((this.onBeginReConnectDelegate == null)) {
                this.onBeginReConnectDelegate = new BeginOperationDelegate(this.OnBeginReConnect);
            }
            if ((this.onEndReConnectDelegate == null)) {
                this.onEndReConnectDelegate = new EndOperationDelegate(this.OnEndReConnect);
            }
            if ((this.onReConnectCompletedDelegate == null)) {
                this.onReConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReConnectCompleted);
            }
            base.InvokeAsync(this.onBeginReConnectDelegate, new object[] {
                        LocalClient}, this.onEndReConnectDelegate, this.onReConnectCompletedDelegate, userState);
        }
        
        public void Say(Medicus.SVC.Message msg) {
            base.Channel.Say(msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSay(Medicus.SVC.Message msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSay(msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSay(System.IAsyncResult result) {
            base.Channel.EndSay(result);
        }
        
        private System.IAsyncResult OnBeginSay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Message msg = ((Medicus.SVC.Message)(inValues[0]));
            return this.BeginSay(msg, callback, asyncState);
        }
        
        private object[] OnEndSay(System.IAsyncResult result) {
            this.EndSay(result);
            return null;
        }
        
        private void OnSayCompleted(object state) {
            if ((this.SayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SayAsync(Medicus.SVC.Message msg) {
            this.SayAsync(msg, null);
        }
        
        public void SayAsync(Medicus.SVC.Message msg, object userState) {
            if ((this.onBeginSayDelegate == null)) {
                this.onBeginSayDelegate = new BeginOperationDelegate(this.OnBeginSay);
            }
            if ((this.onEndSayDelegate == null)) {
                this.onEndSayDelegate = new EndOperationDelegate(this.OnEndSay);
            }
            if ((this.onSayCompletedDelegate == null)) {
                this.onSayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSayCompleted);
            }
            base.InvokeAsync(this.onBeginSayDelegate, new object[] {
                        msg}, this.onEndSayDelegate, this.onSayCompletedDelegate, userState);
        }
        
        public void Whisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver) {
            base.Channel.Whisper(msg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWhisper(Medicus.SVC.Message msg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndWhisper(System.IAsyncResult result) {
            base.Channel.EndWhisper(result);
        }
        
        private System.IAsyncResult OnBeginWhisper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Message msg = ((Medicus.SVC.Message)(inValues[0]));
            Medicus.SVC.Client receiver = ((Medicus.SVC.Client)(inValues[1]));
            return this.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        private object[] OnEndWhisper(System.IAsyncResult result) {
            this.EndWhisper(result);
            return null;
        }
        
        private void OnWhisperCompleted(object state) {
            if ((this.WhisperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhisperCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhisperAsync(Medicus.SVC.Message msg, Medicus.SVC.Client receiver) {
            this.WhisperAsync(msg, receiver, null);
        }
        
        public void WhisperAsync(Medicus.SVC.Message msg, Medicus.SVC.Client receiver, object userState) {
            if ((this.onBeginWhisperDelegate == null)) {
                this.onBeginWhisperDelegate = new BeginOperationDelegate(this.OnBeginWhisper);
            }
            if ((this.onEndWhisperDelegate == null)) {
                this.onEndWhisperDelegate = new EndOperationDelegate(this.OnEndWhisper);
            }
            if ((this.onWhisperCompletedDelegate == null)) {
                this.onWhisperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhisperCompleted);
            }
            base.InvokeAsync(this.onBeginWhisperDelegate, new object[] {
                        msg,
                        receiver}, this.onEndWhisperDelegate, this.onWhisperCompletedDelegate, userState);
        }
        
        public void IsWriting(Medicus.SVC.Client client) {
            base.Channel.IsWriting(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsWriting(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsWriting(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndIsWriting(System.IAsyncResult result) {
            base.Channel.EndIsWriting(result);
        }
        
        private System.IAsyncResult OnBeginIsWriting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Client client = ((Medicus.SVC.Client)(inValues[0]));
            return this.BeginIsWriting(client, callback, asyncState);
        }
        
        private object[] OnEndIsWriting(System.IAsyncResult result) {
            this.EndIsWriting(result);
            return null;
        }
        
        private void OnIsWritingCompleted(object state) {
            if ((this.IsWritingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsWritingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsWritingAsync(Medicus.SVC.Client client) {
            this.IsWritingAsync(client, null);
        }
        
        public void IsWritingAsync(Medicus.SVC.Client client, object userState) {
            if ((this.onBeginIsWritingDelegate == null)) {
                this.onBeginIsWritingDelegate = new BeginOperationDelegate(this.OnBeginIsWriting);
            }
            if ((this.onEndIsWritingDelegate == null)) {
                this.onEndIsWritingDelegate = new EndOperationDelegate(this.OnEndIsWriting);
            }
            if ((this.onIsWritingCompletedDelegate == null)) {
                this.onIsWritingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsWritingCompleted);
            }
            base.InvokeAsync(this.onBeginIsWritingDelegate, new object[] {
                        client}, this.onEndIsWritingDelegate, this.onIsWritingCompletedDelegate, userState);
        }
        
        public bool SendFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver) {
            return base.Channel.SendFile(fileMsg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendFile(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendFile(System.IAsyncResult result) {
            return base.Channel.EndSendFile(result);
        }
        
        private System.IAsyncResult OnBeginSendFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.FileMessage fileMsg = ((Medicus.SVC.FileMessage)(inValues[0]));
            Medicus.SVC.Client receiver = ((Medicus.SVC.Client)(inValues[1]));
            return this.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        private object[] OnEndSendFile(System.IAsyncResult result) {
            bool retVal = this.EndSendFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendFileCompleted(object state) {
            if ((this.SendFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendFileCompleted(this, new SendFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendFileAsync(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver) {
            this.SendFileAsync(fileMsg, receiver, null);
        }
        
        public void SendFileAsync(Medicus.SVC.FileMessage fileMsg, Medicus.SVC.Client receiver, object userState) {
            if ((this.onBeginSendFileDelegate == null)) {
                this.onBeginSendFileDelegate = new BeginOperationDelegate(this.OnBeginSendFile);
            }
            if ((this.onEndSendFileDelegate == null)) {
                this.onEndSendFileDelegate = new EndOperationDelegate(this.OnEndSendFile);
            }
            if ((this.onSendFileCompletedDelegate == null)) {
                this.onSendFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendFileCompleted);
            }
            base.InvokeAsync(this.onBeginSendFileDelegate, new object[] {
                        fileMsg,
                        receiver}, this.onEndSendFileDelegate, this.onSendFileCompletedDelegate, userState);
        }
        
        public void Disconnect(Medicus.SVC.Client client) {
            base.Channel.Disconnect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(Medicus.SVC.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Client client = ((Medicus.SVC.Client)(inValues[0]));
            return this.BeginDisconnect(client, callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync(Medicus.SVC.Client client) {
            this.DisconnectAsync(client, null);
        }
        
        public void DisconnectAsync(Medicus.SVC.Client client, object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, new object[] {
                        client}, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
        
        public bool VerificationCle1() {
            return base.Channel.VerificationCle1();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerificationCle1(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerificationCle1(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndVerificationCle1(System.IAsyncResult result) {
            return base.Channel.EndVerificationCle1(result);
        }
        
        private System.IAsyncResult OnBeginVerificationCle1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginVerificationCle1(callback, asyncState);
        }
        
        private object[] OnEndVerificationCle1(System.IAsyncResult result) {
            bool retVal = this.EndVerificationCle1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerificationCle1Completed(object state) {
            if ((this.VerificationCle1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerificationCle1Completed(this, new VerificationCle1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerificationCle1Async() {
            this.VerificationCle1Async(null);
        }
        
        public void VerificationCle1Async(object userState) {
            if ((this.onBeginVerificationCle1Delegate == null)) {
                this.onBeginVerificationCle1Delegate = new BeginOperationDelegate(this.OnBeginVerificationCle1);
            }
            if ((this.onEndVerificationCle1Delegate == null)) {
                this.onEndVerificationCle1Delegate = new EndOperationDelegate(this.OnEndVerificationCle1);
            }
            if ((this.onVerificationCle1CompletedDelegate == null)) {
                this.onVerificationCle1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerificationCle1Completed);
            }
            base.InvokeAsync(this.onBeginVerificationCle1Delegate, null, this.onEndVerificationCle1Delegate, this.onVerificationCle1CompletedDelegate, userState);
        }
        
        public void TestConnect(string clientTest) {
            base.Channel.TestConnect(clientTest);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTestConnect(string clientTest, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestConnect(clientTest, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndTestConnect(System.IAsyncResult result) {
            base.Channel.EndTestConnect(result);
        }
        
        private System.IAsyncResult OnBeginTestConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientTest = ((string)(inValues[0]));
            return this.BeginTestConnect(clientTest, callback, asyncState);
        }
        
        private object[] OnEndTestConnect(System.IAsyncResult result) {
            this.EndTestConnect(result);
            return null;
        }
        
        private void OnTestConnectCompleted(object state) {
            if ((this.TestConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestConnectAsync(string clientTest) {
            this.TestConnectAsync(clientTest, null);
        }
        
        public void TestConnectAsync(string clientTest, object userState) {
            if ((this.onBeginTestConnectDelegate == null)) {
                this.onBeginTestConnectDelegate = new BeginOperationDelegate(this.OnBeginTestConnect);
            }
            if ((this.onEndTestConnectDelegate == null)) {
                this.onEndTestConnectDelegate = new EndOperationDelegate(this.OnEndTestConnect);
            }
            if ((this.onTestConnectCompletedDelegate == null)) {
                this.onTestConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestConnectCompleted);
            }
            base.InvokeAsync(this.onBeginTestConnectDelegate, new object[] {
                        clientTest}, this.onEndTestConnectDelegate, this.onTestConnectCompletedDelegate, userState);
        }
        
        public void AjouterDiagnosticRefresh() {
            base.Channel.AjouterDiagnosticRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDiagnosticRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDiagnosticRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDiagnosticRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDiagnosticRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDiagnosticRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDiagnosticRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDiagnosticRefresh(System.IAsyncResult result) {
            this.EndAjouterDiagnosticRefresh(result);
            return null;
        }
        
        private void OnAjouterDiagnosticRefreshCompleted(object state) {
            if ((this.AjouterDiagnosticRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDiagnosticRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDiagnosticRefreshAsync() {
            this.AjouterDiagnosticRefreshAsync(null);
        }
        
        public void AjouterDiagnosticRefreshAsync(object userState) {
            if ((this.onBeginAjouterDiagnosticRefreshDelegate == null)) {
                this.onBeginAjouterDiagnosticRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDiagnosticRefresh);
            }
            if ((this.onEndAjouterDiagnosticRefreshDelegate == null)) {
                this.onEndAjouterDiagnosticRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDiagnosticRefresh);
            }
            if ((this.onAjouterDiagnosticRefreshCompletedDelegate == null)) {
                this.onAjouterDiagnosticRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDiagnosticRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDiagnosticRefreshDelegate, null, this.onEndAjouterDiagnosticRefreshDelegate, this.onAjouterDiagnosticRefreshCompletedDelegate, userState);
        }
        
        public void AjouterArrettravailRefresh() {
            base.Channel.AjouterArrettravailRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterArrettravailRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterArrettravailRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterArrettravailRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterArrettravailRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterArrettravailRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterArrettravailRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterArrettravailRefresh(System.IAsyncResult result) {
            this.EndAjouterArrettravailRefresh(result);
            return null;
        }
        
        private void OnAjouterArrettravailRefreshCompleted(object state) {
            if ((this.AjouterArrettravailRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterArrettravailRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterArrettravailRefreshAsync() {
            this.AjouterArrettravailRefreshAsync(null);
        }
        
        public void AjouterArrettravailRefreshAsync(object userState) {
            if ((this.onBeginAjouterArrettravailRefreshDelegate == null)) {
                this.onBeginAjouterArrettravailRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterArrettravailRefresh);
            }
            if ((this.onEndAjouterArrettravailRefreshDelegate == null)) {
                this.onEndAjouterArrettravailRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterArrettravailRefresh);
            }
            if ((this.onAjouterArrettravailRefreshCompletedDelegate == null)) {
                this.onAjouterArrettravailRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterArrettravailRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterArrettravailRefreshDelegate, null, this.onEndAjouterArrettravailRefreshDelegate, this.onAjouterArrettravailRefreshCompletedDelegate, userState);
        }
        
        public void AjouterDictionnaireRefresh() {
            base.Channel.AjouterDictionnaireRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDictionnaireRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDictionnaireRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDictionnaireRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDictionnaireRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDictionnaireRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDictionnaireRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDictionnaireRefresh(System.IAsyncResult result) {
            this.EndAjouterDictionnaireRefresh(result);
            return null;
        }
        
        private void OnAjouterDictionnaireRefreshCompleted(object state) {
            if ((this.AjouterDictionnaireRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDictionnaireRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDictionnaireRefreshAsync() {
            this.AjouterDictionnaireRefreshAsync(null);
        }
        
        public void AjouterDictionnaireRefreshAsync(object userState) {
            if ((this.onBeginAjouterDictionnaireRefreshDelegate == null)) {
                this.onBeginAjouterDictionnaireRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDictionnaireRefresh);
            }
            if ((this.onEndAjouterDictionnaireRefreshDelegate == null)) {
                this.onEndAjouterDictionnaireRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDictionnaireRefresh);
            }
            if ((this.onAjouterDictionnaireRefreshCompletedDelegate == null)) {
                this.onAjouterDictionnaireRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDictionnaireRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDictionnaireRefreshDelegate, null, this.onEndAjouterDictionnaireRefreshDelegate, this.onAjouterDictionnaireRefreshCompletedDelegate, userState);
        }
        
        public void AjouterProduitOrdonnaceRefresh() {
            base.Channel.AjouterProduitOrdonnaceRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterProduitOrdonnaceRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterProduitOrdonnaceRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterProduitOrdonnaceRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterProduitOrdonnaceRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterProduitOrdonnaceRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterProduitOrdonnaceRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterProduitOrdonnaceRefresh(System.IAsyncResult result) {
            this.EndAjouterProduitOrdonnaceRefresh(result);
            return null;
        }
        
        private void OnAjouterProduitOrdonnaceRefreshCompleted(object state) {
            if ((this.AjouterProduitOrdonnaceRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterProduitOrdonnaceRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterProduitOrdonnaceRefreshAsync() {
            this.AjouterProduitOrdonnaceRefreshAsync(null);
        }
        
        public void AjouterProduitOrdonnaceRefreshAsync(object userState) {
            if ((this.onBeginAjouterProduitOrdonnaceRefreshDelegate == null)) {
                this.onBeginAjouterProduitOrdonnaceRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterProduitOrdonnaceRefresh);
            }
            if ((this.onEndAjouterProduitOrdonnaceRefreshDelegate == null)) {
                this.onEndAjouterProduitOrdonnaceRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterProduitOrdonnaceRefresh);
            }
            if ((this.onAjouterProduitOrdonnaceRefreshCompletedDelegate == null)) {
                this.onAjouterProduitOrdonnaceRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterProduitOrdonnaceRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterProduitOrdonnaceRefreshDelegate, null, this.onEndAjouterProduitOrdonnaceRefreshDelegate, this.onAjouterProduitOrdonnaceRefreshCompletedDelegate, userState);
        }
        
        public void AjouterDepenseRefresh() {
            base.Channel.AjouterDepenseRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDepenseRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDepenseRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDepenseRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDepenseRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDepenseRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDepenseRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDepenseRefresh(System.IAsyncResult result) {
            this.EndAjouterDepenseRefresh(result);
            return null;
        }
        
        private void OnAjouterDepenseRefreshCompleted(object state) {
            if ((this.AjouterDepenseRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDepenseRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDepenseRefreshAsync() {
            this.AjouterDepenseRefreshAsync(null);
        }
        
        public void AjouterDepenseRefreshAsync(object userState) {
            if ((this.onBeginAjouterDepenseRefreshDelegate == null)) {
                this.onBeginAjouterDepenseRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDepenseRefresh);
            }
            if ((this.onEndAjouterDepenseRefreshDelegate == null)) {
                this.onEndAjouterDepenseRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDepenseRefresh);
            }
            if ((this.onAjouterDepenseRefreshCompletedDelegate == null)) {
                this.onAjouterDepenseRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDepenseRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDepenseRefreshDelegate, null, this.onEndAjouterDepenseRefreshDelegate, this.onAjouterDepenseRefreshCompletedDelegate, userState);
        }
        
        public void AjouterActeCatalogueRefresh() {
            base.Channel.AjouterActeCatalogueRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterActeCatalogueRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterActeCatalogueRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterActeCatalogueRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterActeCatalogueRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterActeCatalogueRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterActeCatalogueRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterActeCatalogueRefresh(System.IAsyncResult result) {
            this.EndAjouterActeCatalogueRefresh(result);
            return null;
        }
        
        private void OnAjouterActeCatalogueRefreshCompleted(object state) {
            if ((this.AjouterActeCatalogueRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterActeCatalogueRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterActeCatalogueRefreshAsync() {
            this.AjouterActeCatalogueRefreshAsync(null);
        }
        
        public void AjouterActeCatalogueRefreshAsync(object userState) {
            if ((this.onBeginAjouterActeCatalogueRefreshDelegate == null)) {
                this.onBeginAjouterActeCatalogueRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterActeCatalogueRefresh);
            }
            if ((this.onEndAjouterActeCatalogueRefreshDelegate == null)) {
                this.onEndAjouterActeCatalogueRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterActeCatalogueRefresh);
            }
            if ((this.onAjouterActeCatalogueRefreshCompletedDelegate == null)) {
                this.onAjouterActeCatalogueRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterActeCatalogueRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterActeCatalogueRefreshDelegate, null, this.onEndAjouterActeCatalogueRefreshDelegate, this.onAjouterActeCatalogueRefreshCompletedDelegate, userState);
        }
        
        public void AjouterSoldeVisiteRefresh() {
            base.Channel.AjouterSoldeVisiteRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterSoldeVisiteRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterSoldeVisiteRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterSoldeVisiteRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterSoldeVisiteRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterSoldeVisiteRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterSoldeVisiteRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterSoldeVisiteRefresh(System.IAsyncResult result) {
            this.EndAjouterSoldeVisiteRefresh(result);
            return null;
        }
        
        private void OnAjouterSoldeVisiteRefreshCompleted(object state) {
            if ((this.AjouterSoldeVisiteRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterSoldeVisiteRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterSoldeVisiteRefreshAsync() {
            this.AjouterSoldeVisiteRefreshAsync(null);
        }
        
        public void AjouterSoldeVisiteRefreshAsync(object userState) {
            if ((this.onBeginAjouterSoldeVisiteRefreshDelegate == null)) {
                this.onBeginAjouterSoldeVisiteRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterSoldeVisiteRefresh);
            }
            if ((this.onEndAjouterSoldeVisiteRefreshDelegate == null)) {
                this.onEndAjouterSoldeVisiteRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterSoldeVisiteRefresh);
            }
            if ((this.onAjouterSoldeVisiteRefreshCompletedDelegate == null)) {
                this.onAjouterSoldeVisiteRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterSoldeVisiteRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterSoldeVisiteRefreshDelegate, null, this.onEndAjouterSoldeVisiteRefreshDelegate, this.onAjouterSoldeVisiteRefreshCompletedDelegate, userState);
        }
        
        public void AjouterPatientRefresh() {
            base.Channel.AjouterPatientRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterPatientRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterPatientRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterPatientRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterPatientRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterPatientRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterPatientRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterPatientRefresh(System.IAsyncResult result) {
            this.EndAjouterPatientRefresh(result);
            return null;
        }
        
        private void OnAjouterPatientRefreshCompleted(object state) {
            if ((this.AjouterPatientRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterPatientRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterPatientRefreshAsync() {
            this.AjouterPatientRefreshAsync(null);
        }
        
        public void AjouterPatientRefreshAsync(object userState) {
            if ((this.onBeginAjouterPatientRefreshDelegate == null)) {
                this.onBeginAjouterPatientRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterPatientRefresh);
            }
            if ((this.onEndAjouterPatientRefreshDelegate == null)) {
                this.onEndAjouterPatientRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterPatientRefresh);
            }
            if ((this.onAjouterPatientRefreshCompletedDelegate == null)) {
                this.onAjouterPatientRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterPatientRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterPatientRefreshDelegate, null, this.onEndAjouterPatientRefreshDelegate, this.onAjouterPatientRefreshCompletedDelegate, userState);
        }
        
        public void AjouterEnteteOrdonnaceOrdonnancePatientRefresh() {
            base.Channel.AjouterEnteteOrdonnaceOrdonnancePatientRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterEnteteOrdonnaceOrdonnancePatientRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterEnteteOrdonnaceOrdonnancePatientRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterEnteteOrdonnaceOrdonnancePatientRefresh(System.IAsyncResult result) {
            this.EndAjouterEnteteOrdonnaceOrdonnancePatientRefresh(result);
            return null;
        }
        
        private void OnAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompleted(object state) {
            if ((this.AjouterEnteteOrdonnaceOrdonnancePatientRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterEnteteOrdonnaceOrdonnancePatientRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterEnteteOrdonnaceOrdonnancePatientRefreshAsync() {
            this.AjouterEnteteOrdonnaceOrdonnancePatientRefreshAsync(null);
        }
        
        public void AjouterEnteteOrdonnaceOrdonnancePatientRefreshAsync(object userState) {
            if ((this.onBeginAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate == null)) {
                this.onBeginAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterEnteteOrdonnaceOrdonnancePatientRefresh);
            }
            if ((this.onEndAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate == null)) {
                this.onEndAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterEnteteOrdonnaceOrdonnancePatientRefresh);
            }
            if ((this.onAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompletedDelegate == null)) {
                this.onAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate, null, this.onEndAjouterEnteteOrdonnaceOrdonnancePatientRefreshDelegate, this.onAjouterEnteteOrdonnaceOrdonnancePatientRefreshCompletedDelegate, userState);
        }
        
        public void AjouterDciiRefresh() {
            base.Channel.AjouterDciiRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDciiRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDciiRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDciiRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDciiRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDciiRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDciiRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDciiRefresh(System.IAsyncResult result) {
            this.EndAjouterDciiRefresh(result);
            return null;
        }
        
        private void OnAjouterDciiRefreshCompleted(object state) {
            if ((this.AjouterDciiRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDciiRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDciiRefreshAsync() {
            this.AjouterDciiRefreshAsync(null);
        }
        
        public void AjouterDciiRefreshAsync(object userState) {
            if ((this.onBeginAjouterDciiRefreshDelegate == null)) {
                this.onBeginAjouterDciiRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDciiRefresh);
            }
            if ((this.onEndAjouterDciiRefreshDelegate == null)) {
                this.onEndAjouterDciiRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDciiRefresh);
            }
            if ((this.onAjouterDciiRefreshCompletedDelegate == null)) {
                this.onAjouterDciiRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDciiRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDciiRefreshDelegate, null, this.onEndAjouterDciiRefreshDelegate, this.onAjouterDciiRefreshCompletedDelegate, userState);
        }
        
        public void AjouterCasTraitementRefresh() {
            base.Channel.AjouterCasTraitementRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterCasTraitementRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterCasTraitementRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterCasTraitementRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterCasTraitementRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterCasTraitementRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterCasTraitementRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterCasTraitementRefresh(System.IAsyncResult result) {
            this.EndAjouterCasTraitementRefresh(result);
            return null;
        }
        
        private void OnAjouterCasTraitementRefreshCompleted(object state) {
            if ((this.AjouterCasTraitementRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterCasTraitementRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterCasTraitementRefreshAsync() {
            this.AjouterCasTraitementRefreshAsync(null);
        }
        
        public void AjouterCasTraitementRefreshAsync(object userState) {
            if ((this.onBeginAjouterCasTraitementRefreshDelegate == null)) {
                this.onBeginAjouterCasTraitementRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterCasTraitementRefresh);
            }
            if ((this.onEndAjouterCasTraitementRefreshDelegate == null)) {
                this.onEndAjouterCasTraitementRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterCasTraitementRefresh);
            }
            if ((this.onAjouterCasTraitementRefreshCompletedDelegate == null)) {
                this.onAjouterCasTraitementRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterCasTraitementRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterCasTraitementRefreshDelegate, null, this.onEndAjouterCasTraitementRefreshDelegate, this.onAjouterCasTraitementRefreshCompletedDelegate, userState);
        }
        
        public void AjouterTransactionPaiementRefresh() {
            base.Channel.AjouterTransactionPaiementRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterTransactionPaiementRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterTransactionPaiementRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterTransactionPaiementRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterTransactionPaiementRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterTransactionPaiementRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterTransactionPaiementRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterTransactionPaiementRefresh(System.IAsyncResult result) {
            this.EndAjouterTransactionPaiementRefresh(result);
            return null;
        }
        
        private void OnAjouterTransactionPaiementRefreshCompleted(object state) {
            if ((this.AjouterTransactionPaiementRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterTransactionPaiementRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterTransactionPaiementRefreshAsync() {
            this.AjouterTransactionPaiementRefreshAsync(null);
        }
        
        public void AjouterTransactionPaiementRefreshAsync(object userState) {
            if ((this.onBeginAjouterTransactionPaiementRefreshDelegate == null)) {
                this.onBeginAjouterTransactionPaiementRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterTransactionPaiementRefresh);
            }
            if ((this.onEndAjouterTransactionPaiementRefreshDelegate == null)) {
                this.onEndAjouterTransactionPaiementRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterTransactionPaiementRefresh);
            }
            if ((this.onAjouterTransactionPaiementRefreshCompletedDelegate == null)) {
                this.onAjouterTransactionPaiementRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterTransactionPaiementRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterTransactionPaiementRefreshDelegate, null, this.onEndAjouterTransactionPaiementRefreshDelegate, this.onAjouterTransactionPaiementRefreshCompletedDelegate, userState);
        }
        
        public void AjouterSalleAtentefRefresh() {
            base.Channel.AjouterSalleAtentefRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterSalleAtentefRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterSalleAtentefRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterSalleAtentefRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterSalleAtentefRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterSalleAtentefRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterSalleAtentefRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterSalleAtentefRefresh(System.IAsyncResult result) {
            this.EndAjouterSalleAtentefRefresh(result);
            return null;
        }
        
        private void OnAjouterSalleAtentefRefreshCompleted(object state) {
            if ((this.AjouterSalleAtentefRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterSalleAtentefRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterSalleAtentefRefreshAsync() {
            this.AjouterSalleAtentefRefreshAsync(null);
        }
        
        public void AjouterSalleAtentefRefreshAsync(object userState) {
            if ((this.onBeginAjouterSalleAtentefRefreshDelegate == null)) {
                this.onBeginAjouterSalleAtentefRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterSalleAtentefRefresh);
            }
            if ((this.onEndAjouterSalleAtentefRefreshDelegate == null)) {
                this.onEndAjouterSalleAtentefRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterSalleAtentefRefresh);
            }
            if ((this.onAjouterSalleAtentefRefreshCompletedDelegate == null)) {
                this.onAjouterSalleAtentefRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterSalleAtentefRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterSalleAtentefRefreshDelegate, null, this.onEndAjouterSalleAtentefRefreshDelegate, this.onAjouterSalleAtentefRefreshCompletedDelegate, userState);
        }
        
        public void AjouterRendezVOUSfRefresh() {
            base.Channel.AjouterRendezVOUSfRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterRendezVOUSfRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterRendezVOUSfRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterRendezVOUSfRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterRendezVOUSfRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterRendezVOUSfRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterRendezVOUSfRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterRendezVOUSfRefresh(System.IAsyncResult result) {
            this.EndAjouterRendezVOUSfRefresh(result);
            return null;
        }
        
        private void OnAjouterRendezVOUSfRefreshCompleted(object state) {
            if ((this.AjouterRendezVOUSfRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterRendezVOUSfRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterRendezVOUSfRefreshAsync() {
            this.AjouterRendezVOUSfRefreshAsync(null);
        }
        
        public void AjouterRendezVOUSfRefreshAsync(object userState) {
            if ((this.onBeginAjouterRendezVOUSfRefreshDelegate == null)) {
                this.onBeginAjouterRendezVOUSfRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterRendezVOUSfRefresh);
            }
            if ((this.onEndAjouterRendezVOUSfRefreshDelegate == null)) {
                this.onEndAjouterRendezVOUSfRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterRendezVOUSfRefresh);
            }
            if ((this.onAjouterRendezVOUSfRefreshCompletedDelegate == null)) {
                this.onAjouterRendezVOUSfRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterRendezVOUSfRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterRendezVOUSfRefreshDelegate, null, this.onEndAjouterRendezVOUSfRefreshDelegate, this.onAjouterRendezVOUSfRefreshCompletedDelegate, userState);
        }
        
        public void SalleAttenteDemandeChezLeMedecin(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE) {
            base.Channel.SalleAttenteDemandeChezLeMedecin(PatientDemandé, PatientInSalleATTENTE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSalleAttenteDemandeChezLeMedecin(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSalleAttenteDemandeChezLeMedecin(PatientDemandé, PatientInSalleATTENTE, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSalleAttenteDemandeChezLeMedecin(System.IAsyncResult result) {
            base.Channel.EndSalleAttenteDemandeChezLeMedecin(result);
        }
        
        private System.IAsyncResult OnBeginSalleAttenteDemandeChezLeMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Patient PatientDemandé = ((Medicus.SVC.Patient)(inValues[0]));
            Medicus.SVC.SalleDattente PatientInSalleATTENTE = ((Medicus.SVC.SalleDattente)(inValues[1]));
            return this.BeginSalleAttenteDemandeChezLeMedecin(PatientDemandé, PatientInSalleATTENTE, callback, asyncState);
        }
        
        private object[] OnEndSalleAttenteDemandeChezLeMedecin(System.IAsyncResult result) {
            this.EndSalleAttenteDemandeChezLeMedecin(result);
            return null;
        }
        
        private void OnSalleAttenteDemandeChezLeMedecinCompleted(object state) {
            if ((this.SalleAttenteDemandeChezLeMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SalleAttenteDemandeChezLeMedecinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SalleAttenteDemandeChezLeMedecinAsync(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE) {
            this.SalleAttenteDemandeChezLeMedecinAsync(PatientDemandé, PatientInSalleATTENTE, null);
        }
        
        public void SalleAttenteDemandeChezLeMedecinAsync(Medicus.SVC.Patient PatientDemandé, Medicus.SVC.SalleDattente PatientInSalleATTENTE, object userState) {
            if ((this.onBeginSalleAttenteDemandeChezLeMedecinDelegate == null)) {
                this.onBeginSalleAttenteDemandeChezLeMedecinDelegate = new BeginOperationDelegate(this.OnBeginSalleAttenteDemandeChezLeMedecin);
            }
            if ((this.onEndSalleAttenteDemandeChezLeMedecinDelegate == null)) {
                this.onEndSalleAttenteDemandeChezLeMedecinDelegate = new EndOperationDelegate(this.OnEndSalleAttenteDemandeChezLeMedecin);
            }
            if ((this.onSalleAttenteDemandeChezLeMedecinCompletedDelegate == null)) {
                this.onSalleAttenteDemandeChezLeMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSalleAttenteDemandeChezLeMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginSalleAttenteDemandeChezLeMedecinDelegate, new object[] {
                        PatientDemandé,
                        PatientInSalleATTENTE}, this.onEndSalleAttenteDemandeChezLeMedecinDelegate, this.onSalleAttenteDemandeChezLeMedecinCompletedDelegate, userState);
        }
        
        public void AjouterDicomImageRefresh() {
            base.Channel.AjouterDicomImageRefresh();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAjouterDicomImageRefresh(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAjouterDicomImageRefresh(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAjouterDicomImageRefresh(System.IAsyncResult result) {
            base.Channel.EndAjouterDicomImageRefresh(result);
        }
        
        private System.IAsyncResult OnBeginAjouterDicomImageRefresh(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAjouterDicomImageRefresh(callback, asyncState);
        }
        
        private object[] OnEndAjouterDicomImageRefresh(System.IAsyncResult result) {
            this.EndAjouterDicomImageRefresh(result);
            return null;
        }
        
        private void OnAjouterDicomImageRefreshCompleted(object state) {
            if ((this.AjouterDicomImageRefreshCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AjouterDicomImageRefreshCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AjouterDicomImageRefreshAsync() {
            this.AjouterDicomImageRefreshAsync(null);
        }
        
        public void AjouterDicomImageRefreshAsync(object userState) {
            if ((this.onBeginAjouterDicomImageRefreshDelegate == null)) {
                this.onBeginAjouterDicomImageRefreshDelegate = new BeginOperationDelegate(this.OnBeginAjouterDicomImageRefresh);
            }
            if ((this.onEndAjouterDicomImageRefreshDelegate == null)) {
                this.onEndAjouterDicomImageRefreshDelegate = new EndOperationDelegate(this.OnEndAjouterDicomImageRefresh);
            }
            if ((this.onAjouterDicomImageRefreshCompletedDelegate == null)) {
                this.onAjouterDicomImageRefreshCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAjouterDicomImageRefreshCompleted);
            }
            base.InvokeAsync(this.onBeginAjouterDicomImageRefreshDelegate, null, this.onEndAjouterDicomImageRefreshDelegate, this.onAjouterDicomImageRefreshCompletedDelegate, userState);
        }
        
        public void UploadDocument(string fPath, byte[] data) {
            base.Channel.UploadDocument(fPath, data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadDocument(string fPath, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadDocument(fPath, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUploadDocument(System.IAsyncResult result) {
            base.Channel.EndUploadDocument(result);
        }
        
        private System.IAsyncResult OnBeginUploadDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return this.BeginUploadDocument(fPath, data, callback, asyncState);
        }
        
        private object[] OnEndUploadDocument(System.IAsyncResult result) {
            this.EndUploadDocument(result);
            return null;
        }
        
        private void OnUploadDocumentCompleted(object state) {
            if ((this.UploadDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadDocumentAsync(string fPath, byte[] data) {
            this.UploadDocumentAsync(fPath, data, null);
        }
        
        public void UploadDocumentAsync(string fPath, byte[] data, object userState) {
            if ((this.onBeginUploadDocumentDelegate == null)) {
                this.onBeginUploadDocumentDelegate = new BeginOperationDelegate(this.OnBeginUploadDocument);
            }
            if ((this.onEndUploadDocumentDelegate == null)) {
                this.onEndUploadDocumentDelegate = new EndOperationDelegate(this.OnEndUploadDocument);
            }
            if ((this.onUploadDocumentCompletedDelegate == null)) {
                this.onUploadDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginUploadDocumentDelegate, new object[] {
                        fPath,
                        data}, this.onEndUploadDocumentDelegate, this.onUploadDocumentCompletedDelegate, userState);
        }
        
        public byte[] DownloadDocument(string fPath) {
            return base.Channel.DownloadDocument(fPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDocument(string fPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDocument(fPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadDocument(System.IAsyncResult result) {
            return base.Channel.EndDownloadDocument(result);
        }
        
        private System.IAsyncResult OnBeginDownloadDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            return this.BeginDownloadDocument(fPath, callback, asyncState);
        }
        
        private object[] OnEndDownloadDocument(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDocumentCompleted(object state) {
            if ((this.DownloadDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDocumentCompleted(this, new DownloadDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDocumentAsync(string fPath) {
            this.DownloadDocumentAsync(fPath, null);
        }
        
        public void DownloadDocumentAsync(string fPath, object userState) {
            if ((this.onBeginDownloadDocumentDelegate == null)) {
                this.onBeginDownloadDocumentDelegate = new BeginOperationDelegate(this.OnBeginDownloadDocument);
            }
            if ((this.onEndDownloadDocumentDelegate == null)) {
                this.onEndDownloadDocumentDelegate = new EndOperationDelegate(this.OnEndDownloadDocument);
            }
            if ((this.onDownloadDocumentCompletedDelegate == null)) {
                this.onDownloadDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDocumentDelegate, new object[] {
                        fPath}, this.onEndDownloadDocumentDelegate, this.onDownloadDocumentCompletedDelegate, userState);
        }
        
        public bool DownloadDocumentIsHere(string fPath) {
            return base.Channel.DownloadDocumentIsHere(fPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDocumentIsHere(string fPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDocumentIsHere(fPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDownloadDocumentIsHere(System.IAsyncResult result) {
            return base.Channel.EndDownloadDocumentIsHere(result);
        }
        
        private System.IAsyncResult OnBeginDownloadDocumentIsHere(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fPath = ((string)(inValues[0]));
            return this.BeginDownloadDocumentIsHere(fPath, callback, asyncState);
        }
        
        private object[] OnEndDownloadDocumentIsHere(System.IAsyncResult result) {
            bool retVal = this.EndDownloadDocumentIsHere(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDocumentIsHereCompleted(object state) {
            if ((this.DownloadDocumentIsHereCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDocumentIsHereCompleted(this, new DownloadDocumentIsHereCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDocumentIsHereAsync(string fPath) {
            this.DownloadDocumentIsHereAsync(fPath, null);
        }
        
        public void DownloadDocumentIsHereAsync(string fPath, object userState) {
            if ((this.onBeginDownloadDocumentIsHereDelegate == null)) {
                this.onBeginDownloadDocumentIsHereDelegate = new BeginOperationDelegate(this.OnBeginDownloadDocumentIsHere);
            }
            if ((this.onEndDownloadDocumentIsHereDelegate == null)) {
                this.onEndDownloadDocumentIsHereDelegate = new EndOperationDelegate(this.OnEndDownloadDocumentIsHere);
            }
            if ((this.onDownloadDocumentIsHereCompletedDelegate == null)) {
                this.onDownloadDocumentIsHereCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentIsHereCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDocumentIsHereDelegate, new object[] {
                        fPath}, this.onEndDownloadDocumentIsHereDelegate, this.onDownloadDocumentIsHereCompletedDelegate, userState);
        }
        
        public Medicus.SVC.Param GetAllParamétre() {
            return base.Channel.GetAllParamétre();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllParamétre(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllParamétre(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Medicus.SVC.Param EndGetAllParamétre(System.IAsyncResult result) {
            return base.Channel.EndGetAllParamétre(result);
        }
        
        private System.IAsyncResult OnBeginGetAllParamétre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllParamétre(callback, asyncState);
        }
        
        private object[] OnEndGetAllParamétre(System.IAsyncResult result) {
            Medicus.SVC.Param retVal = this.EndGetAllParamétre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllParamétreCompleted(object state) {
            if ((this.GetAllParamétreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllParamétreCompleted(this, new GetAllParamétreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllParamétreAsync() {
            this.GetAllParamétreAsync(null);
        }
        
        public void GetAllParamétreAsync(object userState) {
            if ((this.onBeginGetAllParamétreDelegate == null)) {
                this.onBeginGetAllParamétreDelegate = new BeginOperationDelegate(this.OnBeginGetAllParamétre);
            }
            if ((this.onEndGetAllParamétreDelegate == null)) {
                this.onEndGetAllParamétreDelegate = new EndOperationDelegate(this.OnEndGetAllParamétre);
            }
            if ((this.onGetAllParamétreCompletedDelegate == null)) {
                this.onGetAllParamétreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllParamétreCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllParamétreDelegate, null, this.onEndGetAllParamétreDelegate, this.onGetAllParamétreCompletedDelegate, userState);
        }
        
        public void UpdateParamétre(Medicus.SVC.Param obj) {
            base.Channel.UpdateParamétre(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateParamétre(Medicus.SVC.Param obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateParamétre(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateParamétre(System.IAsyncResult result) {
            base.Channel.EndUpdateParamétre(result);
        }
        
        private System.IAsyncResult OnBeginUpdateParamétre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Param obj = ((Medicus.SVC.Param)(inValues[0]));
            return this.BeginUpdateParamétre(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateParamétre(System.IAsyncResult result) {
            this.EndUpdateParamétre(result);
            return null;
        }
        
        private void OnUpdateParamétreCompleted(object state) {
            if ((this.UpdateParamétreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateParamétreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateParamétreAsync(Medicus.SVC.Param obj) {
            this.UpdateParamétreAsync(obj, null);
        }
        
        public void UpdateParamétreAsync(Medicus.SVC.Param obj, object userState) {
            if ((this.onBeginUpdateParamétreDelegate == null)) {
                this.onBeginUpdateParamétreDelegate = new BeginOperationDelegate(this.OnBeginUpdateParamétre);
            }
            if ((this.onEndUpdateParamétreDelegate == null)) {
                this.onEndUpdateParamétreDelegate = new EndOperationDelegate(this.OnEndUpdateParamétre);
            }
            if ((this.onUpdateParamétreCompletedDelegate == null)) {
                this.onUpdateParamétreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateParamétreCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateParamétreDelegate, new object[] {
                        obj}, this.onEndUpdateParamétreDelegate, this.onUpdateParamétreCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Dictionnaire> GetAllDictionnaire() {
            return base.Channel.GetAllDictionnaire();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDictionnaire(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDictionnaire(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Dictionnaire> EndGetAllDictionnaire(System.IAsyncResult result) {
            return base.Channel.EndGetAllDictionnaire(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDictionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDictionnaire(callback, asyncState);
        }
        
        private object[] OnEndGetAllDictionnaire(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Dictionnaire> retVal = this.EndGetAllDictionnaire(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDictionnaireCompleted(object state) {
            if ((this.GetAllDictionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDictionnaireCompleted(this, new GetAllDictionnaireCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDictionnaireAsync() {
            this.GetAllDictionnaireAsync(null);
        }
        
        public void GetAllDictionnaireAsync(object userState) {
            if ((this.onBeginGetAllDictionnaireDelegate == null)) {
                this.onBeginGetAllDictionnaireDelegate = new BeginOperationDelegate(this.OnBeginGetAllDictionnaire);
            }
            if ((this.onEndGetAllDictionnaireDelegate == null)) {
                this.onEndGetAllDictionnaireDelegate = new EndOperationDelegate(this.OnEndGetAllDictionnaire);
            }
            if ((this.onGetAllDictionnaireCompletedDelegate == null)) {
                this.onGetAllDictionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDictionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDictionnaireDelegate, null, this.onEndGetAllDictionnaireDelegate, this.onGetAllDictionnaireCompletedDelegate, userState);
        }
        
        public void InsertDictionnaire(Medicus.SVC.Dictionnaire obj) {
            base.Channel.InsertDictionnaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDictionnaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDictionnaire(System.IAsyncResult result) {
            base.Channel.EndInsertDictionnaire(result);
        }
        
        private System.IAsyncResult OnBeginInsertDictionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dictionnaire obj = ((Medicus.SVC.Dictionnaire)(inValues[0]));
            return this.BeginInsertDictionnaire(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDictionnaire(System.IAsyncResult result) {
            this.EndInsertDictionnaire(result);
            return null;
        }
        
        private void OnInsertDictionnaireCompleted(object state) {
            if ((this.InsertDictionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDictionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDictionnaireAsync(Medicus.SVC.Dictionnaire obj) {
            this.InsertDictionnaireAsync(obj, null);
        }
        
        public void InsertDictionnaireAsync(Medicus.SVC.Dictionnaire obj, object userState) {
            if ((this.onBeginInsertDictionnaireDelegate == null)) {
                this.onBeginInsertDictionnaireDelegate = new BeginOperationDelegate(this.OnBeginInsertDictionnaire);
            }
            if ((this.onEndInsertDictionnaireDelegate == null)) {
                this.onEndInsertDictionnaireDelegate = new EndOperationDelegate(this.OnEndInsertDictionnaire);
            }
            if ((this.onInsertDictionnaireCompletedDelegate == null)) {
                this.onInsertDictionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDictionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDictionnaireDelegate, new object[] {
                        obj}, this.onEndInsertDictionnaireDelegate, this.onInsertDictionnaireCompletedDelegate, userState);
        }
        
        public void UpdateDictionnaire(Medicus.SVC.Dictionnaire obj) {
            base.Channel.UpdateDictionnaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDictionnaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDictionnaire(System.IAsyncResult result) {
            base.Channel.EndUpdateDictionnaire(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDictionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dictionnaire obj = ((Medicus.SVC.Dictionnaire)(inValues[0]));
            return this.BeginUpdateDictionnaire(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDictionnaire(System.IAsyncResult result) {
            this.EndUpdateDictionnaire(result);
            return null;
        }
        
        private void OnUpdateDictionnaireCompleted(object state) {
            if ((this.UpdateDictionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDictionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDictionnaireAsync(Medicus.SVC.Dictionnaire obj) {
            this.UpdateDictionnaireAsync(obj, null);
        }
        
        public void UpdateDictionnaireAsync(Medicus.SVC.Dictionnaire obj, object userState) {
            if ((this.onBeginUpdateDictionnaireDelegate == null)) {
                this.onBeginUpdateDictionnaireDelegate = new BeginOperationDelegate(this.OnBeginUpdateDictionnaire);
            }
            if ((this.onEndUpdateDictionnaireDelegate == null)) {
                this.onEndUpdateDictionnaireDelegate = new EndOperationDelegate(this.OnEndUpdateDictionnaire);
            }
            if ((this.onUpdateDictionnaireCompletedDelegate == null)) {
                this.onUpdateDictionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDictionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDictionnaireDelegate, new object[] {
                        obj}, this.onEndUpdateDictionnaireDelegate, this.onUpdateDictionnaireCompletedDelegate, userState);
        }
        
        public void DeleteDictionnaire(Medicus.SVC.Dictionnaire obj) {
            base.Channel.DeleteDictionnaire(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDictionnaire(Medicus.SVC.Dictionnaire obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDictionnaire(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDictionnaire(System.IAsyncResult result) {
            base.Channel.EndDeleteDictionnaire(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDictionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dictionnaire obj = ((Medicus.SVC.Dictionnaire)(inValues[0]));
            return this.BeginDeleteDictionnaire(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDictionnaire(System.IAsyncResult result) {
            this.EndDeleteDictionnaire(result);
            return null;
        }
        
        private void OnDeleteDictionnaireCompleted(object state) {
            if ((this.DeleteDictionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDictionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDictionnaireAsync(Medicus.SVC.Dictionnaire obj) {
            this.DeleteDictionnaireAsync(obj, null);
        }
        
        public void DeleteDictionnaireAsync(Medicus.SVC.Dictionnaire obj, object userState) {
            if ((this.onBeginDeleteDictionnaireDelegate == null)) {
                this.onBeginDeleteDictionnaireDelegate = new BeginOperationDelegate(this.OnBeginDeleteDictionnaire);
            }
            if ((this.onEndDeleteDictionnaireDelegate == null)) {
                this.onEndDeleteDictionnaireDelegate = new EndOperationDelegate(this.OnEndDeleteDictionnaire);
            }
            if ((this.onDeleteDictionnaireCompletedDelegate == null)) {
                this.onDeleteDictionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDictionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDictionnaireDelegate, new object[] {
                        obj}, this.onEndDeleteDictionnaireDelegate, this.onDeleteDictionnaireCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.AutreBilan> GetAllAutreBilan(string cle) {
            return base.Channel.GetAllAutreBilan(cle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAutreBilan(string cle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAutreBilan(cle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.AutreBilan> EndGetAllAutreBilan(System.IAsyncResult result) {
            return base.Channel.EndGetAllAutreBilan(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAutreBilan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cle = ((string)(inValues[0]));
            return this.BeginGetAllAutreBilan(cle, callback, asyncState);
        }
        
        private object[] OnEndGetAllAutreBilan(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.AutreBilan> retVal = this.EndGetAllAutreBilan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAutreBilanCompleted(object state) {
            if ((this.GetAllAutreBilanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAutreBilanCompleted(this, new GetAllAutreBilanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAutreBilanAsync(string cle) {
            this.GetAllAutreBilanAsync(cle, null);
        }
        
        public void GetAllAutreBilanAsync(string cle, object userState) {
            if ((this.onBeginGetAllAutreBilanDelegate == null)) {
                this.onBeginGetAllAutreBilanDelegate = new BeginOperationDelegate(this.OnBeginGetAllAutreBilan);
            }
            if ((this.onEndGetAllAutreBilanDelegate == null)) {
                this.onEndGetAllAutreBilanDelegate = new EndOperationDelegate(this.OnEndGetAllAutreBilan);
            }
            if ((this.onGetAllAutreBilanCompletedDelegate == null)) {
                this.onGetAllAutreBilanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAutreBilanCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAutreBilanDelegate, new object[] {
                        cle}, this.onEndGetAllAutreBilanDelegate, this.onGetAllAutreBilanCompletedDelegate, userState);
        }
        
        public void InsertAutreBilan(Medicus.SVC.AutreBilan obj) {
            base.Channel.InsertAutreBilan(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAutreBilan(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertAutreBilan(System.IAsyncResult result) {
            base.Channel.EndInsertAutreBilan(result);
        }
        
        private System.IAsyncResult OnBeginInsertAutreBilan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.AutreBilan obj = ((Medicus.SVC.AutreBilan)(inValues[0]));
            return this.BeginInsertAutreBilan(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertAutreBilan(System.IAsyncResult result) {
            this.EndInsertAutreBilan(result);
            return null;
        }
        
        private void OnInsertAutreBilanCompleted(object state) {
            if ((this.InsertAutreBilanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAutreBilanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAutreBilanAsync(Medicus.SVC.AutreBilan obj) {
            this.InsertAutreBilanAsync(obj, null);
        }
        
        public void InsertAutreBilanAsync(Medicus.SVC.AutreBilan obj, object userState) {
            if ((this.onBeginInsertAutreBilanDelegate == null)) {
                this.onBeginInsertAutreBilanDelegate = new BeginOperationDelegate(this.OnBeginInsertAutreBilan);
            }
            if ((this.onEndInsertAutreBilanDelegate == null)) {
                this.onEndInsertAutreBilanDelegate = new EndOperationDelegate(this.OnEndInsertAutreBilan);
            }
            if ((this.onInsertAutreBilanCompletedDelegate == null)) {
                this.onInsertAutreBilanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAutreBilanCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAutreBilanDelegate, new object[] {
                        obj}, this.onEndInsertAutreBilanDelegate, this.onInsertAutreBilanCompletedDelegate, userState);
        }
        
        public void UpdateAutreBilan(Medicus.SVC.AutreBilan obj) {
            base.Channel.UpdateAutreBilan(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAutreBilan(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAutreBilan(System.IAsyncResult result) {
            base.Channel.EndUpdateAutreBilan(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAutreBilan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.AutreBilan obj = ((Medicus.SVC.AutreBilan)(inValues[0]));
            return this.BeginUpdateAutreBilan(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateAutreBilan(System.IAsyncResult result) {
            this.EndUpdateAutreBilan(result);
            return null;
        }
        
        private void OnUpdateAutreBilanCompleted(object state) {
            if ((this.UpdateAutreBilanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAutreBilanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAutreBilanAsync(Medicus.SVC.AutreBilan obj) {
            this.UpdateAutreBilanAsync(obj, null);
        }
        
        public void UpdateAutreBilanAsync(Medicus.SVC.AutreBilan obj, object userState) {
            if ((this.onBeginUpdateAutreBilanDelegate == null)) {
                this.onBeginUpdateAutreBilanDelegate = new BeginOperationDelegate(this.OnBeginUpdateAutreBilan);
            }
            if ((this.onEndUpdateAutreBilanDelegate == null)) {
                this.onEndUpdateAutreBilanDelegate = new EndOperationDelegate(this.OnEndUpdateAutreBilan);
            }
            if ((this.onUpdateAutreBilanCompletedDelegate == null)) {
                this.onUpdateAutreBilanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAutreBilanCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAutreBilanDelegate, new object[] {
                        obj}, this.onEndUpdateAutreBilanDelegate, this.onUpdateAutreBilanCompletedDelegate, userState);
        }
        
        public void DeleteAutreBilan(Medicus.SVC.AutreBilan obj) {
            base.Channel.DeleteAutreBilan(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAutreBilan(Medicus.SVC.AutreBilan obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAutreBilan(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAutreBilan(System.IAsyncResult result) {
            base.Channel.EndDeleteAutreBilan(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAutreBilan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.AutreBilan obj = ((Medicus.SVC.AutreBilan)(inValues[0]));
            return this.BeginDeleteAutreBilan(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteAutreBilan(System.IAsyncResult result) {
            this.EndDeleteAutreBilan(result);
            return null;
        }
        
        private void OnDeleteAutreBilanCompleted(object state) {
            if ((this.DeleteAutreBilanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAutreBilanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAutreBilanAsync(Medicus.SVC.AutreBilan obj) {
            this.DeleteAutreBilanAsync(obj, null);
        }
        
        public void DeleteAutreBilanAsync(Medicus.SVC.AutreBilan obj, object userState) {
            if ((this.onBeginDeleteAutreBilanDelegate == null)) {
                this.onBeginDeleteAutreBilanDelegate = new BeginOperationDelegate(this.OnBeginDeleteAutreBilan);
            }
            if ((this.onEndDeleteAutreBilanDelegate == null)) {
                this.onEndDeleteAutreBilanDelegate = new EndOperationDelegate(this.OnEndDeleteAutreBilan);
            }
            if ((this.onDeleteAutreBilanCompletedDelegate == null)) {
                this.onDeleteAutreBilanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAutreBilanCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAutreBilanDelegate, new object[] {
                        obj}, this.onEndDeleteAutreBilanDelegate, this.onDeleteAutreBilanCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Diagnostic> GetAllDiagnostic() {
            return base.Channel.GetAllDiagnostic();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDiagnostic(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDiagnostic(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Diagnostic> EndGetAllDiagnostic(System.IAsyncResult result) {
            return base.Channel.EndGetAllDiagnostic(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDiagnostic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDiagnostic(callback, asyncState);
        }
        
        private object[] OnEndGetAllDiagnostic(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Diagnostic> retVal = this.EndGetAllDiagnostic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDiagnosticCompleted(object state) {
            if ((this.GetAllDiagnosticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDiagnosticCompleted(this, new GetAllDiagnosticCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDiagnosticAsync() {
            this.GetAllDiagnosticAsync(null);
        }
        
        public void GetAllDiagnosticAsync(object userState) {
            if ((this.onBeginGetAllDiagnosticDelegate == null)) {
                this.onBeginGetAllDiagnosticDelegate = new BeginOperationDelegate(this.OnBeginGetAllDiagnostic);
            }
            if ((this.onEndGetAllDiagnosticDelegate == null)) {
                this.onEndGetAllDiagnosticDelegate = new EndOperationDelegate(this.OnEndGetAllDiagnostic);
            }
            if ((this.onGetAllDiagnosticCompletedDelegate == null)) {
                this.onGetAllDiagnosticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDiagnosticCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDiagnosticDelegate, null, this.onEndGetAllDiagnosticDelegate, this.onGetAllDiagnosticCompletedDelegate, userState);
        }
        
        public void InsertDiagnostic(Medicus.SVC.Diagnostic obj) {
            base.Channel.InsertDiagnostic(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDiagnostic(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDiagnostic(System.IAsyncResult result) {
            base.Channel.EndInsertDiagnostic(result);
        }
        
        private System.IAsyncResult OnBeginInsertDiagnostic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Diagnostic obj = ((Medicus.SVC.Diagnostic)(inValues[0]));
            return this.BeginInsertDiagnostic(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDiagnostic(System.IAsyncResult result) {
            this.EndInsertDiagnostic(result);
            return null;
        }
        
        private void OnInsertDiagnosticCompleted(object state) {
            if ((this.InsertDiagnosticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDiagnosticCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDiagnosticAsync(Medicus.SVC.Diagnostic obj) {
            this.InsertDiagnosticAsync(obj, null);
        }
        
        public void InsertDiagnosticAsync(Medicus.SVC.Diagnostic obj, object userState) {
            if ((this.onBeginInsertDiagnosticDelegate == null)) {
                this.onBeginInsertDiagnosticDelegate = new BeginOperationDelegate(this.OnBeginInsertDiagnostic);
            }
            if ((this.onEndInsertDiagnosticDelegate == null)) {
                this.onEndInsertDiagnosticDelegate = new EndOperationDelegate(this.OnEndInsertDiagnostic);
            }
            if ((this.onInsertDiagnosticCompletedDelegate == null)) {
                this.onInsertDiagnosticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDiagnosticCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDiagnosticDelegate, new object[] {
                        obj}, this.onEndInsertDiagnosticDelegate, this.onInsertDiagnosticCompletedDelegate, userState);
        }
        
        public void UpdateDiagnostic(Medicus.SVC.Diagnostic obj) {
            base.Channel.UpdateDiagnostic(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDiagnostic(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDiagnostic(System.IAsyncResult result) {
            base.Channel.EndUpdateDiagnostic(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDiagnostic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Diagnostic obj = ((Medicus.SVC.Diagnostic)(inValues[0]));
            return this.BeginUpdateDiagnostic(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDiagnostic(System.IAsyncResult result) {
            this.EndUpdateDiagnostic(result);
            return null;
        }
        
        private void OnUpdateDiagnosticCompleted(object state) {
            if ((this.UpdateDiagnosticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDiagnosticCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDiagnosticAsync(Medicus.SVC.Diagnostic obj) {
            this.UpdateDiagnosticAsync(obj, null);
        }
        
        public void UpdateDiagnosticAsync(Medicus.SVC.Diagnostic obj, object userState) {
            if ((this.onBeginUpdateDiagnosticDelegate == null)) {
                this.onBeginUpdateDiagnosticDelegate = new BeginOperationDelegate(this.OnBeginUpdateDiagnostic);
            }
            if ((this.onEndUpdateDiagnosticDelegate == null)) {
                this.onEndUpdateDiagnosticDelegate = new EndOperationDelegate(this.OnEndUpdateDiagnostic);
            }
            if ((this.onUpdateDiagnosticCompletedDelegate == null)) {
                this.onUpdateDiagnosticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDiagnosticCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDiagnosticDelegate, new object[] {
                        obj}, this.onEndUpdateDiagnosticDelegate, this.onUpdateDiagnosticCompletedDelegate, userState);
        }
        
        public void DeleteDiagnostic(Medicus.SVC.Diagnostic obj) {
            base.Channel.DeleteDiagnostic(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDiagnostic(Medicus.SVC.Diagnostic obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDiagnostic(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDiagnostic(System.IAsyncResult result) {
            base.Channel.EndDeleteDiagnostic(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDiagnostic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Diagnostic obj = ((Medicus.SVC.Diagnostic)(inValues[0]));
            return this.BeginDeleteDiagnostic(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDiagnostic(System.IAsyncResult result) {
            this.EndDeleteDiagnostic(result);
            return null;
        }
        
        private void OnDeleteDiagnosticCompleted(object state) {
            if ((this.DeleteDiagnosticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDiagnosticCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDiagnosticAsync(Medicus.SVC.Diagnostic obj) {
            this.DeleteDiagnosticAsync(obj, null);
        }
        
        public void DeleteDiagnosticAsync(Medicus.SVC.Diagnostic obj, object userState) {
            if ((this.onBeginDeleteDiagnosticDelegate == null)) {
                this.onBeginDeleteDiagnosticDelegate = new BeginOperationDelegate(this.OnBeginDeleteDiagnostic);
            }
            if ((this.onEndDeleteDiagnosticDelegate == null)) {
                this.onEndDeleteDiagnosticDelegate = new EndOperationDelegate(this.OnEndDeleteDiagnostic);
            }
            if ((this.onDeleteDiagnosticCompletedDelegate == null)) {
                this.onDeleteDiagnosticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDiagnosticCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDiagnosticDelegate, new object[] {
                        obj}, this.onEndDeleteDiagnosticDelegate, this.onDeleteDiagnosticCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> GetAllEnteteOrdonnace() {
            return base.Channel.GetAllEnteteOrdonnace();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllEnteteOrdonnace(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEnteteOrdonnace(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> EndGetAllEnteteOrdonnace(System.IAsyncResult result) {
            return base.Channel.EndGetAllEnteteOrdonnace(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEnteteOrdonnace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllEnteteOrdonnace(callback, asyncState);
        }
        
        private object[] OnEndGetAllEnteteOrdonnace(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.EnteteOrdonnace> retVal = this.EndGetAllEnteteOrdonnace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEnteteOrdonnaceCompleted(object state) {
            if ((this.GetAllEnteteOrdonnaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEnteteOrdonnaceCompleted(this, new GetAllEnteteOrdonnaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEnteteOrdonnaceAsync() {
            this.GetAllEnteteOrdonnaceAsync(null);
        }
        
        public void GetAllEnteteOrdonnaceAsync(object userState) {
            if ((this.onBeginGetAllEnteteOrdonnaceDelegate == null)) {
                this.onBeginGetAllEnteteOrdonnaceDelegate = new BeginOperationDelegate(this.OnBeginGetAllEnteteOrdonnace);
            }
            if ((this.onEndGetAllEnteteOrdonnaceDelegate == null)) {
                this.onEndGetAllEnteteOrdonnaceDelegate = new EndOperationDelegate(this.OnEndGetAllEnteteOrdonnace);
            }
            if ((this.onGetAllEnteteOrdonnaceCompletedDelegate == null)) {
                this.onGetAllEnteteOrdonnaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEnteteOrdonnaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEnteteOrdonnaceDelegate, null, this.onEndGetAllEnteteOrdonnaceDelegate, this.onGetAllEnteteOrdonnaceCompletedDelegate, userState);
        }
        
        public void InsertEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj) {
            base.Channel.InsertEnteteOrdonnace(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertEnteteOrdonnace(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertEnteteOrdonnace(System.IAsyncResult result) {
            base.Channel.EndInsertEnteteOrdonnace(result);
        }
        
        private System.IAsyncResult OnBeginInsertEnteteOrdonnace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.EnteteOrdonnace obj = ((Medicus.SVC.EnteteOrdonnace)(inValues[0]));
            return this.BeginInsertEnteteOrdonnace(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertEnteteOrdonnace(System.IAsyncResult result) {
            this.EndInsertEnteteOrdonnace(result);
            return null;
        }
        
        private void OnInsertEnteteOrdonnaceCompleted(object state) {
            if ((this.InsertEnteteOrdonnaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertEnteteOrdonnaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj) {
            this.InsertEnteteOrdonnaceAsync(obj, null);
        }
        
        public void InsertEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj, object userState) {
            if ((this.onBeginInsertEnteteOrdonnaceDelegate == null)) {
                this.onBeginInsertEnteteOrdonnaceDelegate = new BeginOperationDelegate(this.OnBeginInsertEnteteOrdonnace);
            }
            if ((this.onEndInsertEnteteOrdonnaceDelegate == null)) {
                this.onEndInsertEnteteOrdonnaceDelegate = new EndOperationDelegate(this.OnEndInsertEnteteOrdonnace);
            }
            if ((this.onInsertEnteteOrdonnaceCompletedDelegate == null)) {
                this.onInsertEnteteOrdonnaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertEnteteOrdonnaceCompleted);
            }
            base.InvokeAsync(this.onBeginInsertEnteteOrdonnaceDelegate, new object[] {
                        obj}, this.onEndInsertEnteteOrdonnaceDelegate, this.onInsertEnteteOrdonnaceCompletedDelegate, userState);
        }
        
        public void UpdateEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj) {
            base.Channel.UpdateEnteteOrdonnace(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEnteteOrdonnace(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateEnteteOrdonnace(System.IAsyncResult result) {
            base.Channel.EndUpdateEnteteOrdonnace(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEnteteOrdonnace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.EnteteOrdonnace obj = ((Medicus.SVC.EnteteOrdonnace)(inValues[0]));
            return this.BeginUpdateEnteteOrdonnace(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateEnteteOrdonnace(System.IAsyncResult result) {
            this.EndUpdateEnteteOrdonnace(result);
            return null;
        }
        
        private void OnUpdateEnteteOrdonnaceCompleted(object state) {
            if ((this.UpdateEnteteOrdonnaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEnteteOrdonnaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj) {
            this.UpdateEnteteOrdonnaceAsync(obj, null);
        }
        
        public void UpdateEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj, object userState) {
            if ((this.onBeginUpdateEnteteOrdonnaceDelegate == null)) {
                this.onBeginUpdateEnteteOrdonnaceDelegate = new BeginOperationDelegate(this.OnBeginUpdateEnteteOrdonnace);
            }
            if ((this.onEndUpdateEnteteOrdonnaceDelegate == null)) {
                this.onEndUpdateEnteteOrdonnaceDelegate = new EndOperationDelegate(this.OnEndUpdateEnteteOrdonnace);
            }
            if ((this.onUpdateEnteteOrdonnaceCompletedDelegate == null)) {
                this.onUpdateEnteteOrdonnaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEnteteOrdonnaceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEnteteOrdonnaceDelegate, new object[] {
                        obj}, this.onEndUpdateEnteteOrdonnaceDelegate, this.onUpdateEnteteOrdonnaceCompletedDelegate, userState);
        }
        
        public void DeleteEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj) {
            base.Channel.DeleteEnteteOrdonnace(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEnteteOrdonnace(Medicus.SVC.EnteteOrdonnace obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEnteteOrdonnace(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteEnteteOrdonnace(System.IAsyncResult result) {
            base.Channel.EndDeleteEnteteOrdonnace(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEnteteOrdonnace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.EnteteOrdonnace obj = ((Medicus.SVC.EnteteOrdonnace)(inValues[0]));
            return this.BeginDeleteEnteteOrdonnace(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteEnteteOrdonnace(System.IAsyncResult result) {
            this.EndDeleteEnteteOrdonnace(result);
            return null;
        }
        
        private void OnDeleteEnteteOrdonnaceCompleted(object state) {
            if ((this.DeleteEnteteOrdonnaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEnteteOrdonnaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj) {
            this.DeleteEnteteOrdonnaceAsync(obj, null);
        }
        
        public void DeleteEnteteOrdonnaceAsync(Medicus.SVC.EnteteOrdonnace obj, object userState) {
            if ((this.onBeginDeleteEnteteOrdonnaceDelegate == null)) {
                this.onBeginDeleteEnteteOrdonnaceDelegate = new BeginOperationDelegate(this.OnBeginDeleteEnteteOrdonnace);
            }
            if ((this.onEndDeleteEnteteOrdonnaceDelegate == null)) {
                this.onEndDeleteEnteteOrdonnaceDelegate = new EndOperationDelegate(this.OnEndDeleteEnteteOrdonnace);
            }
            if ((this.onDeleteEnteteOrdonnaceCompletedDelegate == null)) {
                this.onDeleteEnteteOrdonnaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEnteteOrdonnaceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEnteteOrdonnaceDelegate, new object[] {
                        obj}, this.onEndDeleteEnteteOrdonnaceDelegate, this.onDeleteEnteteOrdonnaceCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> GetAllOrdonnancePatient() {
            return base.Channel.GetAllOrdonnancePatient();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllOrdonnancePatient(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllOrdonnancePatient(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> EndGetAllOrdonnancePatient(System.IAsyncResult result) {
            return base.Channel.EndGetAllOrdonnancePatient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllOrdonnancePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllOrdonnancePatient(callback, asyncState);
        }
        
        private object[] OnEndGetAllOrdonnancePatient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.OrdonnancePatient> retVal = this.EndGetAllOrdonnancePatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllOrdonnancePatientCompleted(object state) {
            if ((this.GetAllOrdonnancePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllOrdonnancePatientCompleted(this, new GetAllOrdonnancePatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllOrdonnancePatientAsync() {
            this.GetAllOrdonnancePatientAsync(null);
        }
        
        public void GetAllOrdonnancePatientAsync(object userState) {
            if ((this.onBeginGetAllOrdonnancePatientDelegate == null)) {
                this.onBeginGetAllOrdonnancePatientDelegate = new BeginOperationDelegate(this.OnBeginGetAllOrdonnancePatient);
            }
            if ((this.onEndGetAllOrdonnancePatientDelegate == null)) {
                this.onEndGetAllOrdonnancePatientDelegate = new EndOperationDelegate(this.OnEndGetAllOrdonnancePatient);
            }
            if ((this.onGetAllOrdonnancePatientCompletedDelegate == null)) {
                this.onGetAllOrdonnancePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllOrdonnancePatientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllOrdonnancePatientDelegate, null, this.onEndGetAllOrdonnancePatientDelegate, this.onGetAllOrdonnancePatientCompletedDelegate, userState);
        }
        
        public void InsertOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj) {
            base.Channel.InsertOrdonnancePatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertOrdonnancePatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertOrdonnancePatient(System.IAsyncResult result) {
            base.Channel.EndInsertOrdonnancePatient(result);
        }
        
        private System.IAsyncResult OnBeginInsertOrdonnancePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.OrdonnancePatient obj = ((Medicus.SVC.OrdonnancePatient)(inValues[0]));
            return this.BeginInsertOrdonnancePatient(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertOrdonnancePatient(System.IAsyncResult result) {
            this.EndInsertOrdonnancePatient(result);
            return null;
        }
        
        private void OnInsertOrdonnancePatientCompleted(object state) {
            if ((this.InsertOrdonnancePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertOrdonnancePatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj) {
            this.InsertOrdonnancePatientAsync(obj, null);
        }
        
        public void InsertOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj, object userState) {
            if ((this.onBeginInsertOrdonnancePatientDelegate == null)) {
                this.onBeginInsertOrdonnancePatientDelegate = new BeginOperationDelegate(this.OnBeginInsertOrdonnancePatient);
            }
            if ((this.onEndInsertOrdonnancePatientDelegate == null)) {
                this.onEndInsertOrdonnancePatientDelegate = new EndOperationDelegate(this.OnEndInsertOrdonnancePatient);
            }
            if ((this.onInsertOrdonnancePatientCompletedDelegate == null)) {
                this.onInsertOrdonnancePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertOrdonnancePatientCompleted);
            }
            base.InvokeAsync(this.onBeginInsertOrdonnancePatientDelegate, new object[] {
                        obj}, this.onEndInsertOrdonnancePatientDelegate, this.onInsertOrdonnancePatientCompletedDelegate, userState);
        }
        
        public void UpdateOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj) {
            base.Channel.UpdateOrdonnancePatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOrdonnancePatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateOrdonnancePatient(System.IAsyncResult result) {
            base.Channel.EndUpdateOrdonnancePatient(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrdonnancePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.OrdonnancePatient obj = ((Medicus.SVC.OrdonnancePatient)(inValues[0]));
            return this.BeginUpdateOrdonnancePatient(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrdonnancePatient(System.IAsyncResult result) {
            this.EndUpdateOrdonnancePatient(result);
            return null;
        }
        
        private void OnUpdateOrdonnancePatientCompleted(object state) {
            if ((this.UpdateOrdonnancePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrdonnancePatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj) {
            this.UpdateOrdonnancePatientAsync(obj, null);
        }
        
        public void UpdateOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj, object userState) {
            if ((this.onBeginUpdateOrdonnancePatientDelegate == null)) {
                this.onBeginUpdateOrdonnancePatientDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrdonnancePatient);
            }
            if ((this.onEndUpdateOrdonnancePatientDelegate == null)) {
                this.onEndUpdateOrdonnancePatientDelegate = new EndOperationDelegate(this.OnEndUpdateOrdonnancePatient);
            }
            if ((this.onUpdateOrdonnancePatientCompletedDelegate == null)) {
                this.onUpdateOrdonnancePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrdonnancePatientCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrdonnancePatientDelegate, new object[] {
                        obj}, this.onEndUpdateOrdonnancePatientDelegate, this.onUpdateOrdonnancePatientCompletedDelegate, userState);
        }
        
        public void DeleteOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj) {
            base.Channel.DeleteOrdonnancePatient(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOrdonnancePatient(Medicus.SVC.OrdonnancePatient obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrdonnancePatient(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOrdonnancePatient(System.IAsyncResult result) {
            base.Channel.EndDeleteOrdonnancePatient(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrdonnancePatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.OrdonnancePatient obj = ((Medicus.SVC.OrdonnancePatient)(inValues[0]));
            return this.BeginDeleteOrdonnancePatient(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrdonnancePatient(System.IAsyncResult result) {
            this.EndDeleteOrdonnancePatient(result);
            return null;
        }
        
        private void OnDeleteOrdonnancePatientCompleted(object state) {
            if ((this.DeleteOrdonnancePatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrdonnancePatientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj) {
            this.DeleteOrdonnancePatientAsync(obj, null);
        }
        
        public void DeleteOrdonnancePatientAsync(Medicus.SVC.OrdonnancePatient obj, object userState) {
            if ((this.onBeginDeleteOrdonnancePatientDelegate == null)) {
                this.onBeginDeleteOrdonnancePatientDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrdonnancePatient);
            }
            if ((this.onEndDeleteOrdonnancePatientDelegate == null)) {
                this.onEndDeleteOrdonnancePatientDelegate = new EndOperationDelegate(this.OnEndDeleteOrdonnancePatient);
            }
            if ((this.onDeleteOrdonnancePatientCompletedDelegate == null)) {
                this.onDeleteOrdonnancePatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrdonnancePatientCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrdonnancePatientDelegate, new object[] {
                        obj}, this.onEndDeleteOrdonnancePatientDelegate, this.onDeleteOrdonnancePatientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Acte> GetAllActe() {
            return base.Channel.GetAllActe();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllActe(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllActe(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Acte> EndGetAllActe(System.IAsyncResult result) {
            return base.Channel.EndGetAllActe(result);
        }
        
        private System.IAsyncResult OnBeginGetAllActe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllActe(callback, asyncState);
        }
        
        private object[] OnEndGetAllActe(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Acte> retVal = this.EndGetAllActe(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllActeCompleted(object state) {
            if ((this.GetAllActeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllActeCompleted(this, new GetAllActeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllActeAsync() {
            this.GetAllActeAsync(null);
        }
        
        public void GetAllActeAsync(object userState) {
            if ((this.onBeginGetAllActeDelegate == null)) {
                this.onBeginGetAllActeDelegate = new BeginOperationDelegate(this.OnBeginGetAllActe);
            }
            if ((this.onEndGetAllActeDelegate == null)) {
                this.onEndGetAllActeDelegate = new EndOperationDelegate(this.OnEndGetAllActe);
            }
            if ((this.onGetAllActeCompletedDelegate == null)) {
                this.onGetAllActeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllActeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllActeDelegate, null, this.onEndGetAllActeDelegate, this.onGetAllActeCompletedDelegate, userState);
        }
        
        public void InsertActe(Medicus.SVC.Acte obj) {
            base.Channel.InsertActe(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertActe(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertActe(System.IAsyncResult result) {
            base.Channel.EndInsertActe(result);
        }
        
        private System.IAsyncResult OnBeginInsertActe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Acte obj = ((Medicus.SVC.Acte)(inValues[0]));
            return this.BeginInsertActe(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertActe(System.IAsyncResult result) {
            this.EndInsertActe(result);
            return null;
        }
        
        private void OnInsertActeCompleted(object state) {
            if ((this.InsertActeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertActeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertActeAsync(Medicus.SVC.Acte obj) {
            this.InsertActeAsync(obj, null);
        }
        
        public void InsertActeAsync(Medicus.SVC.Acte obj, object userState) {
            if ((this.onBeginInsertActeDelegate == null)) {
                this.onBeginInsertActeDelegate = new BeginOperationDelegate(this.OnBeginInsertActe);
            }
            if ((this.onEndInsertActeDelegate == null)) {
                this.onEndInsertActeDelegate = new EndOperationDelegate(this.OnEndInsertActe);
            }
            if ((this.onInsertActeCompletedDelegate == null)) {
                this.onInsertActeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertActeCompleted);
            }
            base.InvokeAsync(this.onBeginInsertActeDelegate, new object[] {
                        obj}, this.onEndInsertActeDelegate, this.onInsertActeCompletedDelegate, userState);
        }
        
        public void UpdateActe(Medicus.SVC.Acte obj) {
            base.Channel.UpdateActe(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateActe(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateActe(System.IAsyncResult result) {
            base.Channel.EndUpdateActe(result);
        }
        
        private System.IAsyncResult OnBeginUpdateActe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Acte obj = ((Medicus.SVC.Acte)(inValues[0]));
            return this.BeginUpdateActe(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateActe(System.IAsyncResult result) {
            this.EndUpdateActe(result);
            return null;
        }
        
        private void OnUpdateActeCompleted(object state) {
            if ((this.UpdateActeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateActeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateActeAsync(Medicus.SVC.Acte obj) {
            this.UpdateActeAsync(obj, null);
        }
        
        public void UpdateActeAsync(Medicus.SVC.Acte obj, object userState) {
            if ((this.onBeginUpdateActeDelegate == null)) {
                this.onBeginUpdateActeDelegate = new BeginOperationDelegate(this.OnBeginUpdateActe);
            }
            if ((this.onEndUpdateActeDelegate == null)) {
                this.onEndUpdateActeDelegate = new EndOperationDelegate(this.OnEndUpdateActe);
            }
            if ((this.onUpdateActeCompletedDelegate == null)) {
                this.onUpdateActeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateActeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateActeDelegate, new object[] {
                        obj}, this.onEndUpdateActeDelegate, this.onUpdateActeCompletedDelegate, userState);
        }
        
        public void DeleteActe(Medicus.SVC.Acte obj) {
            base.Channel.DeleteActe(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteActe(Medicus.SVC.Acte obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteActe(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteActe(System.IAsyncResult result) {
            base.Channel.EndDeleteActe(result);
        }
        
        private System.IAsyncResult OnBeginDeleteActe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Acte obj = ((Medicus.SVC.Acte)(inValues[0]));
            return this.BeginDeleteActe(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteActe(System.IAsyncResult result) {
            this.EndDeleteActe(result);
            return null;
        }
        
        private void OnDeleteActeCompleted(object state) {
            if ((this.DeleteActeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteActeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteActeAsync(Medicus.SVC.Acte obj) {
            this.DeleteActeAsync(obj, null);
        }
        
        public void DeleteActeAsync(Medicus.SVC.Acte obj, object userState) {
            if ((this.onBeginDeleteActeDelegate == null)) {
                this.onBeginDeleteActeDelegate = new BeginOperationDelegate(this.OnBeginDeleteActe);
            }
            if ((this.onEndDeleteActeDelegate == null)) {
                this.onEndDeleteActeDelegate = new EndOperationDelegate(this.OnEndDeleteActe);
            }
            if ((this.onDeleteActeCompletedDelegate == null)) {
                this.onDeleteActeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteActeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteActeDelegate, new object[] {
                        obj}, this.onEndDeleteActeDelegate, this.onDeleteActeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Catalogue> GetAllCatalogue() {
            return base.Channel.GetAllCatalogue();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCatalogue(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCatalogue(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Catalogue> EndGetAllCatalogue(System.IAsyncResult result) {
            return base.Channel.EndGetAllCatalogue(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCatalogue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCatalogue(callback, asyncState);
        }
        
        private object[] OnEndGetAllCatalogue(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Catalogue> retVal = this.EndGetAllCatalogue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCatalogueCompleted(object state) {
            if ((this.GetAllCatalogueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCatalogueCompleted(this, new GetAllCatalogueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCatalogueAsync() {
            this.GetAllCatalogueAsync(null);
        }
        
        public void GetAllCatalogueAsync(object userState) {
            if ((this.onBeginGetAllCatalogueDelegate == null)) {
                this.onBeginGetAllCatalogueDelegate = new BeginOperationDelegate(this.OnBeginGetAllCatalogue);
            }
            if ((this.onEndGetAllCatalogueDelegate == null)) {
                this.onEndGetAllCatalogueDelegate = new EndOperationDelegate(this.OnEndGetAllCatalogue);
            }
            if ((this.onGetAllCatalogueCompletedDelegate == null)) {
                this.onGetAllCatalogueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCatalogueCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCatalogueDelegate, null, this.onEndGetAllCatalogueDelegate, this.onGetAllCatalogueCompletedDelegate, userState);
        }
        
        public void InsertCatalogue(Medicus.SVC.Catalogue obj) {
            base.Channel.InsertCatalogue(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertCatalogue(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertCatalogue(System.IAsyncResult result) {
            base.Channel.EndInsertCatalogue(result);
        }
        
        private System.IAsyncResult OnBeginInsertCatalogue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Catalogue obj = ((Medicus.SVC.Catalogue)(inValues[0]));
            return this.BeginInsertCatalogue(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertCatalogue(System.IAsyncResult result) {
            this.EndInsertCatalogue(result);
            return null;
        }
        
        private void OnInsertCatalogueCompleted(object state) {
            if ((this.InsertCatalogueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCatalogueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCatalogueAsync(Medicus.SVC.Catalogue obj) {
            this.InsertCatalogueAsync(obj, null);
        }
        
        public void InsertCatalogueAsync(Medicus.SVC.Catalogue obj, object userState) {
            if ((this.onBeginInsertCatalogueDelegate == null)) {
                this.onBeginInsertCatalogueDelegate = new BeginOperationDelegate(this.OnBeginInsertCatalogue);
            }
            if ((this.onEndInsertCatalogueDelegate == null)) {
                this.onEndInsertCatalogueDelegate = new EndOperationDelegate(this.OnEndInsertCatalogue);
            }
            if ((this.onInsertCatalogueCompletedDelegate == null)) {
                this.onInsertCatalogueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCatalogueCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCatalogueDelegate, new object[] {
                        obj}, this.onEndInsertCatalogueDelegate, this.onInsertCatalogueCompletedDelegate, userState);
        }
        
        public void UpdateCatalogue(Medicus.SVC.Catalogue obj) {
            base.Channel.UpdateCatalogue(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCatalogue(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateCatalogue(System.IAsyncResult result) {
            base.Channel.EndUpdateCatalogue(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCatalogue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Catalogue obj = ((Medicus.SVC.Catalogue)(inValues[0]));
            return this.BeginUpdateCatalogue(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateCatalogue(System.IAsyncResult result) {
            this.EndUpdateCatalogue(result);
            return null;
        }
        
        private void OnUpdateCatalogueCompleted(object state) {
            if ((this.UpdateCatalogueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCatalogueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCatalogueAsync(Medicus.SVC.Catalogue obj) {
            this.UpdateCatalogueAsync(obj, null);
        }
        
        public void UpdateCatalogueAsync(Medicus.SVC.Catalogue obj, object userState) {
            if ((this.onBeginUpdateCatalogueDelegate == null)) {
                this.onBeginUpdateCatalogueDelegate = new BeginOperationDelegate(this.OnBeginUpdateCatalogue);
            }
            if ((this.onEndUpdateCatalogueDelegate == null)) {
                this.onEndUpdateCatalogueDelegate = new EndOperationDelegate(this.OnEndUpdateCatalogue);
            }
            if ((this.onUpdateCatalogueCompletedDelegate == null)) {
                this.onUpdateCatalogueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCatalogueCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCatalogueDelegate, new object[] {
                        obj}, this.onEndUpdateCatalogueDelegate, this.onUpdateCatalogueCompletedDelegate, userState);
        }
        
        public void DeleteCatalogue(Medicus.SVC.Catalogue obj) {
            base.Channel.DeleteCatalogue(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCatalogue(Medicus.SVC.Catalogue obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCatalogue(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCatalogue(System.IAsyncResult result) {
            base.Channel.EndDeleteCatalogue(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCatalogue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Catalogue obj = ((Medicus.SVC.Catalogue)(inValues[0]));
            return this.BeginDeleteCatalogue(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteCatalogue(System.IAsyncResult result) {
            this.EndDeleteCatalogue(result);
            return null;
        }
        
        private void OnDeleteCatalogueCompleted(object state) {
            if ((this.DeleteCatalogueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCatalogueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCatalogueAsync(Medicus.SVC.Catalogue obj) {
            this.DeleteCatalogueAsync(obj, null);
        }
        
        public void DeleteCatalogueAsync(Medicus.SVC.Catalogue obj, object userState) {
            if ((this.onBeginDeleteCatalogueDelegate == null)) {
                this.onBeginDeleteCatalogueDelegate = new BeginOperationDelegate(this.OnBeginDeleteCatalogue);
            }
            if ((this.onEndDeleteCatalogueDelegate == null)) {
                this.onEndDeleteCatalogueDelegate = new EndOperationDelegate(this.OnEndDeleteCatalogue);
            }
            if ((this.onDeleteCatalogueCompletedDelegate == null)) {
                this.onDeleteCatalogueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCatalogueCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCatalogueDelegate, new object[] {
                        obj}, this.onEndDeleteCatalogueDelegate, this.onDeleteCatalogueCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> GetAllDepeiementMultiple() {
            return base.Channel.GetAllDepeiementMultiple();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeiementMultiple(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeiementMultiple(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> EndGetAllDepeiementMultiple(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepeiementMultiple(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeiementMultiple(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.DepeiementMultiple> retVal = this.EndGetAllDepeiementMultiple(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeiementMultipleCompleted(object state) {
            if ((this.GetAllDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeiementMultipleCompleted(this, new GetAllDepeiementMultipleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeiementMultipleAsync() {
            this.GetAllDepeiementMultipleAsync(null);
        }
        
        public void GetAllDepeiementMultipleAsync(object userState) {
            if ((this.onBeginGetAllDepeiementMultipleDelegate == null)) {
                this.onBeginGetAllDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepeiementMultiple);
            }
            if ((this.onEndGetAllDepeiementMultipleDelegate == null)) {
                this.onEndGetAllDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndGetAllDepeiementMultiple);
            }
            if ((this.onGetAllDepeiementMultipleCompletedDelegate == null)) {
                this.onGetAllDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepeiementMultipleDelegate, null, this.onEndGetAllDepeiementMultipleDelegate, this.onGetAllDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void InsertDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj) {
            base.Channel.InsertDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndInsertDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DepeiementMultiple obj = ((Medicus.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginInsertDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepeiementMultiple(System.IAsyncResult result) {
            this.EndInsertDepeiementMultiple(result);
            return null;
        }
        
        private void OnInsertDepeiementMultipleCompleted(object state) {
            if ((this.InsertDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj) {
            this.InsertDepeiementMultipleAsync(obj, null);
        }
        
        public void InsertDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginInsertDepeiementMultipleDelegate == null)) {
                this.onBeginInsertDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginInsertDepeiementMultiple);
            }
            if ((this.onEndInsertDepeiementMultipleDelegate == null)) {
                this.onEndInsertDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndInsertDepeiementMultiple);
            }
            if ((this.onInsertDepeiementMultipleCompletedDelegate == null)) {
                this.onInsertDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndInsertDepeiementMultipleDelegate, this.onInsertDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void UpdateDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj) {
            base.Channel.UpdateDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndUpdateDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DepeiementMultiple obj = ((Medicus.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginUpdateDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepeiementMultiple(System.IAsyncResult result) {
            this.EndUpdateDepeiementMultiple(result);
            return null;
        }
        
        private void OnUpdateDepeiementMultipleCompleted(object state) {
            if ((this.UpdateDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj) {
            this.UpdateDepeiementMultipleAsync(obj, null);
        }
        
        public void UpdateDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginUpdateDepeiementMultipleDelegate == null)) {
                this.onBeginUpdateDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepeiementMultiple);
            }
            if ((this.onEndUpdateDepeiementMultipleDelegate == null)) {
                this.onEndUpdateDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndUpdateDepeiementMultiple);
            }
            if ((this.onUpdateDepeiementMultipleCompletedDelegate == null)) {
                this.onUpdateDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndUpdateDepeiementMultipleDelegate, this.onUpdateDepeiementMultipleCompletedDelegate, userState);
        }
        
        public void DeleteDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj) {
            base.Channel.DeleteDepeiementMultiple(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepeiementMultiple(Medicus.SVC.DepeiementMultiple obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepeiementMultiple(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepeiementMultiple(System.IAsyncResult result) {
            base.Channel.EndDeleteDepeiementMultiple(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepeiementMultiple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DepeiementMultiple obj = ((Medicus.SVC.DepeiementMultiple)(inValues[0]));
            return this.BeginDeleteDepeiementMultiple(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepeiementMultiple(System.IAsyncResult result) {
            this.EndDeleteDepeiementMultiple(result);
            return null;
        }
        
        private void OnDeleteDepeiementMultipleCompleted(object state) {
            if ((this.DeleteDepeiementMultipleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepeiementMultipleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj) {
            this.DeleteDepeiementMultipleAsync(obj, null);
        }
        
        public void DeleteDepeiementMultipleAsync(Medicus.SVC.DepeiementMultiple obj, object userState) {
            if ((this.onBeginDeleteDepeiementMultipleDelegate == null)) {
                this.onBeginDeleteDepeiementMultipleDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepeiementMultiple);
            }
            if ((this.onEndDeleteDepeiementMultipleDelegate == null)) {
                this.onEndDeleteDepeiementMultipleDelegate = new EndOperationDelegate(this.OnEndDeleteDepeiementMultiple);
            }
            if ((this.onDeleteDepeiementMultipleCompletedDelegate == null)) {
                this.onDeleteDepeiementMultipleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepeiementMultipleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepeiementMultipleDelegate, new object[] {
                        obj}, this.onEndDeleteDepeiementMultipleDelegate, this.onDeleteDepeiementMultipleCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Depeiment> GetAllDepeiment() {
            return base.Channel.GetAllDepeiment();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepeiment(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepeiment(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Depeiment> EndGetAllDepeiment(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepeiment(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepeiment(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Depeiment> retVal = this.EndGetAllDepeiment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepeimentCompleted(object state) {
            if ((this.GetAllDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepeimentCompleted(this, new GetAllDepeimentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepeimentAsync() {
            this.GetAllDepeimentAsync(null);
        }
        
        public void GetAllDepeimentAsync(object userState) {
            if ((this.onBeginGetAllDepeimentDelegate == null)) {
                this.onBeginGetAllDepeimentDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepeiment);
            }
            if ((this.onEndGetAllDepeimentDelegate == null)) {
                this.onEndGetAllDepeimentDelegate = new EndOperationDelegate(this.OnEndGetAllDepeiment);
            }
            if ((this.onGetAllDepeimentCompletedDelegate == null)) {
                this.onGetAllDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepeimentDelegate, null, this.onEndGetAllDepeimentDelegate, this.onGetAllDepeimentCompletedDelegate, userState);
        }
        
        public void InsertDepeiment(Medicus.SVC.Depeiment obj) {
            base.Channel.InsertDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepeiment(System.IAsyncResult result) {
            base.Channel.EndInsertDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depeiment obj = ((Medicus.SVC.Depeiment)(inValues[0]));
            return this.BeginInsertDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepeiment(System.IAsyncResult result) {
            this.EndInsertDepeiment(result);
            return null;
        }
        
        private void OnInsertDepeimentCompleted(object state) {
            if ((this.InsertDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepeimentAsync(Medicus.SVC.Depeiment obj) {
            this.InsertDepeimentAsync(obj, null);
        }
        
        public void InsertDepeimentAsync(Medicus.SVC.Depeiment obj, object userState) {
            if ((this.onBeginInsertDepeimentDelegate == null)) {
                this.onBeginInsertDepeimentDelegate = new BeginOperationDelegate(this.OnBeginInsertDepeiment);
            }
            if ((this.onEndInsertDepeimentDelegate == null)) {
                this.onEndInsertDepeimentDelegate = new EndOperationDelegate(this.OnEndInsertDepeiment);
            }
            if ((this.onInsertDepeimentCompletedDelegate == null)) {
                this.onInsertDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepeimentDelegate, new object[] {
                        obj}, this.onEndInsertDepeimentDelegate, this.onInsertDepeimentCompletedDelegate, userState);
        }
        
        public void UpdateDepeiment(Medicus.SVC.Depeiment obj) {
            base.Channel.UpdateDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepeiment(System.IAsyncResult result) {
            base.Channel.EndUpdateDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depeiment obj = ((Medicus.SVC.Depeiment)(inValues[0]));
            return this.BeginUpdateDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepeiment(System.IAsyncResult result) {
            this.EndUpdateDepeiment(result);
            return null;
        }
        
        private void OnUpdateDepeimentCompleted(object state) {
            if ((this.UpdateDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepeimentAsync(Medicus.SVC.Depeiment obj) {
            this.UpdateDepeimentAsync(obj, null);
        }
        
        public void UpdateDepeimentAsync(Medicus.SVC.Depeiment obj, object userState) {
            if ((this.onBeginUpdateDepeimentDelegate == null)) {
                this.onBeginUpdateDepeimentDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepeiment);
            }
            if ((this.onEndUpdateDepeimentDelegate == null)) {
                this.onEndUpdateDepeimentDelegate = new EndOperationDelegate(this.OnEndUpdateDepeiment);
            }
            if ((this.onUpdateDepeimentCompletedDelegate == null)) {
                this.onUpdateDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepeimentDelegate, new object[] {
                        obj}, this.onEndUpdateDepeimentDelegate, this.onUpdateDepeimentCompletedDelegate, userState);
        }
        
        public void DeleteDepeiment(Medicus.SVC.Depeiment obj) {
            base.Channel.DeleteDepeiment(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepeiment(Medicus.SVC.Depeiment obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepeiment(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepeiment(System.IAsyncResult result) {
            base.Channel.EndDeleteDepeiment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepeiment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depeiment obj = ((Medicus.SVC.Depeiment)(inValues[0]));
            return this.BeginDeleteDepeiment(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepeiment(System.IAsyncResult result) {
            this.EndDeleteDepeiment(result);
            return null;
        }
        
        private void OnDeleteDepeimentCompleted(object state) {
            if ((this.DeleteDepeimentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepeimentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepeimentAsync(Medicus.SVC.Depeiment obj) {
            this.DeleteDepeimentAsync(obj, null);
        }
        
        public void DeleteDepeimentAsync(Medicus.SVC.Depeiment obj, object userState) {
            if ((this.onBeginDeleteDepeimentDelegate == null)) {
                this.onBeginDeleteDepeimentDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepeiment);
            }
            if ((this.onEndDeleteDepeimentDelegate == null)) {
                this.onEndDeleteDepeimentDelegate = new EndOperationDelegate(this.OnEndDeleteDepeiment);
            }
            if ((this.onDeleteDepeimentCompletedDelegate == null)) {
                this.onDeleteDepeimentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepeimentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepeimentDelegate, new object[] {
                        obj}, this.onEndDeleteDepeimentDelegate, this.onDeleteDepeimentCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.DicomFichier> GetAllDicomFichier() {
            return base.Channel.GetAllDicomFichier();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDicomFichier(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDicomFichier(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.DicomFichier> EndGetAllDicomFichier(System.IAsyncResult result) {
            return base.Channel.EndGetAllDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDicomFichier(callback, asyncState);
        }
        
        private object[] OnEndGetAllDicomFichier(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.DicomFichier> retVal = this.EndGetAllDicomFichier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDicomFichierCompleted(object state) {
            if ((this.GetAllDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDicomFichierCompleted(this, new GetAllDicomFichierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDicomFichierAsync() {
            this.GetAllDicomFichierAsync(null);
        }
        
        public void GetAllDicomFichierAsync(object userState) {
            if ((this.onBeginGetAllDicomFichierDelegate == null)) {
                this.onBeginGetAllDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginGetAllDicomFichier);
            }
            if ((this.onEndGetAllDicomFichierDelegate == null)) {
                this.onEndGetAllDicomFichierDelegate = new EndOperationDelegate(this.OnEndGetAllDicomFichier);
            }
            if ((this.onGetAllDicomFichierCompletedDelegate == null)) {
                this.onGetAllDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDicomFichierDelegate, null, this.onEndGetAllDicomFichierDelegate, this.onGetAllDicomFichierCompletedDelegate, userState);
        }
        
        public void InsertDicomFichier(Medicus.SVC.DicomFichier obj) {
            base.Channel.InsertDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDicomFichier(System.IAsyncResult result) {
            base.Channel.EndInsertDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginInsertDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DicomFichier obj = ((Medicus.SVC.DicomFichier)(inValues[0]));
            return this.BeginInsertDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDicomFichier(System.IAsyncResult result) {
            this.EndInsertDicomFichier(result);
            return null;
        }
        
        private void OnInsertDicomFichierCompleted(object state) {
            if ((this.InsertDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDicomFichierAsync(Medicus.SVC.DicomFichier obj) {
            this.InsertDicomFichierAsync(obj, null);
        }
        
        public void InsertDicomFichierAsync(Medicus.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginInsertDicomFichierDelegate == null)) {
                this.onBeginInsertDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginInsertDicomFichier);
            }
            if ((this.onEndInsertDicomFichierDelegate == null)) {
                this.onEndInsertDicomFichierDelegate = new EndOperationDelegate(this.OnEndInsertDicomFichier);
            }
            if ((this.onInsertDicomFichierCompletedDelegate == null)) {
                this.onInsertDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDicomFichierDelegate, new object[] {
                        obj}, this.onEndInsertDicomFichierDelegate, this.onInsertDicomFichierCompletedDelegate, userState);
        }
        
        public void UpdateDicomFichier(Medicus.SVC.DicomFichier obj) {
            base.Channel.UpdateDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDicomFichier(System.IAsyncResult result) {
            base.Channel.EndUpdateDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DicomFichier obj = ((Medicus.SVC.DicomFichier)(inValues[0]));
            return this.BeginUpdateDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDicomFichier(System.IAsyncResult result) {
            this.EndUpdateDicomFichier(result);
            return null;
        }
        
        private void OnUpdateDicomFichierCompleted(object state) {
            if ((this.UpdateDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDicomFichierAsync(Medicus.SVC.DicomFichier obj) {
            this.UpdateDicomFichierAsync(obj, null);
        }
        
        public void UpdateDicomFichierAsync(Medicus.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginUpdateDicomFichierDelegate == null)) {
                this.onBeginUpdateDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginUpdateDicomFichier);
            }
            if ((this.onEndUpdateDicomFichierDelegate == null)) {
                this.onEndUpdateDicomFichierDelegate = new EndOperationDelegate(this.OnEndUpdateDicomFichier);
            }
            if ((this.onUpdateDicomFichierCompletedDelegate == null)) {
                this.onUpdateDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDicomFichierDelegate, new object[] {
                        obj}, this.onEndUpdateDicomFichierDelegate, this.onUpdateDicomFichierCompletedDelegate, userState);
        }
        
        public void DeleteDicomFichier(Medicus.SVC.DicomFichier obj) {
            base.Channel.DeleteDicomFichier(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDicomFichier(Medicus.SVC.DicomFichier obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDicomFichier(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDicomFichier(System.IAsyncResult result) {
            base.Channel.EndDeleteDicomFichier(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDicomFichier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.DicomFichier obj = ((Medicus.SVC.DicomFichier)(inValues[0]));
            return this.BeginDeleteDicomFichier(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDicomFichier(System.IAsyncResult result) {
            this.EndDeleteDicomFichier(result);
            return null;
        }
        
        private void OnDeleteDicomFichierCompleted(object state) {
            if ((this.DeleteDicomFichierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDicomFichierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDicomFichierAsync(Medicus.SVC.DicomFichier obj) {
            this.DeleteDicomFichierAsync(obj, null);
        }
        
        public void DeleteDicomFichierAsync(Medicus.SVC.DicomFichier obj, object userState) {
            if ((this.onBeginDeleteDicomFichierDelegate == null)) {
                this.onBeginDeleteDicomFichierDelegate = new BeginOperationDelegate(this.OnBeginDeleteDicomFichier);
            }
            if ((this.onEndDeleteDicomFichierDelegate == null)) {
                this.onEndDeleteDicomFichierDelegate = new EndOperationDelegate(this.OnEndDeleteDicomFichier);
            }
            if ((this.onDeleteDicomFichierCompletedDelegate == null)) {
                this.onDeleteDicomFichierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDicomFichierCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDicomFichierDelegate, new object[] {
                        obj}, this.onEndDeleteDicomFichierDelegate, this.onDeleteDicomFichierCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ArretDetravail> GetAllArretDetravail() {
            return base.Channel.GetAllArretDetravail();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllArretDetravail(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllArretDetravail(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.ArretDetravail> EndGetAllArretDetravail(System.IAsyncResult result) {
            return base.Channel.EndGetAllArretDetravail(result);
        }
        
        private System.IAsyncResult OnBeginGetAllArretDetravail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllArretDetravail(callback, asyncState);
        }
        
        private object[] OnEndGetAllArretDetravail(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.ArretDetravail> retVal = this.EndGetAllArretDetravail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllArretDetravailCompleted(object state) {
            if ((this.GetAllArretDetravailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllArretDetravailCompleted(this, new GetAllArretDetravailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllArretDetravailAsync() {
            this.GetAllArretDetravailAsync(null);
        }
        
        public void GetAllArretDetravailAsync(object userState) {
            if ((this.onBeginGetAllArretDetravailDelegate == null)) {
                this.onBeginGetAllArretDetravailDelegate = new BeginOperationDelegate(this.OnBeginGetAllArretDetravail);
            }
            if ((this.onEndGetAllArretDetravailDelegate == null)) {
                this.onEndGetAllArretDetravailDelegate = new EndOperationDelegate(this.OnEndGetAllArretDetravail);
            }
            if ((this.onGetAllArretDetravailCompletedDelegate == null)) {
                this.onGetAllArretDetravailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllArretDetravailCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllArretDetravailDelegate, null, this.onEndGetAllArretDetravailDelegate, this.onGetAllArretDetravailCompletedDelegate, userState);
        }
        
        public void InsertArretDetravail(Medicus.SVC.ArretDetravail obj) {
            base.Channel.InsertArretDetravail(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertArretDetravail(Medicus.SVC.ArretDetravail obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertArretDetravail(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertArretDetravail(System.IAsyncResult result) {
            base.Channel.EndInsertArretDetravail(result);
        }
        
        private System.IAsyncResult OnBeginInsertArretDetravail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ArretDetravail obj = ((Medicus.SVC.ArretDetravail)(inValues[0]));
            return this.BeginInsertArretDetravail(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertArretDetravail(System.IAsyncResult result) {
            this.EndInsertArretDetravail(result);
            return null;
        }
        
        private void OnInsertArretDetravailCompleted(object state) {
            if ((this.InsertArretDetravailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertArretDetravailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertArretDetravailAsync(Medicus.SVC.ArretDetravail obj) {
            this.InsertArretDetravailAsync(obj, null);
        }
        
        public void InsertArretDetravailAsync(Medicus.SVC.ArretDetravail obj, object userState) {
            if ((this.onBeginInsertArretDetravailDelegate == null)) {
                this.onBeginInsertArretDetravailDelegate = new BeginOperationDelegate(this.OnBeginInsertArretDetravail);
            }
            if ((this.onEndInsertArretDetravailDelegate == null)) {
                this.onEndInsertArretDetravailDelegate = new EndOperationDelegate(this.OnEndInsertArretDetravail);
            }
            if ((this.onInsertArretDetravailCompletedDelegate == null)) {
                this.onInsertArretDetravailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertArretDetravailCompleted);
            }
            base.InvokeAsync(this.onBeginInsertArretDetravailDelegate, new object[] {
                        obj}, this.onEndInsertArretDetravailDelegate, this.onInsertArretDetravailCompletedDelegate, userState);
        }
        
        public void DeleteArretDetravail(Medicus.SVC.ArretDetravail obj) {
            base.Channel.DeleteArretDetravail(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteArretDetravail(Medicus.SVC.ArretDetravail obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteArretDetravail(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteArretDetravail(System.IAsyncResult result) {
            base.Channel.EndDeleteArretDetravail(result);
        }
        
        private System.IAsyncResult OnBeginDeleteArretDetravail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ArretDetravail obj = ((Medicus.SVC.ArretDetravail)(inValues[0]));
            return this.BeginDeleteArretDetravail(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteArretDetravail(System.IAsyncResult result) {
            this.EndDeleteArretDetravail(result);
            return null;
        }
        
        private void OnDeleteArretDetravailCompleted(object state) {
            if ((this.DeleteArretDetravailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteArretDetravailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteArretDetravailAsync(Medicus.SVC.ArretDetravail obj) {
            this.DeleteArretDetravailAsync(obj, null);
        }
        
        public void DeleteArretDetravailAsync(Medicus.SVC.ArretDetravail obj, object userState) {
            if ((this.onBeginDeleteArretDetravailDelegate == null)) {
                this.onBeginDeleteArretDetravailDelegate = new BeginOperationDelegate(this.OnBeginDeleteArretDetravail);
            }
            if ((this.onEndDeleteArretDetravailDelegate == null)) {
                this.onEndDeleteArretDetravailDelegate = new EndOperationDelegate(this.OnEndDeleteArretDetravail);
            }
            if ((this.onDeleteArretDetravailCompletedDelegate == null)) {
                this.onDeleteArretDetravailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteArretDetravailCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteArretDetravailDelegate, new object[] {
                        obj}, this.onEndDeleteArretDetravailDelegate, this.onDeleteArretDetravailCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> GetAllProduitOrdonnance() {
            return base.Channel.GetAllProduitOrdonnance();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProduitOrdonnance(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProduitOrdonnance(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> EndGetAllProduitOrdonnance(System.IAsyncResult result) {
            return base.Channel.EndGetAllProduitOrdonnance(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProduitOrdonnance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllProduitOrdonnance(callback, asyncState);
        }
        
        private object[] OnEndGetAllProduitOrdonnance(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.ProduitOrdonnance> retVal = this.EndGetAllProduitOrdonnance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProduitOrdonnanceCompleted(object state) {
            if ((this.GetAllProduitOrdonnanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProduitOrdonnanceCompleted(this, new GetAllProduitOrdonnanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProduitOrdonnanceAsync() {
            this.GetAllProduitOrdonnanceAsync(null);
        }
        
        public void GetAllProduitOrdonnanceAsync(object userState) {
            if ((this.onBeginGetAllProduitOrdonnanceDelegate == null)) {
                this.onBeginGetAllProduitOrdonnanceDelegate = new BeginOperationDelegate(this.OnBeginGetAllProduitOrdonnance);
            }
            if ((this.onEndGetAllProduitOrdonnanceDelegate == null)) {
                this.onEndGetAllProduitOrdonnanceDelegate = new EndOperationDelegate(this.OnEndGetAllProduitOrdonnance);
            }
            if ((this.onGetAllProduitOrdonnanceCompletedDelegate == null)) {
                this.onGetAllProduitOrdonnanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProduitOrdonnanceCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProduitOrdonnanceDelegate, null, this.onEndGetAllProduitOrdonnanceDelegate, this.onGetAllProduitOrdonnanceCompletedDelegate, userState);
        }
        
        public void InsertProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj) {
            base.Channel.InsertProduitOrdonnance(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertProduitOrdonnance(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertProduitOrdonnance(System.IAsyncResult result) {
            base.Channel.EndInsertProduitOrdonnance(result);
        }
        
        private System.IAsyncResult OnBeginInsertProduitOrdonnance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ProduitOrdonnance obj = ((Medicus.SVC.ProduitOrdonnance)(inValues[0]));
            return this.BeginInsertProduitOrdonnance(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertProduitOrdonnance(System.IAsyncResult result) {
            this.EndInsertProduitOrdonnance(result);
            return null;
        }
        
        private void OnInsertProduitOrdonnanceCompleted(object state) {
            if ((this.InsertProduitOrdonnanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertProduitOrdonnanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj) {
            this.InsertProduitOrdonnanceAsync(obj, null);
        }
        
        public void InsertProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj, object userState) {
            if ((this.onBeginInsertProduitOrdonnanceDelegate == null)) {
                this.onBeginInsertProduitOrdonnanceDelegate = new BeginOperationDelegate(this.OnBeginInsertProduitOrdonnance);
            }
            if ((this.onEndInsertProduitOrdonnanceDelegate == null)) {
                this.onEndInsertProduitOrdonnanceDelegate = new EndOperationDelegate(this.OnEndInsertProduitOrdonnance);
            }
            if ((this.onInsertProduitOrdonnanceCompletedDelegate == null)) {
                this.onInsertProduitOrdonnanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertProduitOrdonnanceCompleted);
            }
            base.InvokeAsync(this.onBeginInsertProduitOrdonnanceDelegate, new object[] {
                        obj}, this.onEndInsertProduitOrdonnanceDelegate, this.onInsertProduitOrdonnanceCompletedDelegate, userState);
        }
        
        public void UpdateProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj) {
            base.Channel.UpdateProduitOrdonnance(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProduitOrdonnance(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateProduitOrdonnance(System.IAsyncResult result) {
            base.Channel.EndUpdateProduitOrdonnance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProduitOrdonnance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ProduitOrdonnance obj = ((Medicus.SVC.ProduitOrdonnance)(inValues[0]));
            return this.BeginUpdateProduitOrdonnance(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateProduitOrdonnance(System.IAsyncResult result) {
            this.EndUpdateProduitOrdonnance(result);
            return null;
        }
        
        private void OnUpdateProduitOrdonnanceCompleted(object state) {
            if ((this.UpdateProduitOrdonnanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProduitOrdonnanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj) {
            this.UpdateProduitOrdonnanceAsync(obj, null);
        }
        
        public void UpdateProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj, object userState) {
            if ((this.onBeginUpdateProduitOrdonnanceDelegate == null)) {
                this.onBeginUpdateProduitOrdonnanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateProduitOrdonnance);
            }
            if ((this.onEndUpdateProduitOrdonnanceDelegate == null)) {
                this.onEndUpdateProduitOrdonnanceDelegate = new EndOperationDelegate(this.OnEndUpdateProduitOrdonnance);
            }
            if ((this.onUpdateProduitOrdonnanceCompletedDelegate == null)) {
                this.onUpdateProduitOrdonnanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProduitOrdonnanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProduitOrdonnanceDelegate, new object[] {
                        obj}, this.onEndUpdateProduitOrdonnanceDelegate, this.onUpdateProduitOrdonnanceCompletedDelegate, userState);
        }
        
        public void DeleteProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj) {
            base.Channel.DeleteProduitOrdonnance(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteProduitOrdonnance(Medicus.SVC.ProduitOrdonnance obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProduitOrdonnance(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteProduitOrdonnance(System.IAsyncResult result) {
            base.Channel.EndDeleteProduitOrdonnance(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProduitOrdonnance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ProduitOrdonnance obj = ((Medicus.SVC.ProduitOrdonnance)(inValues[0]));
            return this.BeginDeleteProduitOrdonnance(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteProduitOrdonnance(System.IAsyncResult result) {
            this.EndDeleteProduitOrdonnance(result);
            return null;
        }
        
        private void OnDeleteProduitOrdonnanceCompleted(object state) {
            if ((this.DeleteProduitOrdonnanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProduitOrdonnanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj) {
            this.DeleteProduitOrdonnanceAsync(obj, null);
        }
        
        public void DeleteProduitOrdonnanceAsync(Medicus.SVC.ProduitOrdonnance obj, object userState) {
            if ((this.onBeginDeleteProduitOrdonnanceDelegate == null)) {
                this.onBeginDeleteProduitOrdonnanceDelegate = new BeginOperationDelegate(this.OnBeginDeleteProduitOrdonnance);
            }
            if ((this.onEndDeleteProduitOrdonnanceDelegate == null)) {
                this.onEndDeleteProduitOrdonnanceDelegate = new EndOperationDelegate(this.OnEndDeleteProduitOrdonnance);
            }
            if ((this.onDeleteProduitOrdonnanceCompletedDelegate == null)) {
                this.onDeleteProduitOrdonnanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProduitOrdonnanceCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProduitOrdonnanceDelegate, new object[] {
                        obj}, this.onEndDeleteProduitOrdonnanceDelegate, this.onDeleteProduitOrdonnanceCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Dci> GetAllDci() {
            return base.Channel.GetAllDci();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDci(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDci(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Dci> EndGetAllDci(System.IAsyncResult result) {
            return base.Channel.EndGetAllDci(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDci(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDci(callback, asyncState);
        }
        
        private object[] OnEndGetAllDci(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Dci> retVal = this.EndGetAllDci(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDciCompleted(object state) {
            if ((this.GetAllDciCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDciCompleted(this, new GetAllDciCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDciAsync() {
            this.GetAllDciAsync(null);
        }
        
        public void GetAllDciAsync(object userState) {
            if ((this.onBeginGetAllDciDelegate == null)) {
                this.onBeginGetAllDciDelegate = new BeginOperationDelegate(this.OnBeginGetAllDci);
            }
            if ((this.onEndGetAllDciDelegate == null)) {
                this.onEndGetAllDciDelegate = new EndOperationDelegate(this.OnEndGetAllDci);
            }
            if ((this.onGetAllDciCompletedDelegate == null)) {
                this.onGetAllDciCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDciCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDciDelegate, null, this.onEndGetAllDciDelegate, this.onGetAllDciCompletedDelegate, userState);
        }
        
        public void InsertDci(Medicus.SVC.Dci obj) {
            base.Channel.InsertDci(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDci(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDci(System.IAsyncResult result) {
            base.Channel.EndInsertDci(result);
        }
        
        private System.IAsyncResult OnBeginInsertDci(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dci obj = ((Medicus.SVC.Dci)(inValues[0]));
            return this.BeginInsertDci(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDci(System.IAsyncResult result) {
            this.EndInsertDci(result);
            return null;
        }
        
        private void OnInsertDciCompleted(object state) {
            if ((this.InsertDciCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDciCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDciAsync(Medicus.SVC.Dci obj) {
            this.InsertDciAsync(obj, null);
        }
        
        public void InsertDciAsync(Medicus.SVC.Dci obj, object userState) {
            if ((this.onBeginInsertDciDelegate == null)) {
                this.onBeginInsertDciDelegate = new BeginOperationDelegate(this.OnBeginInsertDci);
            }
            if ((this.onEndInsertDciDelegate == null)) {
                this.onEndInsertDciDelegate = new EndOperationDelegate(this.OnEndInsertDci);
            }
            if ((this.onInsertDciCompletedDelegate == null)) {
                this.onInsertDciCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDciCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDciDelegate, new object[] {
                        obj}, this.onEndInsertDciDelegate, this.onInsertDciCompletedDelegate, userState);
        }
        
        public void UpdateDci(Medicus.SVC.Dci obj) {
            base.Channel.UpdateDci(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDci(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDci(System.IAsyncResult result) {
            base.Channel.EndUpdateDci(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDci(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dci obj = ((Medicus.SVC.Dci)(inValues[0]));
            return this.BeginUpdateDci(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDci(System.IAsyncResult result) {
            this.EndUpdateDci(result);
            return null;
        }
        
        private void OnUpdateDciCompleted(object state) {
            if ((this.UpdateDciCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDciCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDciAsync(Medicus.SVC.Dci obj) {
            this.UpdateDciAsync(obj, null);
        }
        
        public void UpdateDciAsync(Medicus.SVC.Dci obj, object userState) {
            if ((this.onBeginUpdateDciDelegate == null)) {
                this.onBeginUpdateDciDelegate = new BeginOperationDelegate(this.OnBeginUpdateDci);
            }
            if ((this.onEndUpdateDciDelegate == null)) {
                this.onEndUpdateDciDelegate = new EndOperationDelegate(this.OnEndUpdateDci);
            }
            if ((this.onUpdateDciCompletedDelegate == null)) {
                this.onUpdateDciCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDciCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDciDelegate, new object[] {
                        obj}, this.onEndUpdateDciDelegate, this.onUpdateDciCompletedDelegate, userState);
        }
        
        public void DeletDci(Medicus.SVC.Dci obj) {
            base.Channel.DeletDci(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletDci(Medicus.SVC.Dci obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletDci(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletDci(System.IAsyncResult result) {
            base.Channel.EndDeletDci(result);
        }
        
        private System.IAsyncResult OnBeginDeletDci(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Dci obj = ((Medicus.SVC.Dci)(inValues[0]));
            return this.BeginDeletDci(obj, callback, asyncState);
        }
        
        private object[] OnEndDeletDci(System.IAsyncResult result) {
            this.EndDeletDci(result);
            return null;
        }
        
        private void OnDeletDciCompleted(object state) {
            if ((this.DeletDciCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletDciCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletDciAsync(Medicus.SVC.Dci obj) {
            this.DeletDciAsync(obj, null);
        }
        
        public void DeletDciAsync(Medicus.SVC.Dci obj, object userState) {
            if ((this.onBeginDeletDciDelegate == null)) {
                this.onBeginDeletDciDelegate = new BeginOperationDelegate(this.OnBeginDeletDci);
            }
            if ((this.onEndDeletDciDelegate == null)) {
                this.onEndDeletDciDelegate = new EndOperationDelegate(this.OnEndDeletDci);
            }
            if ((this.onDeletDciCompletedDelegate == null)) {
                this.onDeletDciCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletDciCompleted);
            }
            base.InvokeAsync(this.onBeginDeletDciDelegate, new object[] {
                        obj}, this.onEndDeletDciDelegate, this.onDeletDciCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Depense> GetAllDepense() {
            return base.Channel.GetAllDepense();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDepense(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDepense(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Depense> EndGetAllDepense(System.IAsyncResult result) {
            return base.Channel.EndGetAllDepense(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDepense(callback, asyncState);
        }
        
        private object[] OnEndGetAllDepense(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Depense> retVal = this.EndGetAllDepense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepenseCompleted(object state) {
            if ((this.GetAllDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepenseCompleted(this, new GetAllDepenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepenseAsync() {
            this.GetAllDepenseAsync(null);
        }
        
        public void GetAllDepenseAsync(object userState) {
            if ((this.onBeginGetAllDepenseDelegate == null)) {
                this.onBeginGetAllDepenseDelegate = new BeginOperationDelegate(this.OnBeginGetAllDepense);
            }
            if ((this.onEndGetAllDepenseDelegate == null)) {
                this.onEndGetAllDepenseDelegate = new EndOperationDelegate(this.OnEndGetAllDepense);
            }
            if ((this.onGetAllDepenseCompletedDelegate == null)) {
                this.onGetAllDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepenseDelegate, null, this.onEndGetAllDepenseDelegate, this.onGetAllDepenseCompletedDelegate, userState);
        }
        
        public void InsertDepense(Medicus.SVC.Depense obj) {
            base.Channel.InsertDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertDepense(System.IAsyncResult result) {
            base.Channel.EndInsertDepense(result);
        }
        
        private System.IAsyncResult OnBeginInsertDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depense obj = ((Medicus.SVC.Depense)(inValues[0]));
            return this.BeginInsertDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertDepense(System.IAsyncResult result) {
            this.EndInsertDepense(result);
            return null;
        }
        
        private void OnInsertDepenseCompleted(object state) {
            if ((this.InsertDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDepenseAsync(Medicus.SVC.Depense obj) {
            this.InsertDepenseAsync(obj, null);
        }
        
        public void InsertDepenseAsync(Medicus.SVC.Depense obj, object userState) {
            if ((this.onBeginInsertDepenseDelegate == null)) {
                this.onBeginInsertDepenseDelegate = new BeginOperationDelegate(this.OnBeginInsertDepense);
            }
            if ((this.onEndInsertDepenseDelegate == null)) {
                this.onEndInsertDepenseDelegate = new EndOperationDelegate(this.OnEndInsertDepense);
            }
            if ((this.onInsertDepenseCompletedDelegate == null)) {
                this.onInsertDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDepenseDelegate, new object[] {
                        obj}, this.onEndInsertDepenseDelegate, this.onInsertDepenseCompletedDelegate, userState);
        }
        
        public void UpdateDepense(Medicus.SVC.Depense obj) {
            base.Channel.UpdateDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDepense(System.IAsyncResult result) {
            base.Channel.EndUpdateDepense(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depense obj = ((Medicus.SVC.Depense)(inValues[0]));
            return this.BeginUpdateDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepense(System.IAsyncResult result) {
            this.EndUpdateDepense(result);
            return null;
        }
        
        private void OnUpdateDepenseCompleted(object state) {
            if ((this.UpdateDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepenseAsync(Medicus.SVC.Depense obj) {
            this.UpdateDepenseAsync(obj, null);
        }
        
        public void UpdateDepenseAsync(Medicus.SVC.Depense obj, object userState) {
            if ((this.onBeginUpdateDepenseDelegate == null)) {
                this.onBeginUpdateDepenseDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepense);
            }
            if ((this.onEndUpdateDepenseDelegate == null)) {
                this.onEndUpdateDepenseDelegate = new EndOperationDelegate(this.OnEndUpdateDepense);
            }
            if ((this.onUpdateDepenseCompletedDelegate == null)) {
                this.onUpdateDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepenseDelegate, new object[] {
                        obj}, this.onEndUpdateDepenseDelegate, this.onUpdateDepenseCompletedDelegate, userState);
        }
        
        public void DeleteDepense(Medicus.SVC.Depense obj) {
            base.Channel.DeleteDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDepense(Medicus.SVC.Depense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDepense(System.IAsyncResult result) {
            base.Channel.EndDeleteDepense(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Depense obj = ((Medicus.SVC.Depense)(inValues[0]));
            return this.BeginDeleteDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteDepense(System.IAsyncResult result) {
            this.EndDeleteDepense(result);
            return null;
        }
        
        private void OnDeleteDepenseCompleted(object state) {
            if ((this.DeleteDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDepenseAsync(Medicus.SVC.Depense obj) {
            this.DeleteDepenseAsync(obj, null);
        }
        
        public void DeleteDepenseAsync(Medicus.SVC.Depense obj, object userState) {
            if ((this.onBeginDeleteDepenseDelegate == null)) {
                this.onBeginDeleteDepenseDelegate = new BeginOperationDelegate(this.OnBeginDeleteDepense);
            }
            if ((this.onEndDeleteDepenseDelegate == null)) {
                this.onEndDeleteDepenseDelegate = new EndOperationDelegate(this.OnEndDeleteDepense);
            }
            if ((this.onDeleteDepenseCompletedDelegate == null)) {
                this.onDeleteDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDepenseDelegate, new object[] {
                        obj}, this.onEndDeleteDepenseDelegate, this.onDeleteDepenseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.MotifDepense> GetAllMotifDepense() {
            return base.Channel.GetAllMotifDepense();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMotifDepense(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMotifDepense(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.MotifDepense> EndGetAllMotifDepense(System.IAsyncResult result) {
            return base.Channel.EndGetAllMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMotifDepense(callback, asyncState);
        }
        
        private object[] OnEndGetAllMotifDepense(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.MotifDepense> retVal = this.EndGetAllMotifDepense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMotifDepenseCompleted(object state) {
            if ((this.GetAllMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMotifDepenseCompleted(this, new GetAllMotifDepenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMotifDepenseAsync() {
            this.GetAllMotifDepenseAsync(null);
        }
        
        public void GetAllMotifDepenseAsync(object userState) {
            if ((this.onBeginGetAllMotifDepenseDelegate == null)) {
                this.onBeginGetAllMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginGetAllMotifDepense);
            }
            if ((this.onEndGetAllMotifDepenseDelegate == null)) {
                this.onEndGetAllMotifDepenseDelegate = new EndOperationDelegate(this.OnEndGetAllMotifDepense);
            }
            if ((this.onGetAllMotifDepenseCompletedDelegate == null)) {
                this.onGetAllMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMotifDepenseDelegate, null, this.onEndGetAllMotifDepenseDelegate, this.onGetAllMotifDepenseCompletedDelegate, userState);
        }
        
        public void InsertMotifDepense(Medicus.SVC.MotifDepense obj) {
            base.Channel.InsertMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMotifDepense(System.IAsyncResult result) {
            base.Channel.EndInsertMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginInsertMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifDepense obj = ((Medicus.SVC.MotifDepense)(inValues[0]));
            return this.BeginInsertMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMotifDepense(System.IAsyncResult result) {
            this.EndInsertMotifDepense(result);
            return null;
        }
        
        private void OnInsertMotifDepenseCompleted(object state) {
            if ((this.InsertMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMotifDepenseAsync(Medicus.SVC.MotifDepense obj) {
            this.InsertMotifDepenseAsync(obj, null);
        }
        
        public void InsertMotifDepenseAsync(Medicus.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginInsertMotifDepenseDelegate == null)) {
                this.onBeginInsertMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginInsertMotifDepense);
            }
            if ((this.onEndInsertMotifDepenseDelegate == null)) {
                this.onEndInsertMotifDepenseDelegate = new EndOperationDelegate(this.OnEndInsertMotifDepense);
            }
            if ((this.onInsertMotifDepenseCompletedDelegate == null)) {
                this.onInsertMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMotifDepenseDelegate, new object[] {
                        obj}, this.onEndInsertMotifDepenseDelegate, this.onInsertMotifDepenseCompletedDelegate, userState);
        }
        
        public void UpdateMotifDepense(Medicus.SVC.MotifDepense obj) {
            base.Channel.UpdateMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMotifDepense(System.IAsyncResult result) {
            base.Channel.EndUpdateMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifDepense obj = ((Medicus.SVC.MotifDepense)(inValues[0]));
            return this.BeginUpdateMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMotifDepense(System.IAsyncResult result) {
            this.EndUpdateMotifDepense(result);
            return null;
        }
        
        private void OnUpdateMotifDepenseCompleted(object state) {
            if ((this.UpdateMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMotifDepenseAsync(Medicus.SVC.MotifDepense obj) {
            this.UpdateMotifDepenseAsync(obj, null);
        }
        
        public void UpdateMotifDepenseAsync(Medicus.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginUpdateMotifDepenseDelegate == null)) {
                this.onBeginUpdateMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginUpdateMotifDepense);
            }
            if ((this.onEndUpdateMotifDepenseDelegate == null)) {
                this.onEndUpdateMotifDepenseDelegate = new EndOperationDelegate(this.OnEndUpdateMotifDepense);
            }
            if ((this.onUpdateMotifDepenseCompletedDelegate == null)) {
                this.onUpdateMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMotifDepenseDelegate, new object[] {
                        obj}, this.onEndUpdateMotifDepenseDelegate, this.onUpdateMotifDepenseCompletedDelegate, userState);
        }
        
        public void DeleteMotifDepense(Medicus.SVC.MotifDepense obj) {
            base.Channel.DeleteMotifDepense(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMotifDepense(Medicus.SVC.MotifDepense obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMotifDepense(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMotifDepense(System.IAsyncResult result) {
            base.Channel.EndDeleteMotifDepense(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMotifDepense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifDepense obj = ((Medicus.SVC.MotifDepense)(inValues[0]));
            return this.BeginDeleteMotifDepense(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMotifDepense(System.IAsyncResult result) {
            this.EndDeleteMotifDepense(result);
            return null;
        }
        
        private void OnDeleteMotifDepenseCompleted(object state) {
            if ((this.DeleteMotifDepenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMotifDepenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMotifDepenseAsync(Medicus.SVC.MotifDepense obj) {
            this.DeleteMotifDepenseAsync(obj, null);
        }
        
        public void DeleteMotifDepenseAsync(Medicus.SVC.MotifDepense obj, object userState) {
            if ((this.onBeginDeleteMotifDepenseDelegate == null)) {
                this.onBeginDeleteMotifDepenseDelegate = new BeginOperationDelegate(this.OnBeginDeleteMotifDepense);
            }
            if ((this.onEndDeleteMotifDepenseDelegate == null)) {
                this.onEndDeleteMotifDepenseDelegate = new EndOperationDelegate(this.OnEndDeleteMotifDepense);
            }
            if ((this.onDeleteMotifDepenseCompletedDelegate == null)) {
                this.onDeleteMotifDepenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMotifDepenseCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMotifDepenseDelegate, new object[] {
                        obj}, this.onEndDeleteMotifDepenseDelegate, this.onDeleteMotifDepenseCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> GetAllSalleDattente(System.DateTime Date1, System.DateTime Date2) {
            return base.Channel.GetAllSalleDattente(Date1, Date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSalleDattente(System.DateTime Date1, System.DateTime Date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSalleDattente(Date1, Date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> EndGetAllSalleDattente(System.IAsyncResult result) {
            return base.Channel.EndGetAllSalleDattente(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSalleDattente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime Date1 = ((System.DateTime)(inValues[0]));
            System.DateTime Date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllSalleDattente(Date1, Date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllSalleDattente(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.SalleDattente> retVal = this.EndGetAllSalleDattente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSalleDattenteCompleted(object state) {
            if ((this.GetAllSalleDattenteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSalleDattenteCompleted(this, new GetAllSalleDattenteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSalleDattenteAsync(System.DateTime Date1, System.DateTime Date2) {
            this.GetAllSalleDattenteAsync(Date1, Date2, null);
        }
        
        public void GetAllSalleDattenteAsync(System.DateTime Date1, System.DateTime Date2, object userState) {
            if ((this.onBeginGetAllSalleDattenteDelegate == null)) {
                this.onBeginGetAllSalleDattenteDelegate = new BeginOperationDelegate(this.OnBeginGetAllSalleDattente);
            }
            if ((this.onEndGetAllSalleDattenteDelegate == null)) {
                this.onEndGetAllSalleDattenteDelegate = new EndOperationDelegate(this.OnEndGetAllSalleDattente);
            }
            if ((this.onGetAllSalleDattenteCompletedDelegate == null)) {
                this.onGetAllSalleDattenteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSalleDattenteCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSalleDattenteDelegate, new object[] {
                        Date1,
                        Date2}, this.onEndGetAllSalleDattenteDelegate, this.onGetAllSalleDattenteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> GetAllSalleDattenteALL() {
            return base.Channel.GetAllSalleDattenteALL();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSalleDattenteALL(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSalleDattenteALL(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.SalleDattente> EndGetAllSalleDattenteALL(System.IAsyncResult result) {
            return base.Channel.EndGetAllSalleDattenteALL(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSalleDattenteALL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllSalleDattenteALL(callback, asyncState);
        }
        
        private object[] OnEndGetAllSalleDattenteALL(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.SalleDattente> retVal = this.EndGetAllSalleDattenteALL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSalleDattenteALLCompleted(object state) {
            if ((this.GetAllSalleDattenteALLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSalleDattenteALLCompleted(this, new GetAllSalleDattenteALLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSalleDattenteALLAsync() {
            this.GetAllSalleDattenteALLAsync(null);
        }
        
        public void GetAllSalleDattenteALLAsync(object userState) {
            if ((this.onBeginGetAllSalleDattenteALLDelegate == null)) {
                this.onBeginGetAllSalleDattenteALLDelegate = new BeginOperationDelegate(this.OnBeginGetAllSalleDattenteALL);
            }
            if ((this.onEndGetAllSalleDattenteALLDelegate == null)) {
                this.onEndGetAllSalleDattenteALLDelegate = new EndOperationDelegate(this.OnEndGetAllSalleDattenteALL);
            }
            if ((this.onGetAllSalleDattenteALLCompletedDelegate == null)) {
                this.onGetAllSalleDattenteALLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSalleDattenteALLCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSalleDattenteALLDelegate, null, this.onEndGetAllSalleDattenteALLDelegate, this.onGetAllSalleDattenteALLCompletedDelegate, userState);
        }
        
        public void InsertSalleDatente(Medicus.SVC.SalleDattente obj) {
            base.Channel.InsertSalleDatente(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertSalleDatente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertSalleDatente(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertSalleDatente(System.IAsyncResult result) {
            base.Channel.EndInsertSalleDatente(result);
        }
        
        private System.IAsyncResult OnBeginInsertSalleDatente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.SalleDattente obj = ((Medicus.SVC.SalleDattente)(inValues[0]));
            return this.BeginInsertSalleDatente(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertSalleDatente(System.IAsyncResult result) {
            this.EndInsertSalleDatente(result);
            return null;
        }
        
        private void OnInsertSalleDatenteCompleted(object state) {
            if ((this.InsertSalleDatenteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertSalleDatenteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertSalleDatenteAsync(Medicus.SVC.SalleDattente obj) {
            this.InsertSalleDatenteAsync(obj, null);
        }
        
        public void InsertSalleDatenteAsync(Medicus.SVC.SalleDattente obj, object userState) {
            if ((this.onBeginInsertSalleDatenteDelegate == null)) {
                this.onBeginInsertSalleDatenteDelegate = new BeginOperationDelegate(this.OnBeginInsertSalleDatente);
            }
            if ((this.onEndInsertSalleDatenteDelegate == null)) {
                this.onEndInsertSalleDatenteDelegate = new EndOperationDelegate(this.OnEndInsertSalleDatente);
            }
            if ((this.onInsertSalleDatenteCompletedDelegate == null)) {
                this.onInsertSalleDatenteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertSalleDatenteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertSalleDatenteDelegate, new object[] {
                        obj}, this.onEndInsertSalleDatenteDelegate, this.onInsertSalleDatenteCompletedDelegate, userState);
        }
        
        public void UpdateSalleDattente(Medicus.SVC.SalleDattente obj) {
            base.Channel.UpdateSalleDattente(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSalleDattente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSalleDattente(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSalleDattente(System.IAsyncResult result) {
            base.Channel.EndUpdateSalleDattente(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSalleDattente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.SalleDattente obj = ((Medicus.SVC.SalleDattente)(inValues[0]));
            return this.BeginUpdateSalleDattente(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateSalleDattente(System.IAsyncResult result) {
            this.EndUpdateSalleDattente(result);
            return null;
        }
        
        private void OnUpdateSalleDattenteCompleted(object state) {
            if ((this.UpdateSalleDattenteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSalleDattenteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSalleDattenteAsync(Medicus.SVC.SalleDattente obj) {
            this.UpdateSalleDattenteAsync(obj, null);
        }
        
        public void UpdateSalleDattenteAsync(Medicus.SVC.SalleDattente obj, object userState) {
            if ((this.onBeginUpdateSalleDattenteDelegate == null)) {
                this.onBeginUpdateSalleDattenteDelegate = new BeginOperationDelegate(this.OnBeginUpdateSalleDattente);
            }
            if ((this.onEndUpdateSalleDattenteDelegate == null)) {
                this.onEndUpdateSalleDattenteDelegate = new EndOperationDelegate(this.OnEndUpdateSalleDattente);
            }
            if ((this.onUpdateSalleDattenteCompletedDelegate == null)) {
                this.onUpdateSalleDattenteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSalleDattenteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSalleDattenteDelegate, new object[] {
                        obj}, this.onEndUpdateSalleDattenteDelegate, this.onUpdateSalleDattenteCompletedDelegate, userState);
        }
        
        public void DeleteSalleDattente(Medicus.SVC.SalleDattente obj) {
            base.Channel.DeleteSalleDattente(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSalleDattente(Medicus.SVC.SalleDattente obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSalleDattente(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSalleDattente(System.IAsyncResult result) {
            base.Channel.EndDeleteSalleDattente(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSalleDattente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.SalleDattente obj = ((Medicus.SVC.SalleDattente)(inValues[0]));
            return this.BeginDeleteSalleDattente(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteSalleDattente(System.IAsyncResult result) {
            this.EndDeleteSalleDattente(result);
            return null;
        }
        
        private void OnDeleteSalleDattenteCompleted(object state) {
            if ((this.DeleteSalleDattenteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSalleDattenteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSalleDattenteAsync(Medicus.SVC.SalleDattente obj) {
            this.DeleteSalleDattenteAsync(obj, null);
        }
        
        public void DeleteSalleDattenteAsync(Medicus.SVC.SalleDattente obj, object userState) {
            if ((this.onBeginDeleteSalleDattenteDelegate == null)) {
                this.onBeginDeleteSalleDattenteDelegate = new BeginOperationDelegate(this.OnBeginDeleteSalleDattente);
            }
            if ((this.onEndDeleteSalleDattenteDelegate == null)) {
                this.onEndDeleteSalleDattenteDelegate = new EndOperationDelegate(this.OnEndDeleteSalleDattente);
            }
            if ((this.onDeleteSalleDattenteCompletedDelegate == null)) {
                this.onDeleteSalleDattenteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSalleDattenteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSalleDattenteDelegate, new object[] {
                        obj}, this.onEndDeleteSalleDattenteDelegate, this.onDeleteSalleDattenteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.TypeCa> GetAllTypeCas() {
            return base.Channel.GetAllTypeCas();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTypeCas(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTypeCas(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.TypeCa> EndGetAllTypeCas(System.IAsyncResult result) {
            return base.Channel.EndGetAllTypeCas(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTypeCas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTypeCas(callback, asyncState);
        }
        
        private object[] OnEndGetAllTypeCas(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.TypeCa> retVal = this.EndGetAllTypeCas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTypeCasCompleted(object state) {
            if ((this.GetAllTypeCasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTypeCasCompleted(this, new GetAllTypeCasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTypeCasAsync() {
            this.GetAllTypeCasAsync(null);
        }
        
        public void GetAllTypeCasAsync(object userState) {
            if ((this.onBeginGetAllTypeCasDelegate == null)) {
                this.onBeginGetAllTypeCasDelegate = new BeginOperationDelegate(this.OnBeginGetAllTypeCas);
            }
            if ((this.onEndGetAllTypeCasDelegate == null)) {
                this.onEndGetAllTypeCasDelegate = new EndOperationDelegate(this.OnEndGetAllTypeCas);
            }
            if ((this.onGetAllTypeCasCompletedDelegate == null)) {
                this.onGetAllTypeCasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTypeCasCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTypeCasDelegate, null, this.onEndGetAllTypeCasDelegate, this.onGetAllTypeCasCompletedDelegate, userState);
        }
        
        public void InsertTypeCas(Medicus.SVC.TypeCa obj) {
            base.Channel.InsertTypeCas(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertTypeCas(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertTypeCas(System.IAsyncResult result) {
            base.Channel.EndInsertTypeCas(result);
        }
        
        private System.IAsyncResult OnBeginInsertTypeCas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.TypeCa obj = ((Medicus.SVC.TypeCa)(inValues[0]));
            return this.BeginInsertTypeCas(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertTypeCas(System.IAsyncResult result) {
            this.EndInsertTypeCas(result);
            return null;
        }
        
        private void OnInsertTypeCasCompleted(object state) {
            if ((this.InsertTypeCasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertTypeCasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertTypeCasAsync(Medicus.SVC.TypeCa obj) {
            this.InsertTypeCasAsync(obj, null);
        }
        
        public void InsertTypeCasAsync(Medicus.SVC.TypeCa obj, object userState) {
            if ((this.onBeginInsertTypeCasDelegate == null)) {
                this.onBeginInsertTypeCasDelegate = new BeginOperationDelegate(this.OnBeginInsertTypeCas);
            }
            if ((this.onEndInsertTypeCasDelegate == null)) {
                this.onEndInsertTypeCasDelegate = new EndOperationDelegate(this.OnEndInsertTypeCas);
            }
            if ((this.onInsertTypeCasCompletedDelegate == null)) {
                this.onInsertTypeCasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertTypeCasCompleted);
            }
            base.InvokeAsync(this.onBeginInsertTypeCasDelegate, new object[] {
                        obj}, this.onEndInsertTypeCasDelegate, this.onInsertTypeCasCompletedDelegate, userState);
        }
        
        public void UpdateTypeCas(Medicus.SVC.TypeCa obj) {
            base.Channel.UpdateTypeCas(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTypeCas(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTypeCas(System.IAsyncResult result) {
            base.Channel.EndUpdateTypeCas(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTypeCas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.TypeCa obj = ((Medicus.SVC.TypeCa)(inValues[0]));
            return this.BeginUpdateTypeCas(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateTypeCas(System.IAsyncResult result) {
            this.EndUpdateTypeCas(result);
            return null;
        }
        
        private void OnUpdateTypeCasCompleted(object state) {
            if ((this.UpdateTypeCasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTypeCasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTypeCasAsync(Medicus.SVC.TypeCa obj) {
            this.UpdateTypeCasAsync(obj, null);
        }
        
        public void UpdateTypeCasAsync(Medicus.SVC.TypeCa obj, object userState) {
            if ((this.onBeginUpdateTypeCasDelegate == null)) {
                this.onBeginUpdateTypeCasDelegate = new BeginOperationDelegate(this.OnBeginUpdateTypeCas);
            }
            if ((this.onEndUpdateTypeCasDelegate == null)) {
                this.onEndUpdateTypeCasDelegate = new EndOperationDelegate(this.OnEndUpdateTypeCas);
            }
            if ((this.onUpdateTypeCasCompletedDelegate == null)) {
                this.onUpdateTypeCasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTypeCasCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTypeCasDelegate, new object[] {
                        obj}, this.onEndUpdateTypeCasDelegate, this.onUpdateTypeCasCompletedDelegate, userState);
        }
        
        public void DeleteTypeCas(Medicus.SVC.TypeCa obj) {
            base.Channel.DeleteTypeCas(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTypeCas(Medicus.SVC.TypeCa obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTypeCas(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTypeCas(System.IAsyncResult result) {
            base.Channel.EndDeleteTypeCas(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTypeCas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.TypeCa obj = ((Medicus.SVC.TypeCa)(inValues[0]));
            return this.BeginDeleteTypeCas(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteTypeCas(System.IAsyncResult result) {
            this.EndDeleteTypeCas(result);
            return null;
        }
        
        private void OnDeleteTypeCasCompleted(object state) {
            if ((this.DeleteTypeCasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTypeCasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTypeCasAsync(Medicus.SVC.TypeCa obj) {
            this.DeleteTypeCasAsync(obj, null);
        }
        
        public void DeleteTypeCasAsync(Medicus.SVC.TypeCa obj, object userState) {
            if ((this.onBeginDeleteTypeCasDelegate == null)) {
                this.onBeginDeleteTypeCasDelegate = new BeginOperationDelegate(this.OnBeginDeleteTypeCas);
            }
            if ((this.onEndDeleteTypeCasDelegate == null)) {
                this.onEndDeleteTypeCasDelegate = new EndOperationDelegate(this.OnEndDeleteTypeCas);
            }
            if ((this.onDeleteTypeCasCompletedDelegate == null)) {
                this.onDeleteTypeCasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTypeCasCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTypeCasDelegate, new object[] {
                        obj}, this.onEndDeleteTypeCasDelegate, this.onDeleteTypeCasCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Constante> GetAllConstantes() {
            return base.Channel.GetAllConstantes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllConstantes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllConstantes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Constante> EndGetAllConstantes(System.IAsyncResult result) {
            return base.Channel.EndGetAllConstantes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllConstantes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllConstantes(callback, asyncState);
        }
        
        private object[] OnEndGetAllConstantes(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Constante> retVal = this.EndGetAllConstantes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllConstantesCompleted(object state) {
            if ((this.GetAllConstantesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllConstantesCompleted(this, new GetAllConstantesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllConstantesAsync() {
            this.GetAllConstantesAsync(null);
        }
        
        public void GetAllConstantesAsync(object userState) {
            if ((this.onBeginGetAllConstantesDelegate == null)) {
                this.onBeginGetAllConstantesDelegate = new BeginOperationDelegate(this.OnBeginGetAllConstantes);
            }
            if ((this.onEndGetAllConstantesDelegate == null)) {
                this.onEndGetAllConstantesDelegate = new EndOperationDelegate(this.OnEndGetAllConstantes);
            }
            if ((this.onGetAllConstantesCompletedDelegate == null)) {
                this.onGetAllConstantesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllConstantesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllConstantesDelegate, null, this.onEndGetAllConstantesDelegate, this.onGetAllConstantesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Constante> GetAllConstantesByPatient(int codepatient) {
            return base.Channel.GetAllConstantesByPatient(codepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllConstantesByPatient(int codepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllConstantesByPatient(codepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Constante> EndGetAllConstantesByPatient(System.IAsyncResult result) {
            return base.Channel.EndGetAllConstantesByPatient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllConstantesByPatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int codepatient = ((int)(inValues[0]));
            return this.BeginGetAllConstantesByPatient(codepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllConstantesByPatient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Constante> retVal = this.EndGetAllConstantesByPatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllConstantesByPatientCompleted(object state) {
            if ((this.GetAllConstantesByPatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllConstantesByPatientCompleted(this, new GetAllConstantesByPatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllConstantesByPatientAsync(int codepatient) {
            this.GetAllConstantesByPatientAsync(codepatient, null);
        }
        
        public void GetAllConstantesByPatientAsync(int codepatient, object userState) {
            if ((this.onBeginGetAllConstantesByPatientDelegate == null)) {
                this.onBeginGetAllConstantesByPatientDelegate = new BeginOperationDelegate(this.OnBeginGetAllConstantesByPatient);
            }
            if ((this.onEndGetAllConstantesByPatientDelegate == null)) {
                this.onEndGetAllConstantesByPatientDelegate = new EndOperationDelegate(this.OnEndGetAllConstantesByPatient);
            }
            if ((this.onGetAllConstantesByPatientCompletedDelegate == null)) {
                this.onGetAllConstantesByPatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllConstantesByPatientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllConstantesByPatientDelegate, new object[] {
                        codepatient}, this.onEndGetAllConstantesByPatientDelegate, this.onGetAllConstantesByPatientCompletedDelegate, userState);
        }
        
        public void InsertConstante(Medicus.SVC.Constante obj, int code) {
            base.Channel.InsertConstante(obj, code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertConstante(obj, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertConstante(System.IAsyncResult result) {
            base.Channel.EndInsertConstante(result);
        }
        
        private System.IAsyncResult OnBeginInsertConstante(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Constante obj = ((Medicus.SVC.Constante)(inValues[0]));
            int code = ((int)(inValues[1]));
            return this.BeginInsertConstante(obj, code, callback, asyncState);
        }
        
        private object[] OnEndInsertConstante(System.IAsyncResult result) {
            this.EndInsertConstante(result);
            return null;
        }
        
        private void OnInsertConstanteCompleted(object state) {
            if ((this.InsertConstanteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertConstanteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertConstanteAsync(Medicus.SVC.Constante obj, int code) {
            this.InsertConstanteAsync(obj, code, null);
        }
        
        public void InsertConstanteAsync(Medicus.SVC.Constante obj, int code, object userState) {
            if ((this.onBeginInsertConstanteDelegate == null)) {
                this.onBeginInsertConstanteDelegate = new BeginOperationDelegate(this.OnBeginInsertConstante);
            }
            if ((this.onEndInsertConstanteDelegate == null)) {
                this.onEndInsertConstanteDelegate = new EndOperationDelegate(this.OnEndInsertConstante);
            }
            if ((this.onInsertConstanteCompletedDelegate == null)) {
                this.onInsertConstanteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertConstanteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertConstanteDelegate, new object[] {
                        obj,
                        code}, this.onEndInsertConstanteDelegate, this.onInsertConstanteCompletedDelegate, userState);
        }
        
        public void UpdateConstante(Medicus.SVC.Constante obj, int code) {
            base.Channel.UpdateConstante(obj, code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateConstante(obj, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateConstante(System.IAsyncResult result) {
            base.Channel.EndUpdateConstante(result);
        }
        
        private System.IAsyncResult OnBeginUpdateConstante(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Constante obj = ((Medicus.SVC.Constante)(inValues[0]));
            int code = ((int)(inValues[1]));
            return this.BeginUpdateConstante(obj, code, callback, asyncState);
        }
        
        private object[] OnEndUpdateConstante(System.IAsyncResult result) {
            this.EndUpdateConstante(result);
            return null;
        }
        
        private void OnUpdateConstanteCompleted(object state) {
            if ((this.UpdateConstanteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConstanteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConstanteAsync(Medicus.SVC.Constante obj, int code) {
            this.UpdateConstanteAsync(obj, code, null);
        }
        
        public void UpdateConstanteAsync(Medicus.SVC.Constante obj, int code, object userState) {
            if ((this.onBeginUpdateConstanteDelegate == null)) {
                this.onBeginUpdateConstanteDelegate = new BeginOperationDelegate(this.OnBeginUpdateConstante);
            }
            if ((this.onEndUpdateConstanteDelegate == null)) {
                this.onEndUpdateConstanteDelegate = new EndOperationDelegate(this.OnEndUpdateConstante);
            }
            if ((this.onUpdateConstanteCompletedDelegate == null)) {
                this.onUpdateConstanteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConstanteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConstanteDelegate, new object[] {
                        obj,
                        code}, this.onEndUpdateConstanteDelegate, this.onUpdateConstanteCompletedDelegate, userState);
        }
        
        public void DeleteConstante(Medicus.SVC.Constante obj, int code) {
            base.Channel.DeleteConstante(obj, code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteConstante(Medicus.SVC.Constante obj, int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteConstante(obj, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteConstante(System.IAsyncResult result) {
            base.Channel.EndDeleteConstante(result);
        }
        
        private System.IAsyncResult OnBeginDeleteConstante(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Constante obj = ((Medicus.SVC.Constante)(inValues[0]));
            int code = ((int)(inValues[1]));
            return this.BeginDeleteConstante(obj, code, callback, asyncState);
        }
        
        private object[] OnEndDeleteConstante(System.IAsyncResult result) {
            this.EndDeleteConstante(result);
            return null;
        }
        
        private void OnDeleteConstanteCompleted(object state) {
            if ((this.DeleteConstanteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteConstanteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteConstanteAsync(Medicus.SVC.Constante obj, int code) {
            this.DeleteConstanteAsync(obj, code, null);
        }
        
        public void DeleteConstanteAsync(Medicus.SVC.Constante obj, int code, object userState) {
            if ((this.onBeginDeleteConstanteDelegate == null)) {
                this.onBeginDeleteConstanteDelegate = new BeginOperationDelegate(this.OnBeginDeleteConstante);
            }
            if ((this.onEndDeleteConstanteDelegate == null)) {
                this.onEndDeleteConstanteDelegate = new EndOperationDelegate(this.OnEndDeleteConstante);
            }
            if ((this.onDeleteConstanteCompletedDelegate == null)) {
                this.onDeleteConstanteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteConstanteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteConstanteDelegate, new object[] {
                        obj,
                        code}, this.onEndDeleteConstanteDelegate, this.onDeleteConstanteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.CasTraitement> GetAllTraitement() {
            return base.Channel.GetAllTraitement();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTraitement(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTraitement(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.CasTraitement> EndGetAllTraitement(System.IAsyncResult result) {
            return base.Channel.EndGetAllTraitement(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTraitement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTraitement(callback, asyncState);
        }
        
        private object[] OnEndGetAllTraitement(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.CasTraitement> retVal = this.EndGetAllTraitement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTraitementCompleted(object state) {
            if ((this.GetAllTraitementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTraitementCompleted(this, new GetAllTraitementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTraitementAsync() {
            this.GetAllTraitementAsync(null);
        }
        
        public void GetAllTraitementAsync(object userState) {
            if ((this.onBeginGetAllTraitementDelegate == null)) {
                this.onBeginGetAllTraitementDelegate = new BeginOperationDelegate(this.OnBeginGetAllTraitement);
            }
            if ((this.onEndGetAllTraitementDelegate == null)) {
                this.onEndGetAllTraitementDelegate = new EndOperationDelegate(this.OnEndGetAllTraitement);
            }
            if ((this.onGetAllTraitementCompletedDelegate == null)) {
                this.onGetAllTraitementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTraitementCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTraitementDelegate, null, this.onEndGetAllTraitementDelegate, this.onGetAllTraitementCompletedDelegate, userState);
        }
        
        public void InsertTypeTraitement(Medicus.SVC.CasTraitement obj) {
            base.Channel.InsertTypeTraitement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertTypeTraitement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertTypeTraitement(System.IAsyncResult result) {
            base.Channel.EndInsertTypeTraitement(result);
        }
        
        private System.IAsyncResult OnBeginInsertTypeTraitement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.CasTraitement obj = ((Medicus.SVC.CasTraitement)(inValues[0]));
            return this.BeginInsertTypeTraitement(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertTypeTraitement(System.IAsyncResult result) {
            this.EndInsertTypeTraitement(result);
            return null;
        }
        
        private void OnInsertTypeTraitementCompleted(object state) {
            if ((this.InsertTypeTraitementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertTypeTraitementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertTypeTraitementAsync(Medicus.SVC.CasTraitement obj) {
            this.InsertTypeTraitementAsync(obj, null);
        }
        
        public void InsertTypeTraitementAsync(Medicus.SVC.CasTraitement obj, object userState) {
            if ((this.onBeginInsertTypeTraitementDelegate == null)) {
                this.onBeginInsertTypeTraitementDelegate = new BeginOperationDelegate(this.OnBeginInsertTypeTraitement);
            }
            if ((this.onEndInsertTypeTraitementDelegate == null)) {
                this.onEndInsertTypeTraitementDelegate = new EndOperationDelegate(this.OnEndInsertTypeTraitement);
            }
            if ((this.onInsertTypeTraitementCompletedDelegate == null)) {
                this.onInsertTypeTraitementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertTypeTraitementCompleted);
            }
            base.InvokeAsync(this.onBeginInsertTypeTraitementDelegate, new object[] {
                        obj}, this.onEndInsertTypeTraitementDelegate, this.onInsertTypeTraitementCompletedDelegate, userState);
        }
        
        public void UpdateTypeTraitement(Medicus.SVC.CasTraitement obj) {
            base.Channel.UpdateTypeTraitement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTypeTraitement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTypeTraitement(System.IAsyncResult result) {
            base.Channel.EndUpdateTypeTraitement(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTypeTraitement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.CasTraitement obj = ((Medicus.SVC.CasTraitement)(inValues[0]));
            return this.BeginUpdateTypeTraitement(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateTypeTraitement(System.IAsyncResult result) {
            this.EndUpdateTypeTraitement(result);
            return null;
        }
        
        private void OnUpdateTypeTraitementCompleted(object state) {
            if ((this.UpdateTypeTraitementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTypeTraitementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTypeTraitementAsync(Medicus.SVC.CasTraitement obj) {
            this.UpdateTypeTraitementAsync(obj, null);
        }
        
        public void UpdateTypeTraitementAsync(Medicus.SVC.CasTraitement obj, object userState) {
            if ((this.onBeginUpdateTypeTraitementDelegate == null)) {
                this.onBeginUpdateTypeTraitementDelegate = new BeginOperationDelegate(this.OnBeginUpdateTypeTraitement);
            }
            if ((this.onEndUpdateTypeTraitementDelegate == null)) {
                this.onEndUpdateTypeTraitementDelegate = new EndOperationDelegate(this.OnEndUpdateTypeTraitement);
            }
            if ((this.onUpdateTypeTraitementCompletedDelegate == null)) {
                this.onUpdateTypeTraitementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTypeTraitementCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTypeTraitementDelegate, new object[] {
                        obj}, this.onEndUpdateTypeTraitementDelegate, this.onUpdateTypeTraitementCompletedDelegate, userState);
        }
        
        public void DeleteTypeTraitement(Medicus.SVC.CasTraitement obj) {
            base.Channel.DeleteTypeTraitement(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTypeTraitement(Medicus.SVC.CasTraitement obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTypeTraitement(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteTypeTraitement(System.IAsyncResult result) {
            base.Channel.EndDeleteTypeTraitement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTypeTraitement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.CasTraitement obj = ((Medicus.SVC.CasTraitement)(inValues[0]));
            return this.BeginDeleteTypeTraitement(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteTypeTraitement(System.IAsyncResult result) {
            this.EndDeleteTypeTraitement(result);
            return null;
        }
        
        private void OnDeleteTypeTraitementCompleted(object state) {
            if ((this.DeleteTypeTraitementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTypeTraitementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTypeTraitementAsync(Medicus.SVC.CasTraitement obj) {
            this.DeleteTypeTraitementAsync(obj, null);
        }
        
        public void DeleteTypeTraitementAsync(Medicus.SVC.CasTraitement obj, object userState) {
            if ((this.onBeginDeleteTypeTraitementDelegate == null)) {
                this.onBeginDeleteTypeTraitementDelegate = new BeginOperationDelegate(this.OnBeginDeleteTypeTraitement);
            }
            if ((this.onEndDeleteTypeTraitementDelegate == null)) {
                this.onEndDeleteTypeTraitementDelegate = new EndOperationDelegate(this.OnEndDeleteTypeTraitement);
            }
            if ((this.onDeleteTypeTraitementCompletedDelegate == null)) {
                this.onDeleteTypeTraitementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTypeTraitementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTypeTraitementDelegate, new object[] {
                        obj}, this.onEndDeleteTypeTraitementDelegate, this.onDeleteTypeTraitementCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisite(System.DateTime date1, System.DateTime date2) {
            return base.Channel.GetAllVisite(date1, date2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisite(System.DateTime date1, System.DateTime date2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisite(date1, date2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisite(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisite(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date1 = ((System.DateTime)(inValues[0]));
            System.DateTime date2 = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllVisite(date1, date2, callback, asyncState);
        }
        
        private object[] OnEndGetAllVisite(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Visite> retVal = this.EndGetAllVisite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisiteCompleted(object state) {
            if ((this.GetAllVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisiteCompleted(this, new GetAllVisiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisiteAsync(System.DateTime date1, System.DateTime date2) {
            this.GetAllVisiteAsync(date1, date2, null);
        }
        
        public void GetAllVisiteAsync(System.DateTime date1, System.DateTime date2, object userState) {
            if ((this.onBeginGetAllVisiteDelegate == null)) {
                this.onBeginGetAllVisiteDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisite);
            }
            if ((this.onEndGetAllVisiteDelegate == null)) {
                this.onEndGetAllVisiteDelegate = new EndOperationDelegate(this.OnEndGetAllVisite);
            }
            if ((this.onGetAllVisiteCompletedDelegate == null)) {
                this.onGetAllVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisiteDelegate, new object[] {
                        date1,
                        date2}, this.onEndGetAllVisiteDelegate, this.onGetAllVisiteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteAll() {
            return base.Channel.GetAllVisiteAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisiteAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisiteAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteAll(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisiteAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisiteAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllVisiteAll(callback, asyncState);
        }
        
        private object[] OnEndGetAllVisiteAll(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Visite> retVal = this.EndGetAllVisiteAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisiteAllCompleted(object state) {
            if ((this.GetAllVisiteAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisiteAllCompleted(this, new GetAllVisiteAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisiteAllAsync() {
            this.GetAllVisiteAllAsync(null);
        }
        
        public void GetAllVisiteAllAsync(object userState) {
            if ((this.onBeginGetAllVisiteAllDelegate == null)) {
                this.onBeginGetAllVisiteAllDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisiteAll);
            }
            if ((this.onEndGetAllVisiteAllDelegate == null)) {
                this.onEndGetAllVisiteAllDelegate = new EndOperationDelegate(this.OnEndGetAllVisiteAll);
            }
            if ((this.onGetAllVisiteAllCompletedDelegate == null)) {
                this.onGetAllVisiteAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisiteAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisiteAllDelegate, null, this.onEndGetAllVisiteAllDelegate, this.onGetAllVisiteAllCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByVisite(int idpatient) {
            return base.Channel.GetAllVisiteByVisite(idpatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisiteByVisite(int idpatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisiteByVisite(idpatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByVisite(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisiteByVisite(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisiteByVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idpatient = ((int)(inValues[0]));
            return this.BeginGetAllVisiteByVisite(idpatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllVisiteByVisite(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Visite> retVal = this.EndGetAllVisiteByVisite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisiteByVisiteCompleted(object state) {
            if ((this.GetAllVisiteByVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisiteByVisiteCompleted(this, new GetAllVisiteByVisiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisiteByVisiteAsync(int idpatient) {
            this.GetAllVisiteByVisiteAsync(idpatient, null);
        }
        
        public void GetAllVisiteByVisiteAsync(int idpatient, object userState) {
            if ((this.onBeginGetAllVisiteByVisiteDelegate == null)) {
                this.onBeginGetAllVisiteByVisiteDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisiteByVisite);
            }
            if ((this.onEndGetAllVisiteByVisiteDelegate == null)) {
                this.onEndGetAllVisiteByVisiteDelegate = new EndOperationDelegate(this.OnEndGetAllVisiteByVisite);
            }
            if ((this.onGetAllVisiteByVisiteCompletedDelegate == null)) {
                this.onGetAllVisiteByVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisiteByVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisiteByVisiteDelegate, new object[] {
                        idpatient}, this.onEndGetAllVisiteByVisiteDelegate, this.onGetAllVisiteByVisiteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByClepatient(string clepatient) {
            return base.Channel.GetAllVisiteByClepatient(clepatient);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisiteByClepatient(string clepatient, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisiteByClepatient(clepatient, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByClepatient(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisiteByClepatient(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisiteByClepatient(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clepatient = ((string)(inValues[0]));
            return this.BeginGetAllVisiteByClepatient(clepatient, callback, asyncState);
        }
        
        private object[] OnEndGetAllVisiteByClepatient(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Visite> retVal = this.EndGetAllVisiteByClepatient(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisiteByClepatientCompleted(object state) {
            if ((this.GetAllVisiteByClepatientCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisiteByClepatientCompleted(this, new GetAllVisiteByClepatientCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisiteByClepatientAsync(string clepatient) {
            this.GetAllVisiteByClepatientAsync(clepatient, null);
        }
        
        public void GetAllVisiteByClepatientAsync(string clepatient, object userState) {
            if ((this.onBeginGetAllVisiteByClepatientDelegate == null)) {
                this.onBeginGetAllVisiteByClepatientDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisiteByClepatient);
            }
            if ((this.onEndGetAllVisiteByClepatientDelegate == null)) {
                this.onEndGetAllVisiteByClepatientDelegate = new EndOperationDelegate(this.OnEndGetAllVisiteByClepatient);
            }
            if ((this.onGetAllVisiteByClepatientCompletedDelegate == null)) {
                this.onGetAllVisiteByClepatientCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisiteByClepatientCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisiteByClepatientDelegate, new object[] {
                        clepatient}, this.onEndGetAllVisiteByClepatientDelegate, this.onGetAllVisiteByClepatientCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Visite> GetAllVisiteByVisiteMedecin(int idmedecin) {
            return base.Channel.GetAllVisiteByVisiteMedecin(idmedecin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisiteByVisiteMedecin(int idmedecin, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisiteByVisiteMedecin(idmedecin, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Visite> EndGetAllVisiteByVisiteMedecin(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisiteByVisiteMedecin(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisiteByVisiteMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idmedecin = ((int)(inValues[0]));
            return this.BeginGetAllVisiteByVisiteMedecin(idmedecin, callback, asyncState);
        }
        
        private object[] OnEndGetAllVisiteByVisiteMedecin(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Visite> retVal = this.EndGetAllVisiteByVisiteMedecin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisiteByVisiteMedecinCompleted(object state) {
            if ((this.GetAllVisiteByVisiteMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisiteByVisiteMedecinCompleted(this, new GetAllVisiteByVisiteMedecinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisiteByVisiteMedecinAsync(int idmedecin) {
            this.GetAllVisiteByVisiteMedecinAsync(idmedecin, null);
        }
        
        public void GetAllVisiteByVisiteMedecinAsync(int idmedecin, object userState) {
            if ((this.onBeginGetAllVisiteByVisiteMedecinDelegate == null)) {
                this.onBeginGetAllVisiteByVisiteMedecinDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisiteByVisiteMedecin);
            }
            if ((this.onEndGetAllVisiteByVisiteMedecinDelegate == null)) {
                this.onEndGetAllVisiteByVisiteMedecinDelegate = new EndOperationDelegate(this.OnEndGetAllVisiteByVisiteMedecin);
            }
            if ((this.onGetAllVisiteByVisiteMedecinCompletedDelegate == null)) {
                this.onGetAllVisiteByVisiteMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisiteByVisiteMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisiteByVisiteMedecinDelegate, new object[] {
                        idmedecin}, this.onEndGetAllVisiteByVisiteMedecinDelegate, this.onGetAllVisiteByVisiteMedecinCompletedDelegate, userState);
        }
        
        public void InsertVisite(Medicus.SVC.Visite obj) {
            base.Channel.InsertVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertVisite(System.IAsyncResult result) {
            base.Channel.EndInsertVisite(result);
        }
        
        private System.IAsyncResult OnBeginInsertVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Visite obj = ((Medicus.SVC.Visite)(inValues[0]));
            return this.BeginInsertVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertVisite(System.IAsyncResult result) {
            this.EndInsertVisite(result);
            return null;
        }
        
        private void OnInsertVisiteCompleted(object state) {
            if ((this.InsertVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVisiteAsync(Medicus.SVC.Visite obj) {
            this.InsertVisiteAsync(obj, null);
        }
        
        public void InsertVisiteAsync(Medicus.SVC.Visite obj, object userState) {
            if ((this.onBeginInsertVisiteDelegate == null)) {
                this.onBeginInsertVisiteDelegate = new BeginOperationDelegate(this.OnBeginInsertVisite);
            }
            if ((this.onEndInsertVisiteDelegate == null)) {
                this.onEndInsertVisiteDelegate = new EndOperationDelegate(this.OnEndInsertVisite);
            }
            if ((this.onInsertVisiteCompletedDelegate == null)) {
                this.onInsertVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVisiteDelegate, new object[] {
                        obj}, this.onEndInsertVisiteDelegate, this.onInsertVisiteCompletedDelegate, userState);
        }
        
        public void UpdateVisite(Medicus.SVC.Visite obj) {
            base.Channel.UpdateVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateVisite(System.IAsyncResult result) {
            base.Channel.EndUpdateVisite(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Visite obj = ((Medicus.SVC.Visite)(inValues[0]));
            return this.BeginUpdateVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateVisite(System.IAsyncResult result) {
            this.EndUpdateVisite(result);
            return null;
        }
        
        private void OnUpdateVisiteCompleted(object state) {
            if ((this.UpdateVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVisiteAsync(Medicus.SVC.Visite obj) {
            this.UpdateVisiteAsync(obj, null);
        }
        
        public void UpdateVisiteAsync(Medicus.SVC.Visite obj, object userState) {
            if ((this.onBeginUpdateVisiteDelegate == null)) {
                this.onBeginUpdateVisiteDelegate = new BeginOperationDelegate(this.OnBeginUpdateVisite);
            }
            if ((this.onEndUpdateVisiteDelegate == null)) {
                this.onEndUpdateVisiteDelegate = new EndOperationDelegate(this.OnEndUpdateVisite);
            }
            if ((this.onUpdateVisiteCompletedDelegate == null)) {
                this.onUpdateVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVisiteDelegate, new object[] {
                        obj}, this.onEndUpdateVisiteDelegate, this.onUpdateVisiteCompletedDelegate, userState);
        }
        
        public void DeleteVisite(Medicus.SVC.Visite obj) {
            base.Channel.DeleteVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteVisite(Medicus.SVC.Visite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteVisite(System.IAsyncResult result) {
            base.Channel.EndDeleteVisite(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Visite obj = ((Medicus.SVC.Visite)(inValues[0]));
            return this.BeginDeleteVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteVisite(System.IAsyncResult result) {
            this.EndDeleteVisite(result);
            return null;
        }
        
        private void OnDeleteVisiteCompleted(object state) {
            if ((this.DeleteVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVisiteAsync(Medicus.SVC.Visite obj) {
            this.DeleteVisiteAsync(obj, null);
        }
        
        public void DeleteVisiteAsync(Medicus.SVC.Visite obj, object userState) {
            if ((this.onBeginDeleteVisiteDelegate == null)) {
                this.onBeginDeleteVisiteDelegate = new BeginOperationDelegate(this.OnBeginDeleteVisite);
            }
            if ((this.onEndDeleteVisiteDelegate == null)) {
                this.onEndDeleteVisiteDelegate = new EndOperationDelegate(this.OnEndDeleteVisite);
            }
            if ((this.onDeleteVisiteCompletedDelegate == null)) {
                this.onDeleteVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVisiteDelegate, new object[] {
                        obj}, this.onEndDeleteVisiteDelegate, this.onDeleteVisiteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Medecin> GetAllMedecin() {
            return base.Channel.GetAllMedecin();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMedecin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMedecin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Medecin> EndGetAllMedecin(System.IAsyncResult result) {
            return base.Channel.EndGetAllMedecin(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMedecin(callback, asyncState);
        }
        
        private object[] OnEndGetAllMedecin(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Medecin> retVal = this.EndGetAllMedecin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMedecinCompleted(object state) {
            if ((this.GetAllMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMedecinCompleted(this, new GetAllMedecinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMedecinAsync() {
            this.GetAllMedecinAsync(null);
        }
        
        public void GetAllMedecinAsync(object userState) {
            if ((this.onBeginGetAllMedecinDelegate == null)) {
                this.onBeginGetAllMedecinDelegate = new BeginOperationDelegate(this.OnBeginGetAllMedecin);
            }
            if ((this.onEndGetAllMedecinDelegate == null)) {
                this.onEndGetAllMedecinDelegate = new EndOperationDelegate(this.OnEndGetAllMedecin);
            }
            if ((this.onGetAllMedecinCompletedDelegate == null)) {
                this.onGetAllMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMedecinDelegate, null, this.onEndGetAllMedecinDelegate, this.onGetAllMedecinCompletedDelegate, userState);
        }
        
        public void InsertMedecin(Medicus.SVC.Medecin obj) {
            base.Channel.InsertMedecin(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMedecin(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMedecin(System.IAsyncResult result) {
            base.Channel.EndInsertMedecin(result);
        }
        
        private System.IAsyncResult OnBeginInsertMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Medecin obj = ((Medicus.SVC.Medecin)(inValues[0]));
            return this.BeginInsertMedecin(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMedecin(System.IAsyncResult result) {
            this.EndInsertMedecin(result);
            return null;
        }
        
        private void OnInsertMedecinCompleted(object state) {
            if ((this.InsertMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMedecinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMedecinAsync(Medicus.SVC.Medecin obj) {
            this.InsertMedecinAsync(obj, null);
        }
        
        public void InsertMedecinAsync(Medicus.SVC.Medecin obj, object userState) {
            if ((this.onBeginInsertMedecinDelegate == null)) {
                this.onBeginInsertMedecinDelegate = new BeginOperationDelegate(this.OnBeginInsertMedecin);
            }
            if ((this.onEndInsertMedecinDelegate == null)) {
                this.onEndInsertMedecinDelegate = new EndOperationDelegate(this.OnEndInsertMedecin);
            }
            if ((this.onInsertMedecinCompletedDelegate == null)) {
                this.onInsertMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMedecinDelegate, new object[] {
                        obj}, this.onEndInsertMedecinDelegate, this.onInsertMedecinCompletedDelegate, userState);
        }
        
        public void UpdateMedecin(Medicus.SVC.Medecin obj) {
            base.Channel.UpdateMedecin(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMedecin(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMedecin(System.IAsyncResult result) {
            base.Channel.EndUpdateMedecin(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Medecin obj = ((Medicus.SVC.Medecin)(inValues[0]));
            return this.BeginUpdateMedecin(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMedecin(System.IAsyncResult result) {
            this.EndUpdateMedecin(result);
            return null;
        }
        
        private void OnUpdateMedecinCompleted(object state) {
            if ((this.UpdateMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMedecinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMedecinAsync(Medicus.SVC.Medecin obj) {
            this.UpdateMedecinAsync(obj, null);
        }
        
        public void UpdateMedecinAsync(Medicus.SVC.Medecin obj, object userState) {
            if ((this.onBeginUpdateMedecinDelegate == null)) {
                this.onBeginUpdateMedecinDelegate = new BeginOperationDelegate(this.OnBeginUpdateMedecin);
            }
            if ((this.onEndUpdateMedecinDelegate == null)) {
                this.onEndUpdateMedecinDelegate = new EndOperationDelegate(this.OnEndUpdateMedecin);
            }
            if ((this.onUpdateMedecinCompletedDelegate == null)) {
                this.onUpdateMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMedecinDelegate, new object[] {
                        obj}, this.onEndUpdateMedecinDelegate, this.onUpdateMedecinCompletedDelegate, userState);
        }
        
        public void DeleteMedecin(Medicus.SVC.Medecin obj) {
            base.Channel.DeleteMedecin(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMedecin(Medicus.SVC.Medecin obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMedecin(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMedecin(System.IAsyncResult result) {
            base.Channel.EndDeleteMedecin(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMedecin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Medecin obj = ((Medicus.SVC.Medecin)(inValues[0]));
            return this.BeginDeleteMedecin(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMedecin(System.IAsyncResult result) {
            this.EndDeleteMedecin(result);
            return null;
        }
        
        private void OnDeleteMedecinCompleted(object state) {
            if ((this.DeleteMedecinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMedecinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMedecinAsync(Medicus.SVC.Medecin obj) {
            this.DeleteMedecinAsync(obj, null);
        }
        
        public void DeleteMedecinAsync(Medicus.SVC.Medecin obj, object userState) {
            if ((this.onBeginDeleteMedecinDelegate == null)) {
                this.onBeginDeleteMedecinDelegate = new BeginOperationDelegate(this.OnBeginDeleteMedecin);
            }
            if ((this.onEndDeleteMedecinDelegate == null)) {
                this.onEndDeleteMedecinDelegate = new EndOperationDelegate(this.OnEndDeleteMedecin);
            }
            if ((this.onDeleteMedecinCompletedDelegate == null)) {
                this.onDeleteMedecinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMedecinCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMedecinDelegate, new object[] {
                        obj}, this.onEndDeleteMedecinDelegate, this.onDeleteMedecinCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Spécialité> GetAllSpécialité() {
            return base.Channel.GetAllSpécialité();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSpécialité(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSpécialité(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Spécialité> EndGetAllSpécialité(System.IAsyncResult result) {
            return base.Channel.EndGetAllSpécialité(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSpécialité(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllSpécialité(callback, asyncState);
        }
        
        private object[] OnEndGetAllSpécialité(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Spécialité> retVal = this.EndGetAllSpécialité(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSpécialitéCompleted(object state) {
            if ((this.GetAllSpécialitéCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSpécialitéCompleted(this, new GetAllSpécialitéCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSpécialitéAsync() {
            this.GetAllSpécialitéAsync(null);
        }
        
        public void GetAllSpécialitéAsync(object userState) {
            if ((this.onBeginGetAllSpécialitéDelegate == null)) {
                this.onBeginGetAllSpécialitéDelegate = new BeginOperationDelegate(this.OnBeginGetAllSpécialité);
            }
            if ((this.onEndGetAllSpécialitéDelegate == null)) {
                this.onEndGetAllSpécialitéDelegate = new EndOperationDelegate(this.OnEndGetAllSpécialité);
            }
            if ((this.onGetAllSpécialitéCompletedDelegate == null)) {
                this.onGetAllSpécialitéCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSpécialitéCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSpécialitéDelegate, null, this.onEndGetAllSpécialitéDelegate, this.onGetAllSpécialitéCompletedDelegate, userState);
        }
        
        public void InsertSpécialité(Medicus.SVC.Spécialité obj) {
            base.Channel.InsertSpécialité(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertSpécialité(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertSpécialité(System.IAsyncResult result) {
            base.Channel.EndInsertSpécialité(result);
        }
        
        private System.IAsyncResult OnBeginInsertSpécialité(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Spécialité obj = ((Medicus.SVC.Spécialité)(inValues[0]));
            return this.BeginInsertSpécialité(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertSpécialité(System.IAsyncResult result) {
            this.EndInsertSpécialité(result);
            return null;
        }
        
        private void OnInsertSpécialitéCompleted(object state) {
            if ((this.InsertSpécialitéCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertSpécialitéCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertSpécialitéAsync(Medicus.SVC.Spécialité obj) {
            this.InsertSpécialitéAsync(obj, null);
        }
        
        public void InsertSpécialitéAsync(Medicus.SVC.Spécialité obj, object userState) {
            if ((this.onBeginInsertSpécialitéDelegate == null)) {
                this.onBeginInsertSpécialitéDelegate = new BeginOperationDelegate(this.OnBeginInsertSpécialité);
            }
            if ((this.onEndInsertSpécialitéDelegate == null)) {
                this.onEndInsertSpécialitéDelegate = new EndOperationDelegate(this.OnEndInsertSpécialité);
            }
            if ((this.onInsertSpécialitéCompletedDelegate == null)) {
                this.onInsertSpécialitéCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertSpécialitéCompleted);
            }
            base.InvokeAsync(this.onBeginInsertSpécialitéDelegate, new object[] {
                        obj}, this.onEndInsertSpécialitéDelegate, this.onInsertSpécialitéCompletedDelegate, userState);
        }
        
        public void UpdateSpécialité(Medicus.SVC.Spécialité obj) {
            base.Channel.UpdateSpécialité(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSpécialité(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSpécialité(System.IAsyncResult result) {
            base.Channel.EndUpdateSpécialité(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSpécialité(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Spécialité obj = ((Medicus.SVC.Spécialité)(inValues[0]));
            return this.BeginUpdateSpécialité(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateSpécialité(System.IAsyncResult result) {
            this.EndUpdateSpécialité(result);
            return null;
        }
        
        private void OnUpdateSpécialitéCompleted(object state) {
            if ((this.UpdateSpécialitéCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSpécialitéCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSpécialitéAsync(Medicus.SVC.Spécialité obj) {
            this.UpdateSpécialitéAsync(obj, null);
        }
        
        public void UpdateSpécialitéAsync(Medicus.SVC.Spécialité obj, object userState) {
            if ((this.onBeginUpdateSpécialitéDelegate == null)) {
                this.onBeginUpdateSpécialitéDelegate = new BeginOperationDelegate(this.OnBeginUpdateSpécialité);
            }
            if ((this.onEndUpdateSpécialitéDelegate == null)) {
                this.onEndUpdateSpécialitéDelegate = new EndOperationDelegate(this.OnEndUpdateSpécialité);
            }
            if ((this.onUpdateSpécialitéCompletedDelegate == null)) {
                this.onUpdateSpécialitéCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSpécialitéCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSpécialitéDelegate, new object[] {
                        obj}, this.onEndUpdateSpécialitéDelegate, this.onUpdateSpécialitéCompletedDelegate, userState);
        }
        
        public void DeleteSpécialité(Medicus.SVC.Spécialité obj) {
            base.Channel.DeleteSpécialité(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteSpécialité(Medicus.SVC.Spécialité obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSpécialité(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteSpécialité(System.IAsyncResult result) {
            base.Channel.EndDeleteSpécialité(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSpécialité(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Spécialité obj = ((Medicus.SVC.Spécialité)(inValues[0]));
            return this.BeginDeleteSpécialité(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteSpécialité(System.IAsyncResult result) {
            this.EndDeleteSpécialité(result);
            return null;
        }
        
        private void OnDeleteSpécialitéCompleted(object state) {
            if ((this.DeleteSpécialitéCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSpécialitéCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSpécialitéAsync(Medicus.SVC.Spécialité obj) {
            this.DeleteSpécialitéAsync(obj, null);
        }
        
        public void DeleteSpécialitéAsync(Medicus.SVC.Spécialité obj, object userState) {
            if ((this.onBeginDeleteSpécialitéDelegate == null)) {
                this.onBeginDeleteSpécialitéDelegate = new BeginOperationDelegate(this.OnBeginDeleteSpécialité);
            }
            if ((this.onEndDeleteSpécialitéDelegate == null)) {
                this.onEndDeleteSpécialitéDelegate = new EndOperationDelegate(this.OnEndDeleteSpécialité);
            }
            if ((this.onDeleteSpécialitéCompletedDelegate == null)) {
                this.onDeleteSpécialitéCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSpécialitéCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSpécialitéDelegate, new object[] {
                        obj}, this.onEndDeleteSpécialitéDelegate, this.onDeleteSpécialitéCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.MotifVisite> GetAllMotifVisite() {
            return base.Channel.GetAllMotifVisite();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMotifVisite(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMotifVisite(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.MotifVisite> EndGetAllMotifVisite(System.IAsyncResult result) {
            return base.Channel.EndGetAllMotifVisite(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMotifVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMotifVisite(callback, asyncState);
        }
        
        private object[] OnEndGetAllMotifVisite(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.MotifVisite> retVal = this.EndGetAllMotifVisite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMotifVisiteCompleted(object state) {
            if ((this.GetAllMotifVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMotifVisiteCompleted(this, new GetAllMotifVisiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMotifVisiteAsync() {
            this.GetAllMotifVisiteAsync(null);
        }
        
        public void GetAllMotifVisiteAsync(object userState) {
            if ((this.onBeginGetAllMotifVisiteDelegate == null)) {
                this.onBeginGetAllMotifVisiteDelegate = new BeginOperationDelegate(this.OnBeginGetAllMotifVisite);
            }
            if ((this.onEndGetAllMotifVisiteDelegate == null)) {
                this.onEndGetAllMotifVisiteDelegate = new EndOperationDelegate(this.OnEndGetAllMotifVisite);
            }
            if ((this.onGetAllMotifVisiteCompletedDelegate == null)) {
                this.onGetAllMotifVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMotifVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMotifVisiteDelegate, null, this.onEndGetAllMotifVisiteDelegate, this.onGetAllMotifVisiteCompletedDelegate, userState);
        }
        
        public void InsertMotifVisite(Medicus.SVC.MotifVisite obj) {
            base.Channel.InsertMotifVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMotifVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMotifVisite(System.IAsyncResult result) {
            base.Channel.EndInsertMotifVisite(result);
        }
        
        private System.IAsyncResult OnBeginInsertMotifVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifVisite obj = ((Medicus.SVC.MotifVisite)(inValues[0]));
            return this.BeginInsertMotifVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMotifVisite(System.IAsyncResult result) {
            this.EndInsertMotifVisite(result);
            return null;
        }
        
        private void OnInsertMotifVisiteCompleted(object state) {
            if ((this.InsertMotifVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMotifVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMotifVisiteAsync(Medicus.SVC.MotifVisite obj) {
            this.InsertMotifVisiteAsync(obj, null);
        }
        
        public void InsertMotifVisiteAsync(Medicus.SVC.MotifVisite obj, object userState) {
            if ((this.onBeginInsertMotifVisiteDelegate == null)) {
                this.onBeginInsertMotifVisiteDelegate = new BeginOperationDelegate(this.OnBeginInsertMotifVisite);
            }
            if ((this.onEndInsertMotifVisiteDelegate == null)) {
                this.onEndInsertMotifVisiteDelegate = new EndOperationDelegate(this.OnEndInsertMotifVisite);
            }
            if ((this.onInsertMotifVisiteCompletedDelegate == null)) {
                this.onInsertMotifVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMotifVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMotifVisiteDelegate, new object[] {
                        obj}, this.onEndInsertMotifVisiteDelegate, this.onInsertMotifVisiteCompletedDelegate, userState);
        }
        
        public void UpdateMotifVisite(Medicus.SVC.MotifVisite obj) {
            base.Channel.UpdateMotifVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMotifVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMotifVisite(System.IAsyncResult result) {
            base.Channel.EndUpdateMotifVisite(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMotifVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifVisite obj = ((Medicus.SVC.MotifVisite)(inValues[0]));
            return this.BeginUpdateMotifVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMotifVisite(System.IAsyncResult result) {
            this.EndUpdateMotifVisite(result);
            return null;
        }
        
        private void OnUpdateMotifVisiteCompleted(object state) {
            if ((this.UpdateMotifVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMotifVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMotifVisiteAsync(Medicus.SVC.MotifVisite obj) {
            this.UpdateMotifVisiteAsync(obj, null);
        }
        
        public void UpdateMotifVisiteAsync(Medicus.SVC.MotifVisite obj, object userState) {
            if ((this.onBeginUpdateMotifVisiteDelegate == null)) {
                this.onBeginUpdateMotifVisiteDelegate = new BeginOperationDelegate(this.OnBeginUpdateMotifVisite);
            }
            if ((this.onEndUpdateMotifVisiteDelegate == null)) {
                this.onEndUpdateMotifVisiteDelegate = new EndOperationDelegate(this.OnEndUpdateMotifVisite);
            }
            if ((this.onUpdateMotifVisiteCompletedDelegate == null)) {
                this.onUpdateMotifVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMotifVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMotifVisiteDelegate, new object[] {
                        obj}, this.onEndUpdateMotifVisiteDelegate, this.onUpdateMotifVisiteCompletedDelegate, userState);
        }
        
        public void DeleteMotifVisite(Medicus.SVC.MotifVisite obj) {
            base.Channel.DeleteMotifVisite(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMotifVisite(Medicus.SVC.MotifVisite obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMotifVisite(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMotifVisite(System.IAsyncResult result) {
            base.Channel.EndDeleteMotifVisite(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMotifVisite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.MotifVisite obj = ((Medicus.SVC.MotifVisite)(inValues[0]));
            return this.BeginDeleteMotifVisite(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMotifVisite(System.IAsyncResult result) {
            this.EndDeleteMotifVisite(result);
            return null;
        }
        
        private void OnDeleteMotifVisiteCompleted(object state) {
            if ((this.DeleteMotifVisiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMotifVisiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMotifVisiteAsync(Medicus.SVC.MotifVisite obj) {
            this.DeleteMotifVisiteAsync(obj, null);
        }
        
        public void DeleteMotifVisiteAsync(Medicus.SVC.MotifVisite obj, object userState) {
            if ((this.onBeginDeleteMotifVisiteDelegate == null)) {
                this.onBeginDeleteMotifVisiteDelegate = new BeginOperationDelegate(this.OnBeginDeleteMotifVisite);
            }
            if ((this.onEndDeleteMotifVisiteDelegate == null)) {
                this.onEndDeleteMotifVisiteDelegate = new EndOperationDelegate(this.OnEndDeleteMotifVisite);
            }
            if ((this.onDeleteMotifVisiteCompletedDelegate == null)) {
                this.onDeleteMotifVisiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMotifVisiteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMotifVisiteDelegate, new object[] {
                        obj}, this.onEndDeleteMotifVisiteDelegate, this.onDeleteMotifVisiteCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.Membership> GetAllMembership() {
            return base.Channel.GetAllMembership();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMembership(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMembership(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.Membership> EndGetAllMembership(System.IAsyncResult result) {
            return base.Channel.EndGetAllMembership(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMembership(callback, asyncState);
        }
        
        private object[] OnEndGetAllMembership(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.Membership> retVal = this.EndGetAllMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMembershipCompleted(object state) {
            if ((this.GetAllMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMembershipCompleted(this, new GetAllMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMembershipAsync() {
            this.GetAllMembershipAsync(null);
        }
        
        public void GetAllMembershipAsync(object userState) {
            if ((this.onBeginGetAllMembershipDelegate == null)) {
                this.onBeginGetAllMembershipDelegate = new BeginOperationDelegate(this.OnBeginGetAllMembership);
            }
            if ((this.onEndGetAllMembershipDelegate == null)) {
                this.onEndGetAllMembershipDelegate = new EndOperationDelegate(this.OnEndGetAllMembership);
            }
            if ((this.onGetAllMembershipCompletedDelegate == null)) {
                this.onGetAllMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMembershipDelegate, null, this.onEndGetAllMembershipDelegate, this.onGetAllMembershipCompletedDelegate, userState);
        }
        
        public void InsertMembership(Medicus.SVC.Membership obj) {
            base.Channel.InsertMembership(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMembership(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertMembership(System.IAsyncResult result) {
            base.Channel.EndInsertMembership(result);
        }
        
        private System.IAsyncResult OnBeginInsertMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Membership obj = ((Medicus.SVC.Membership)(inValues[0]));
            return this.BeginInsertMembership(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertMembership(System.IAsyncResult result) {
            this.EndInsertMembership(result);
            return null;
        }
        
        private void OnInsertMembershipCompleted(object state) {
            if ((this.InsertMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMembershipAsync(Medicus.SVC.Membership obj) {
            this.InsertMembershipAsync(obj, null);
        }
        
        public void InsertMembershipAsync(Medicus.SVC.Membership obj, object userState) {
            if ((this.onBeginInsertMembershipDelegate == null)) {
                this.onBeginInsertMembershipDelegate = new BeginOperationDelegate(this.OnBeginInsertMembership);
            }
            if ((this.onEndInsertMembershipDelegate == null)) {
                this.onEndInsertMembershipDelegate = new EndOperationDelegate(this.OnEndInsertMembership);
            }
            if ((this.onInsertMembershipCompletedDelegate == null)) {
                this.onInsertMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMembershipDelegate, new object[] {
                        obj}, this.onEndInsertMembershipDelegate, this.onInsertMembershipCompletedDelegate, userState);
        }
        
        public void UpdateMembership(Medicus.SVC.Membership obj) {
            base.Channel.UpdateMembership(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMembership(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateMembership(System.IAsyncResult result) {
            base.Channel.EndUpdateMembership(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Membership obj = ((Medicus.SVC.Membership)(inValues[0]));
            return this.BeginUpdateMembership(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdateMembership(System.IAsyncResult result) {
            this.EndUpdateMembership(result);
            return null;
        }
        
        private void OnUpdateMembershipCompleted(object state) {
            if ((this.UpdateMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMembershipAsync(Medicus.SVC.Membership obj) {
            this.UpdateMembershipAsync(obj, null);
        }
        
        public void UpdateMembershipAsync(Medicus.SVC.Membership obj, object userState) {
            if ((this.onBeginUpdateMembershipDelegate == null)) {
                this.onBeginUpdateMembershipDelegate = new BeginOperationDelegate(this.OnBeginUpdateMembership);
            }
            if ((this.onEndUpdateMembershipDelegate == null)) {
                this.onEndUpdateMembershipDelegate = new EndOperationDelegate(this.OnEndUpdateMembership);
            }
            if ((this.onUpdateMembershipCompletedDelegate == null)) {
                this.onUpdateMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMembershipDelegate, new object[] {
                        obj}, this.onEndUpdateMembershipDelegate, this.onUpdateMembershipCompletedDelegate, userState);
        }
        
        public void DeleteMembership(Medicus.SVC.Membership obj) {
            base.Channel.DeleteMembership(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMembership(Medicus.SVC.Membership obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMembership(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMembership(System.IAsyncResult result) {
            base.Channel.EndDeleteMembership(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.Membership obj = ((Medicus.SVC.Membership)(inValues[0]));
            return this.BeginDeleteMembership(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteMembership(System.IAsyncResult result) {
            this.EndDeleteMembership(result);
            return null;
        }
        
        private void OnDeleteMembershipCompleted(object state) {
            if ((this.DeleteMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMembershipAsync(Medicus.SVC.Membership obj) {
            this.DeleteMembershipAsync(obj, null);
        }
        
        public void DeleteMembershipAsync(Medicus.SVC.Membership obj, object userState) {
            if ((this.onBeginDeleteMembershipDelegate == null)) {
                this.onBeginDeleteMembershipDelegate = new BeginOperationDelegate(this.OnBeginDeleteMembership);
            }
            if ((this.onEndDeleteMembershipDelegate == null)) {
                this.onEndDeleteMembershipDelegate = new EndOperationDelegate(this.OnEndDeleteMembership);
            }
            if ((this.onDeleteMembershipCompletedDelegate == null)) {
                this.onDeleteMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMembershipDelegate, new object[] {
                        obj}, this.onEndDeleteMembershipDelegate, this.onDeleteMembershipCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Medicus.SVC.ExclusionDay> GetAllExclusionDay(string Name, string FirstName) {
            return base.Channel.GetAllExclusionDay(Name, FirstName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllExclusionDay(string Name, string FirstName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllExclusionDay(Name, FirstName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Medicus.SVC.ExclusionDay> EndGetAllExclusionDay(System.IAsyncResult result) {
            return base.Channel.EndGetAllExclusionDay(result);
        }
        
        private System.IAsyncResult OnBeginGetAllExclusionDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Name = ((string)(inValues[0]));
            string FirstName = ((string)(inValues[1]));
            return this.BeginGetAllExclusionDay(Name, FirstName, callback, asyncState);
        }
        
        private object[] OnEndGetAllExclusionDay(System.IAsyncResult result) {
            System.Collections.Generic.List<Medicus.SVC.ExclusionDay> retVal = this.EndGetAllExclusionDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllExclusionDayCompleted(object state) {
            if ((this.GetAllExclusionDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllExclusionDayCompleted(this, new GetAllExclusionDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllExclusionDayAsync(string Name, string FirstName) {
            this.GetAllExclusionDayAsync(Name, FirstName, null);
        }
        
        public void GetAllExclusionDayAsync(string Name, string FirstName, object userState) {
            if ((this.onBeginGetAllExclusionDayDelegate == null)) {
                this.onBeginGetAllExclusionDayDelegate = new BeginOperationDelegate(this.OnBeginGetAllExclusionDay);
            }
            if ((this.onEndGetAllExclusionDayDelegate == null)) {
                this.onEndGetAllExclusionDayDelegate = new EndOperationDelegate(this.OnEndGetAllExclusionDay);
            }
            if ((this.onGetAllExclusionDayCompletedDelegate == null)) {
                this.onGetAllExclusionDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllExclusionDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllExclusionDayDelegate, new object[] {
                        Name,
                        FirstName}, this.onEndGetAllExclusionDayDelegate, this.onGetAllExclusionDayCompletedDelegate, userState);
        }
        
        public bool InsertExclusionDay(Medicus.SVC.ExclusionDay obj) {
            return base.Channel.InsertExclusionDay(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertExclusionDay(Medicus.SVC.ExclusionDay obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertExclusionDay(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertExclusionDay(System.IAsyncResult result) {
            return base.Channel.EndInsertExclusionDay(result);
        }
        
        private System.IAsyncResult OnBeginInsertExclusionDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ExclusionDay obj = ((Medicus.SVC.ExclusionDay)(inValues[0]));
            return this.BeginInsertExclusionDay(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertExclusionDay(System.IAsyncResult result) {
            bool retVal = this.EndInsertExclusionDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertExclusionDayCompleted(object state) {
            if ((this.InsertExclusionDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertExclusionDayCompleted(this, new InsertExclusionDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertExclusionDayAsync(Medicus.SVC.ExclusionDay obj) {
            this.InsertExclusionDayAsync(obj, null);
        }
        
        public void InsertExclusionDayAsync(Medicus.SVC.ExclusionDay obj, object userState) {
            if ((this.onBeginInsertExclusionDayDelegate == null)) {
                this.onBeginInsertExclusionDayDelegate = new BeginOperationDelegate(this.OnBeginInsertExclusionDay);
            }
            if ((this.onEndInsertExclusionDayDelegate == null)) {
                this.onEndInsertExclusionDayDelegate = new EndOperationDelegate(this.OnEndInsertExclusionDay);
            }
            if ((this.onInsertExclusionDayCompletedDelegate == null)) {
                this.onInsertExclusionDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertExclusionDayCompleted);
            }
            base.InvokeAsync(this.onBeginInsertExclusionDayDelegate, new object[] {
                        obj}, this.onEndInsertExclusionDayDelegate, this.onInsertExclusionDayCompletedDelegate, userState);
        }
        
        public bool UpdateExclusionDay(int obj, System.DateTime date) {
            return base.Channel.UpdateExclusionDay(obj, date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateExclusionDay(int obj, System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateExclusionDay(obj, date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateExclusionDay(System.IAsyncResult result) {
            return base.Channel.EndUpdateExclusionDay(result);
        }
        
        private System.IAsyncResult OnBeginUpdateExclusionDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int obj = ((int)(inValues[0]));
            System.DateTime date = ((System.DateTime)(inValues[1]));
            return this.BeginUpdateExclusionDay(obj, date, callback, asyncState);
        }
        
        private object[] OnEndUpdateExclusionDay(System.IAsyncResult result) {
            bool retVal = this.EndUpdateExclusionDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateExclusionDayCompleted(object state) {
            if ((this.UpdateExclusionDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateExclusionDayCompleted(this, new UpdateExclusionDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateExclusionDayAsync(int obj, System.DateTime date) {
            this.UpdateExclusionDayAsync(obj, date, null);
        }
        
        public void UpdateExclusionDayAsync(int obj, System.DateTime date, object userState) {
            if ((this.onBeginUpdateExclusionDayDelegate == null)) {
                this.onBeginUpdateExclusionDayDelegate = new BeginOperationDelegate(this.OnBeginUpdateExclusionDay);
            }
            if ((this.onEndUpdateExclusionDayDelegate == null)) {
                this.onEndUpdateExclusionDayDelegate = new EndOperationDelegate(this.OnEndUpdateExclusionDay);
            }
            if ((this.onUpdateExclusionDayCompletedDelegate == null)) {
                this.onUpdateExclusionDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateExclusionDayCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateExclusionDayDelegate, new object[] {
                        obj,
                        date}, this.onEndUpdateExclusionDayDelegate, this.onUpdateExclusionDayCompletedDelegate, userState);
        }
        
        public bool DeleteExclusionDay(Medicus.SVC.ExclusionDay obj) {
            return base.Channel.DeleteExclusionDay(obj);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteExclusionDay(Medicus.SVC.ExclusionDay obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteExclusionDay(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteExclusionDay(System.IAsyncResult result) {
            return base.Channel.EndDeleteExclusionDay(result);
        }
        
        private System.IAsyncResult OnBeginDeleteExclusionDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medicus.SVC.ExclusionDay obj = ((Medicus.SVC.ExclusionDay)(inValues[0]));
            return this.BeginDeleteExclusionDay(obj, callback, asyncState);
        }
        
        private object[] OnEndDeleteExclusionDay(System.IAsyncResult result) {
            bool retVal = this.EndDeleteExclusionDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteExclusionDayCompleted(object state) {
            if ((this.DeleteExclusionDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteExclusionDayCompleted(this, new DeleteExclusionDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteExclusionDayAsync(Medicus.SVC.ExclusionDay obj) {
            this.DeleteExclusionDayAsync(obj, null);
        }
        
        public void DeleteExclusionDayAsync(Medicus.SVC.ExclusionDay obj, object userState) {
            if ((this.onBeginDeleteExclusionDayDelegate == null)) {
                this.onBeginDeleteExclusionDayDelegate = new BeginOperationDelegate(this.OnBeginDeleteExclusionDay);
            }
            if ((this.onEndDeleteExclusionDayDelegate == null)) {
                this.onEndDeleteExclusionDayDelegate = new EndOperationDelegate(this.OnEndDeleteExclusionDay);
            }
            if ((this.onDeleteExclusionDayCompletedDelegate == null)) {
                this.onDeleteExclusionDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteExclusionDayCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteExclusionDayDelegate, new object[] {
                        obj}, this.onEndDeleteExclusionDayDelegate, this.onDeleteExclusionDayCompletedDelegate, userState);
        }
    }
}
