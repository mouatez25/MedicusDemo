<dx:DXWindow xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"  
             xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls" 
             xmlns:dxga="http://schemas.devexpress.com/winfx/2008/xaml/gauges" 
             xmlns:my="http://schemas.devexpress.com/winfx/2008/xaml/charts/rangecontrolclient" 
             xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"  
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"  
             x:Class="Medicus.FileDattente.SalleDattente"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Medicus.FileDattente"
                      xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    dx:ThemeManager.ThemeName="Office2010Black"
                       xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
       Title="Salle d'attente"      ResizeMode="CanResize"  Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" ShowIcon="True" ShowTitle="True"  WindowStyle="ThreeDBorderWindow"  Icon="/Medicus;component/Dent6.ico" WindowStartupLocation="CenterScreen"  BorderThickness="0"  BorderBrush="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ShowInTaskbar="True"  >



    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="50px" />
            <RowDefinition  />
            <RowDefinition Height="200px" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition  Width="2*"/>
            <ColumnDefinition  />

        </Grid.ColumnDefinitions>
        <UserControl x:Name="BACK" Background="LightGray" Visibility="Collapsed" Opacity="0.6" Grid.ColumnSpan="3" Grid.RowSpan="12" Panel.ZIndex="99"/>
        <dx:WaitIndicator x:Name="WaitIndicatorS" DeferedVisibility="False" Content="Chargement..." Grid.Row="5" Grid.ColumnSpan="3" Grid.RowSpan="3" Panel.ZIndex="99" HorizontalAlignment="Center">
            <dx:WaitIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="veuillez patienter" FontSize="36" FontFamily="Tahoma"/>
                        <TextBlock Text="{Binding}"/>
                    </StackPanel>
                </DataTemplate>
            </dx:WaitIndicator.ContentTemplate>
        </dx:WaitIndicator>
        <DockPanel x:Name="DayRendezAttente" Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Grid.ColumnSpan="2" VerticalAlignment="Top">
            <DatePicker x:Name="DateNOW" VerticalAlignment="Center" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FF185900" SelectedDateChanged="DateNOW_SelectedDateChanged" />


            <TextBlock x:Name="Medecin" Text="Salle d'attente pour :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />

            <ComboBox x:Name="MedecinCombo" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" Width="120" BorderThickness="2" SelectionChanged="MedecinCombo_SelectionChanged" MouseRightButtonUp="MedecinCombo_MouseRightButtonUp" FontFamily="Tahoma">

                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Dr " Foreground="Red" FontWeight="Bold" FontFamily="Times New Roman" FontSize="14" />
                            <TextBlock Text="{Binding Nom}" Foreground="#FF185900" FontWeight="Bold" FontSize="14" FontFamily="Times New Roman"  />
                            <TextBlock Text="  " />
                            <TextBlock Text="{Binding Prénom}" Foreground="#FF185900" FontSize="14" FontFamily="Times New Roman" FontWeight="Bold" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>

            </ComboBox>


        </DockPanel>



        <DockPanel x:Name="SalleAtenteBarreOutil" Margin="15,-10,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Top" Grid.Row="1">

            <Button x:Name="btnNewSalleAttente" Margin="0" Cursor="Hand" Foreground="Goldenrod"   FontSize="10" FontFamily="Times New Roman" TextOptions.TextHintingMode="Animated" TextOptions.TextFormattingMode="Display" FontStretch="Condensed" ToolTip="Arrivée d'un patient sans Rendez vous" HorizontalAlignment="Center" Click="btnNewSalleAttente_Click" MouseLeave="btnNewSalleAttente_MouseLeave" MouseMove="btnNewSalleAttente_MouseMove" Width="25" Height="25"   >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="Images/53492.png" TileMode="FlipXY" Stretch="Uniform"/>
                </Button.Background>

            </Button>
            <Button x:Name="btnSupp" FontFamily="Segoe UI" Margin="10,0,0,0" Click="btnSupp_Click" Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Supprimer" HorizontalAlignment="Center" Width="25" Height="25" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Administrateur/Images/1456624817_delete.PNG"/>
                </Button.Background>

            </Button>
            <Button x:Name="btnImprimer" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Click="btnImprimer_Click" ToolTip="Imprimer" Width="25" Height="25">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Administrateur/Images/1456624510_printer.PNG"/>
                </Button.Background>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
            </Button>

            <TextBlock x:Name="NBSALLEATTENTE" Text="10" FontFamily="Tahoma" FontSize="36" FontWeight="Bold" Margin="0,0,10,0" VerticalAlignment="Center" Foreground="#FFB27300" HorizontalAlignment="Right" DockPanel.Dock="Right" />
            <TextBlock x:Name="Label" Text="Nombre de patients est:" FontFamily="Tahoma" FontSize="20" FontWeight="Bold" Margin="0,0,30,0" VerticalAlignment="Center" Foreground="#FF145F08" HorizontalAlignment="Right" DockPanel.Dock="Right" />

        </DockPanel>
        <Label Grid.Row="1" VerticalAlignment="Top" Content="                                                      Salle d'attente" FontFamily="Tahoma" FontSize="16" Margin="0,30,0,0"  FontWeight="Bold" Foreground="#FFB27300" Background="#FFC8C8C8" />
        <DataGrid x:Name="SalleDattenteGrid" HeadersVisibility="Column" SelectionMode="Single" Margin="20,60,20,30" Grid.Row="1"  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" ItemsSource="{Binding}"  IsReadOnly="True" IsTextSearchCaseSensitive="True" SelectionChanged="SalleDattenteGrid_SelectionChanged" Foreground="Black"  LoadingRow="SalleDattenteGrid_LoadingRow" BorderBrush="{x:Null}">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,4,4,7"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#4169E1"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                            <Setter Property="Foreground" Value="#4169E1"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding Rdv,StringFormat={}\{0:hh\\:mm\\:ss\}}" Header="Rdv" CanUserSort="False" FontSize="14" FontFamily="Tahoma" FontWeight="Normal" />
                <DataGridTextColumn Binding="{Binding Arrivée,StringFormat={}\{0:hh\\:mm\\:ss\}}" Header="Arrivée" CanUserSort="False" FontSize="14" FontFamily="Tahoma" FontWeight="Normal" />
                <DataGridTextColumn Binding="{Binding CodePatient}" Header="Code" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTemplateColumn  Width="Auto" Header="Patient">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}   {1}">
                                        <Binding Path="Nom" />
                                        <Binding Path="Prénom" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Age}" Header="Age" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding Motif}" Header="Motif" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTemplateColumn  Width="Auto" Header="Medecin">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Normal" FontFamily="Tahoma">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}   {1}">
                                        <Binding Path="NomMedecin" />
                                        <Binding Path="PrénomMedecin" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding NuméroRendezVous}" Header="N° Rendez Vous" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding Commentaire}" Header="Commentaire" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>

            </DataGrid.Columns>
        </DataGrid>


        <Button x:Name="btnDossier" Margin="10,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Click="btnDossier_Click" ToolTip="Dossier" Grid.Row="2" VerticalAlignment="Top" Width="25" Height="25" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
            <Button.Background>
                <ImageBrush ImageSource="Images/renommer-un-fichier.png"/>
            </Button.Background>
            <Button.BorderBrush>
                <ImageBrush/>
            </Button.BorderBrush>
        </Button>
        <Button x:Name="btnFiche" Margin="60,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Fiche Patient" Grid.Row="2" VerticalAlignment="Top" Click="btnFiche_Click" Width="25" Height="25" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
            <Button.Background>
                <ImageBrush ImageSource="/Medicus;component/Images/Listepatient.png"/>
            </Button.Background>
            <Button.BorderBrush>
                <ImageBrush/>
            </Button.BorderBrush>
        </Button>

        <Button x:Name="btnchezlemedecin" BorderThickness="0.5,0.5,2,2" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="-230,0,0,0" Width="30" Height="30" BorderBrush="Gray"  Click="btnchezlemedecin_Click" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                <Setter TargetName="Border" Property="BorderThickness" Value="3,3,0.5,0.5"/>
                                                <Setter Property="Background" Value="Green" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
            <Button.Background>
                <ImageBrush ImageSource="Images/fleche - Copie.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="btnchezNonlemedecin"  BorderThickness="0.5,0.5,2,2" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Center" MinWidth="30" Margin="230,0,0,0" MinHeight="30" BorderBrush="Gray" Click="btnchezNonlemedecin_Click" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                <Setter TargetName="Border" Property="BorderThickness" Value="3,3,0.5,0.5"/>
                                                <Setter Property="Background" Value="Green" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>
            <Button.Background>
                <ImageBrush ImageSource="Images/fleche.png"/>
            </Button.Background>

        </Button>
        <Label Grid.Row="2" VerticalAlignment="Top" Content="Patient chez le médecin" FontFamily="Tahoma" FontSize="16" Margin="0" Foreground="#FFB27300" Background="{x:Null}" HorizontalAlignment="Center" FontStyle="Italic" FontWeight="Bold" />



        <DataGrid x:Name="MedecinRecomandationGrid" SelectionMode="Single" Grid.Row="2"  AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="20,35,60,30" IsReadOnly="True" IsTextSearchCaseSensitive="True" Foreground="Black" MouseDoubleClick="btnDossier_Click" LoadingRow="MedecinRecomandationGrid_LoadingRow" BorderBrush="#CC119EDA" >
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,4,4,7"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="SortDirection" Value="{x:Null}"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                        <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                            <Setter Property="BorderBrush" Value="#4169E1"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                            <Setter Property="FontSize" Value="20"></Setter>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                            <Setter Property="Foreground" Value="#4169E1"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>


            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding NumFilleAttente}" Header="File Attente"  CanUserSort="True"  FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding Rdv,StringFormat={}\{0:hh\\:mm\\:ss\}}" Header="Rdv" CanUserSort="False" FontSize="14" FontFamily="Tahoma" FontWeight="Normal" />
                <DataGridTextColumn Binding="{Binding Arrivée,StringFormat={}\{0:hh\\:mm\\:ss\}}" Header="Arrivée" CanUserSort="False" FontSize="14" FontFamily="Tahoma" FontWeight="Normal" />
                <DataGridTextColumn Binding="{Binding CodePatient}" Header="Code" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTemplateColumn  Width="Auto" Header="Patient">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}   {1}">
                                        <Binding Path="Nom" />
                                        <Binding Path="Prénom" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Age}" Header="Age" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding Motif}" Header="Motif" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding TempsChezMedecinSalle, StringFormat=hh\\:mm\\:ss}" Header="Heure Chez Le Medecin" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTextColumn Binding="{Binding TempsQuitMedecinSalle, StringFormat=hh\\:mm\\:ss}" Header="Heure sortie de chez le medecin" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                <DataGridTemplateColumn  Width="Auto" Header="Medecin">


                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="Normal" FontFamily="Tahoma">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}   {1}">
                                        <Binding Path="NomMedecin" />
                                        <Binding Path="PrénomMedecin" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn  Width="Auto" Header="Fin De Consultation">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label>
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=FinDeConsultation}" Value="True">
                                                <Setter Property="Content" Value="Fin De Consultation" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=FinDeConsultation}" Value="False">
                                                <Setter Property="Content" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding NuméroRendezVous}" Header="N° Rendez Vous" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnMedecin" Background="Magenta" IsEnabled="True" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
        <Label Content=" Patient chez le medecin" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Grid.Row="2" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Button x:Name="btnPatientMedecin" Background="LightPink" IsEnabled="True" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="-10,0,0,5" MinWidth="40" MinHeight="20" Grid.Row="2" />
        <Label Content=" Patient n'est plus chez le medecin" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="240,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Button x:Name="btnQuitter"  Grid.Row="2" HorizontalAlignment="Right" Margin="0,30,5,5"    Click="btnQuitter_Click" Width="50" FontFamily="Tahoma" FontSize="10" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Height="110" ToolTip="Le patient quitte la salle de soins" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.BasedOn>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                            <Setter Property="MinHeight" Value="25"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Padding" Value="5,6"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Button.Style>

            <Button.Background>
                <ImageBrush ImageSource="/Medicus;component/Images/5-Signs-You-Should-Leave-Your-Finance-Job-Sooner-than-Later.jpg"/>
            </Button.Background>
        </Button>




        <Button x:Name="btnTjrLa" Background="Magenta" IsEnabled="True" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
        <Label Content=" Patient Dans La Salle d'attente" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Grid.Row="1" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Button x:Name="btnNoSalle" Background="LightPink" IsEnabled="True" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="-10,0,0,5" MinWidth="40" MinHeight="20" Grid.Row="1" />
        <Label Content=" Patient n'est plus dans la Salle d'attente" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="240,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <GridSplitter HorizontalAlignment="Left" Grid.Column="1" MinWidth="10" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.RowSpan="3" />


        <dx:DXTabControl x:Name="TabControl" Grid.Column="2" Grid.RowSpan="3"  Margin="10,0,0,0">
            <dx:DXTabControl.View>
                <dx:TabControlMultiLineView HeaderLocation="Right"/>
            </dx:DXTabControl.View>
            <dx:DXTabItem x:Name="RendezVousTab" Header="Rendez Vous" FontFamily="Times New Roman" FontSize="18" Foreground="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}" Margin="-1,10,-2,-2">
                <Grid x:Name="GridRendz" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50px" />
                        <RowDefinition  />
                        <RowDefinition Height="200px" />
                    </Grid.RowDefinitions>

                    <DockPanel  Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Column="1">
                        <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="5,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                        <TextBox x:Name="txtRecherche" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Width="100" TextChanged="txtRecherche_TextChanged" FontFamily="Tahoma" />
                        <DatePicker x:Name="DateNOWRendez" VerticalAlignment="Center" FontSize="14" FontFamily="Times New Roman" FontWeight="Bold" Foreground="#FF185900" Margin="0,0,5,0" HorizontalAlignment="Right" DockPanel.Dock="Right" SelectedDateChanged="DateNOWRendez_SelectedDateChanged" />
                    </DockPanel>



                    <DataGrid x:Name="RendezVousExisiteGrid" SelectionMode="Single" Grid.Column="1" Grid.RowSpan="2" Visibility="Visible"  Margin="10,0,10,30" AutoGenerateColumns="False" MinRowHeight="30" IsReadOnly="True" ScrollViewer.VerticalScrollBarVisibility="Visible"
      ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="1" LoadingRow="RendezVousExisiteGrid_LoadingRow">
                        <DataGrid.Template>
                            <ControlTemplate TargetType="{x:Type DataGrid}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                        <ScrollViewer.Template>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                                        <Button.Visibility>
                                                            <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                                <Binding.ConverterParameter>
                                                                    <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                                </Binding.ConverterParameter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                                        <DataGridColumnHeadersPresenter.Visibility>
                                                            <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                                <Binding.ConverterParameter>
                                                                    <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                                </Binding.ConverterParameter>
                                                            </Binding>
                                                        </DataGridColumnHeadersPresenter.Visibility>
                                                    </DataGridColumnHeadersPresenter>
                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                    <Grid Grid.Column="1" Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollViewer.Template>
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </DataGrid.Template>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                        <Setter Property="BorderBrush" Value="#4169E1"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Setter Property="FontSize" Value="20"></Setter>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                        <Setter Property="Foreground" Value="#4169E1"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.Columns>

                            <DataGridTemplateColumn  Width="50">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="BtnPresentExiste" Click="BtnPresentExiste_Click" BorderThickness="0.5,0.5,2,2" >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                                            <Setter Property="MinHeight" Value="25"/>
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                                            <Setter Property="BorderBrush" Value="Black"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                            <Setter Property="Padding" Value="5,6"/>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                                <Setter TargetName="Border" Property="BorderThickness" Value="3,3,0.5,0.5"/>
                                                                                <Setter Property="Background" Value="Green" />
                                                                            </Trigger>
                                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </Button.Style>

                                            <Button.Background>
                                                <ImageBrush ImageSource="Images/fleche (1).png" Stretch="Fill"/>
                                            </Button.Background>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding RendezVousD,StringFormat={}\{0:hh\\:mm\\:ss\}}" Header="Debut" CanUserSort="False" FontSize="14" FontFamily="Tahoma" FontWeight="Normal" />
                            <DataGridTemplateColumn  Width="Auto" Header="Patient">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}   {1}">
                                                    <Binding Path="Nom" />
                                                    <Binding Path="Prénom" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTextColumn Binding="{Binding Motif}" Header="Motif" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Bold"/>
                            <DataGridTextColumn Binding="{Binding CodePatient}" Header="Id" CanUserSort="False" FontFamily="Tahoma" FontSize="14" FontWeight="Normal"/>
                            <DataGridTemplateColumn  Width="Auto" Header="Medecin">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}   {1}">
                                                    <Binding Path="MedecinNom" />
                                                    <Binding Path="MedecinPrénom" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>



                    <Button x:Name="btnPresent" Background="Magenta" IsEnabled="False" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
                    <Label Content=" Présent" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                    <Button x:Name="btnNoPresent" Background="LightPink" Grid.Row="2" IsEnabled="False" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
                    <Label Content=" Non Présent" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="115,0,0,5" FontWeight="Bold" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                    <TextBlock x:Name="NBRENDEZVOUS" Text="10" FontFamily="Tahoma" FontSize="36" FontWeight="Bold" Margin="0" VerticalAlignment="Bottom" Foreground="#FFB27300" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" />

                </Grid>
            </dx:DXTabItem>
            <dx:DXTabItem x:Name="RéglementTab" Header="Réglements Du jours" FontFamily="Times New Roman" FontSize="18" Foreground="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}" Margin="0,6,-3,-3">
                <Grid x:Name="GridReglement" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50px" />
                        <RowDefinition  />
                        <RowDefinition  />
                    </Grid.RowDefinitions>

                    <DockPanel  Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Column="1">
                        <Button x:Name="btnNewRéglement" Content="" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,5" ToolTip="Nouveau Réglement" MinWidth="25" MinHeight="25" Click="btnNewRéglement_Click" BorderBrush="{x:Null}" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/Medicus;component/Images/47105.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="btnModifierRéglemtn" FontFamily="Times New Roman" Margin="5,0,0,5"  Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" FontSize="8" ToolTip="Modifier Réglement" HorizontalAlignment="Left" VerticalAlignment="Bottom" MinWidth="25" MinHeight="25" Click="btnModifierRéglemtn_Click" Width="25" Height="25" BorderBrush="{x:Null}" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                            <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            <Setter Property="Padding" Value="5,6"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">

                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                                <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">

                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="/Medicus;component/Images/bookkeeping-accounting.png"/>
                            </Button.Background>
                        </Button>
                        <DatePicker x:Name="DateVisite"  Grid.Column="2" VerticalAlignment="Bottom" FontFamily="Tahoma" FontWeight="Bold" FontSize="16" Margin="10,0,10,5" Height="15" BorderBrush="#FFFF9393" HorizontalAlignment="Right" SelectedDateChanged="DateVisite_SelectedDateChanged" />
                    </DockPanel>

                    <DataGrid x:Name="VisiteExisiteGrid" Grid.Column="1" SelectionMode="Single" Visibility="Visible"  Margin="10,0,10,10" AutoGenerateColumns="False" MinRowHeight="30" IsReadOnly="True" ScrollViewer.VerticalScrollBarVisibility="Visible"
      ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="1" LoadingRow="VisiteExisiteGrid_LoadingRow">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="10,4,4,7"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                                <Controls:ContentControlEx x:Name="HeaderContent" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Path x:Name="SortArrow" Grid.Column="1" Fill="{DynamicResource GrayBrush2}" Height="10" Margin="0,0,8,2" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" VerticalAlignment="Center" Width="8"/>
                                                <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                                <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Background" Value="{DynamicResource GrayBrush5}"/>
                                                            <Setter Property="Cursor" Value="SizeWE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="SortDirection" Value="{x:Null}">
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="SortDirection" Value="{x:Null}"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{DynamicResource GrayBrush8}"/>
                                                </MultiTrigger>
                                                <Trigger Property="SortDirection" Value="Ascending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z"/>
                                                </Trigger>
                                                <Trigger Property="SortDirection" Value="Descending">
                                                    <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                                    <Setter Property="Data" TargetName="SortArrow" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z"/>
                                                    <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0"/>
                                                </Trigger>
                                                <Trigger Property="DisplayIndex" Value="0">
                                                    <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter   Property="BorderThickness" Value="0,3,0,3"/>

                                        <Setter Property="BorderBrush" Value="#4169E1"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Setter Property="FontSize" Value="20"></Setter>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                        <Setter Property="Foreground" Value="#4169E1"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Motif}" Header="Motif" CanUserSort="False" FontFamily="Tahoma" FontSize="15" FontWeight="Normal"/>


                            <DataGridTemplateColumn  Width="Auto" Header="Patient">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}   {1}">
                                                    <Binding Path="NomPatient" />
                                                    <Binding Path="PrénomPatient" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Montant}" Header="Montant" CanUserSort="False" FontFamily="Tahoma" FontSize="15" FontWeight="Normal"/>
                            <DataGridTextColumn Binding="{Binding Versement}" Header="Versement" CanUserSort="False" FontFamily="Tahoma" FontSize="15" FontWeight="Normal"/>
                            <DataGridTextColumn Binding="{Binding Reste}" Header="Reste" CanUserSort="False" FontFamily="Tahoma" FontSize="15" FontWeight="Normal"/>
                            <DataGridTextColumn Binding="{Binding Datetime}" Header="Heure" CanUserSort="False" FontFamily="Tahoma" FontSize="15" FontWeight="Normal"/>
                            <DataGridTemplateColumn  Width="Auto" Header="User">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" FontFamily="Tahoma">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}   {1}">
                                                    <Binding Path="VisiteParNom" />
                                                    <Binding Path="VisiteParPrénom" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <GridSplitter MinWidth="5" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Grid.Row="1" VerticalAlignment="Bottom" ResizeDirection="Rows" HorizontalAlignment="Stretch" Height="10" />
                    <dxe:Calculator Grid.Row="2" Grid.Column="1" Margin="5,10,5,80" />


                    <Label x:Name="LabelTotalAregler" Content="Total dû:" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,50" FontSize="14" FontWeight="Bold" Foreground="#FFB27300" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalAregler" Content="9999.99" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,111,90,50" FontSize="14" FontWeight="Bold" FontFamily="Tahoma" />
                    <Label x:Name="LabelTotalVersement" Content="Versement:" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,90,0,25" FontSize="14" FontWeight="Bold" Foreground="#FFB27300" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalversement" Content="9999.99" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,90,90,25" FontSize="14" FontWeight="Bold" FontFamily="Tahoma" />
                    <Label x:Name="LabelTotalReste" Content="Reste :" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="55,50,0,50" FontSize="14" FontWeight="Bold" Foreground="#FFB27300" FontFamily="Tahoma" />
                    <Label x:Name="txtLabelTotalReste" Content="9999.99" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="150,50,0,50" FontSize="14" FontWeight="Bold" FontFamily="Tahoma" />

                    <Button x:Name="btnPayer" Background="Magenta" IsEnabled="False" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
                    <Label Content="Payé" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,5" FontWeight="Bold" FontFamily="Tahoma" />
                    <Button x:Name="btnNoPayer" Background="LightPink" Grid.Row="2" IsEnabled="False" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="10,0,0,5" MinWidth="40" MinHeight="20" />
                    <Label Content="Non payé" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="115,0,0,5" FontWeight="Bold" FontFamily="Tahoma" />
                </Grid>

            </dx:DXTabItem>
        </dx:DXTabControl>
    </Grid>
</dx:DXWindow>
