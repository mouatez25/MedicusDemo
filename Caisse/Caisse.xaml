<UserControl xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"  xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Medicus.Caisse"
              xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

      xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" x:Class="Medicus.Caisse.Caisse"
      mc:Ignorable="d" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" 
     
     >

    <Grid>
       
        <Grid.RowDefinitions>
            <RowDefinition Height="80px" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="0.25*"  />
        </Grid.RowDefinitions>


        <dxwui:PageAdornerControl Header="Caisse" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" >
            <dxwui:PageAdornerControl.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding}"/>

                    </Grid>
                </DataTemplate>
            </dxwui:PageAdornerControl.HeaderTemplate>
        </dxwui:PageAdornerControl>
        <DockPanel Margin="200,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Center" HorizontalAlignment="Center">
            <ScrollViewer IsTabStop="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" >
                    <DockPanel  Margin="15,6,6,4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Grid.ColumnSpan="2" Grid.Column="1">
                <Button x:Name="btnFilter" Click="btnFilter_Click" HorizontalAlignment="Right" DockPanel.Dock="Right"  Content="" FontFamily="Times New Roman" FontSize="12" ToolTip="Filtrer" Width="25" Margin="5,0,0,0" BorderBrush="{x:Null}" Height="25">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                    <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3"/>
                                    <Setter Property="MinHeight" Value="25"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                    <Setter Property="Padding" Value="5,6"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">

                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                        <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Button.Style>
                    <Button.Background>
                        <ImageBrush ImageSource="/Medicus;component/Images/acept-verifier-corriger-vert-ok-oui-icone-9668-128.png"/>
                    </Button.Background>
                </Button>
                <ComboBox x:Name="CompteComboBox" SelectedValuePath="Content" DockPanel.Dock="Left" MinWidth="10" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Tahoma" FontSize="14" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" FontWeight="Bold" Foreground="#FFB27300" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" >
                    <ComboBoxItem Content="Tous Mes Comptes" FontSize="14" IsSelected="True"/>
                    <ComboBoxItem Content="Caisse" FontSize="14" />
                    <ComboBoxItem Content="Banque" FontSize="14" />
                </ComboBox>
                <ComboBox x:Name="ModeRéglement" SelectedValuePath="Content"  DockPanel.Dock="Right" MinWidth="10" HorizontalAlignment="Right" VerticalAlignment="Center" FontFamily="Tahoma"  FontSize="14" SelectionChanged="ModeRéglement_SelectionChanged" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Foreground="#FFB27300" >
                    <ComboBoxItem Content="Tous les modes de règlement" FontSize="14" IsSelected="True"/>
                    <Separator/>
                    <ComboBoxItem  Content="Espèces" FontSize="14" />
                    <ComboBoxItem  Content="Hors Place" FontSize="14"/>
                    <ComboBoxItem Content="Sur Place" FontSize="14"/>
                    <ComboBoxItem Content="Carte bancaire" FontSize="14"/>
                    <ComboBoxItem  Content="Virement" FontSize="14"/>
                    <ComboBoxItem  Content="Monéo" FontSize="14"/>
                    <ComboBoxItem  Content="Dû" FontSize="14"/>
                </ComboBox>

                <DatePicker x:Name="DateSaisieFin" VerticalAlignment="Center" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FFB27300" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" SelectedDateChanged="DateSaisieFin_SelectedDateChanged" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                <TextBlock  Text="au:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="0,0,10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <DatePicker x:Name="DateSaisieDébut" VerticalAlignment="Center" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="#FFB27300" Margin="0,0,10,0" HorizontalAlignment="Right" DockPanel.Dock="Right" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                <TextBlock  Text="Du:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="10,0" FontFamily="Tahoma" DockPanel.Dock="Right" HorizontalAlignment="Right" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />

            </DockPanel>
            <Button x:Name="btnNew" FontFamily="Segoe UI, Lucida Sans Unicode, Verdana" Click="btnNew_Click" Content="" FontSize="10" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Nouveau" Width="25" Height="25" Margin="20,0,0,0" >
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Images/dossier-nouveau-icone-4594-128.png"/>
                </Button.Background>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>

            </Button>
            <Button x:Name="btnSupp" FontFamily="Segoe UI" Margin="20,0,0,0" Click="btnSupp_Click" Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Supprimer" Width="25" Height="25" >
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Images/supprimer-dossier-icone-4934-64.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnEdit" Click="btnEdit_Click" Margin="20,0,0,0" Content="" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" ToolTip="Modifier" Width="25" Height="25">
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Administrateur/Images/1456624391_edit_user.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnImprimer" Margin="20,0,0,0" Content="" HorizontalAlignment="Left" Foreground="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Click="btnImprimer_Click" ToolTip="Imprimer" Width="25" Height="25">
                <Button.Background>
                    <ImageBrush ImageSource="/Medicus;component/Administrateur/Images/1456624510_printer.png"/>
                </Button.Background>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                    <Setter Property="Opacity" TargetName="Background" Value="0.3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
            </Button>



                </StackPanel>
            </ScrollViewer>

        </DockPanel>
        <dxg:GridControl x:Name="PatientDataGrid" MouseDoubleClick="ClientsDataGrid_MouseDoubleClick" Grid.Row="1" ItemsSource="{Binding}" Margin="0"  Grid.ColumnSpan="2" FontFamily="Tahoma"  MouseRightButtonDown="PatientDataGrid_MouseRightButtonDown" Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" SelectionMode="None"  >
            <dxg:GridControl.View>
                <dxg:TableView AllowEditing="False" AllowGrouping="False" AllowColumnMoving="False" AllowSorting="False" AllowFixedGroups="False" ShowGroupPanel="False" ShowCriteriaInAutoFilterRow="False"/>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn Header="Compte OP"
					Binding="{Binding CompteDébité}" Width="Auto"  MinWidth="50"  />
                <dxg:GridColumn Header="Date de Saisie"
					Binding="{Binding DateSaisie, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto"  MinWidth="50"  />
                <dxg:GridColumn Header="Date Opération"
					Binding="{Binding DateDebit, StringFormat=\{0:dd/MM/yyyy\}}" Width="Auto"  MinWidth="50" />
                    <dxg:GridColumn Header="Rubrique"
					Binding="{Binding RubriqueComptable}" Width="Auto" MinWidth="50" />

                <dxg:GridColumn Header="Paiement"
					Binding="{Binding ModePaiement}" Width="Auto"  MinWidth="50"  />
                <dxg:GridColumn Header="Commentaire"
					Binding="{Binding Commentaires}" Width="Auto"  MinWidth="50"  />
                <dxg:GridColumn Header="Débit"
					Binding="{Binding Montant}" Width="Auto"  MinWidth="50" />
                <dxg:GridColumn Header="Crédit"
					Binding="{Binding MontantCrédit}" Width="Auto" MinWidth="50"  />
                <dxg:GridColumn Header="N° facture"
					Binding="{Binding Num_Facture}" Width="Auto"  MinWidth="50"  />


                <dxg:GridColumn Header="N° Cheque"
					Binding="{Binding NumCheque}" Width="Auto"  MinWidth="50"  />

                <dxg:GridColumn Header="UserName"
					Binding="{Binding Username}" Width="Auto"   MinWidth="50"  />

                <dxg:GridColumn Header="Auto"
					Binding="{Binding Auto}" Width="Auto"  MinWidth="50"  />

            </dxg:GridControl.Columns>
        </dxg:GridControl>


        <DockPanel x:Name="appBar" Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"  >

            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" >
                <Grid.RowDefinitions>

                    <RowDefinition Height="1*" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Total Crédits : " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" FontSize="14" FontFamily="Tahoma" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="2" />
                <Label Content="Total Débits : " VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" FontFamily="Tahoma" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="1" />
                <TextBox x:Name="TxtCreebit" HorizontalContentAlignment="Center" IsReadOnly="True" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="100,0,0,0" DockPanel.Dock="Right"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FFB27300" BorderThickness="3" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.Column="2" Width="150" Height="25" />

                <TextBox x:Name="txtDebit" HorizontalContentAlignment="Center" IsReadOnly="True" IsEnabled="False"  HorizontalAlignment="Left" VerticalAlignment="Center" DockPanel.Dock="Right"    Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FFB27300" BorderThickness="3" Margin="100,0,0,0" FontFamily="Tahoma" FontSize="14" FontWeight="Bold" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.Column="1" Width="150" Height="25" />
                <Label Content="Solde :" HorizontalAlignment="Left" Margin="0" FontFamily="Tahoma" FontWeight="Bold" VerticalAlignment="Center" FontSize="14" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Grid.Column="3" />

                <TextBox x:Name="txtSolde" IsEnabled="False" HorizontalContentAlignment="Center"  IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Center" DockPanel.Dock="Right"   Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Foreground="#FFB27300" BorderThickness="3" FontSize="16" FontFamily="Tahoma" FontWeight="Bold" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Grid.Column="3" Margin="80,0,0,0" Width="150" Height="25" />
                <TextBlock x:Name="label" Text="Trouver :" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="20,0,0,0" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                <dxe:TextEdit x:Name="txtRecherche" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="120,0,0,0" Width="150"  Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" FontFamily="Tahoma" FontSize="14" EditValueChanged="txtRecherche_TextChanged" Foreground="#FFB27300" />
            </Grid>

        </DockPanel>







    </Grid>


</UserControl>
