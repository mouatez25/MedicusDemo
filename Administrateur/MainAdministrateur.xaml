<UserControl x:Class="Medicus.Administrateur.MainAdministrateur"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
     dx:ThemeManager.ThemeName="Office2010Black"
                       xmlns:dxwuin="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/navigation"
xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Medicus.Administrateur"
                         xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        >

    <Grid Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="80px" />

        <RowDefinition  />
        </Grid.RowDefinitions>
        <dxwui:PageAdornerControl Header="Paramétrage" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Tahoma" Foreground="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" >
            <dxwui:PageAdornerControl.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{Binding}"/>

                    </Grid>
                </DataTemplate>
            </dxwui:PageAdornerControl.HeaderTemplate>
        </dxwui:PageAdornerControl>



        <Grid x:Name="gridhome" ShowGridLines="False" Visibility="Visible" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition  />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Grid.RowSpan="2" Margin="0">

                <Button x:Name="btnMdecin"  Height="60" Width="60" Margin="0,50,0,0" Cursor="Hand" Foreground="#FF59083C" Click="Button_Click" BorderThickness="2" MouseLeave="btnMdecin_MouseLeave" MouseMove="btnMdecin_MouseMove" IsKeyboardFocusWithinChanged="btnMdecin_IsKeyboardFocusWithinChanged" Content="" ToolTip="Créer Session Medecin" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Medicus;component/Images/WebHome_Medical_png.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>

                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="btnuser"  Height="60" Width="60" Margin="0,20,0,0" Cursor="Hand" Foreground="#FF59083C" Click="Button_Click_1" BorderThickness="2" ClipToBounds="True" SnapsToDevicePixels="True" IsKeyboardFocusWithinChanged="btnuser_IsKeyboardFocusWithinChanged" MouseMove="btnuser_MouseMove" MouseLeave="btnuser_MouseLeave" ToolTip="Créer Session Utilisateur" Content="">
                    <Button.Background>
                        <ImageBrush ImageSource="Images/forum-groupe-utilisateurs-icone-4597-128.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                  
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button x:Name="BtnEntête"  Height="60" Width="60" Margin="0,20,0,0" ToolTip="
entête" Cursor="Hand" Foreground="#FF59083C" BorderThickness="2" ClipToBounds="True" SnapsToDevicePixels="True" Click="BtnEntête_Click" IsKeyboardFocusWithinChanged="BtnEntête_IsKeyboardFocusWithinChanged" MouseLeave="BtnEntête_MouseLeave" MouseMove="BtnEntête_MouseMove">
                    <Button.BorderBrush>
                        <ImageBrush/>
                    </Button.BorderBrush>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/edit-find-vieux-remplacez-icone-7990-128.png" TileMode="FlipXY"/>
                    </Button.Background>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                                                <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>

                </Button>
             

            </StackPanel>
            <Menu IsMainMenu="True" Grid.ColumnSpan="2" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Grid.Column="1">
              
                <MenuItem Header="_Tables">
                    <MenuItem.Background>
                        <ImageBrush/>
                    </MenuItem.Background>
                    <MenuItem x:Name="spécialitemenu" Header="_Spécialité Medecin" FontFamily="Times New Roman" FontSize="16" Click="spécialitemenu_Click">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>
                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="Motifemenu" Header="_Motif Visite" FontFamily="Times New Roman" FontSize="16" Click="Motifemenu_Click" >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem x:Name="TyepCasemenu" Visibility="Collapsed" Header="_Types de Cas" FontFamily="Times New Roman" FontSize="16" Click="TyepCasemenu_Click"  >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="MotifDepensemenu" Header="_Motif de Depense" FontFamily="Times New Roman" FontSize="16" Click="MotifDepensemenu_Click"   >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                
                    <MenuItem x:Name="Catalogue" Visibility="Collapsed"  Header="_Liste des Catalogue" FontFamily="Times New Roman" FontSize="16" Click="Catalogue_Click"   >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="Acte" Header="_Liste des Actes" FontFamily="Times New Roman" FontSize="16" Click="Acte_Click"   >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Visibility="Collapsed" />
                    <MenuItem x:Name="quses" Visibility="Collapsed" Header="_Lexique alimentaire pour les Diabétiques" FontFamily="Times New Roman" FontSize="16" Click="quses_Click"   >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/edit_property.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
               
                <MenuItem Header="_Outils" >
                    <MenuItem.Background>
                        <ImageBrush/>
                    </MenuItem.Background>
                    <MenuItem x:Name="ColorSalleAttente" Header="_Couleur" FontFamily="Times New Roman" FontSize="16" Click="ColorSalleAttente_Click">
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/PalleteColor.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="ParamOrdo" Visibility="Collapsed" Header="_Paramétre Ordonnance" FontFamily="Times New Roman" FontSize="16" Click="ParamOrdo_Click" >
                        <MenuItem.Background>
                            <ImageBrush/>
                        </MenuItem.Background>

                        <MenuItem.Icon>
                            <Image Source="Images/PalleteColor.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                </MenuItem>
                <MenuItem Header="_Aide" >
                    <MenuItem.Background>
                        <ImageBrush/>
                    </MenuItem.Background>
                </MenuItem>
            </Menu>



            <Frame x:Name="FrameInterieur" 
  Source="Home.xaml" 
  JournalOwnership="OwnsJournal" 
  NavigationUIVisibility="Hidden" Grid.Row="1" Grid.Column="1" />



        </Grid>

    </Grid>
</UserControl>
